<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Merge and Destroy (Einträge über python)</title><link>https://encarsia.github.io/</link><description></description><atom:link href="https://encarsia.github.io/categories/python.xml" rel="self" type="application/rss+xml"></atom:link><language>de</language><lastBuildDate>Sun, 22 Jan 2017 09:22:10 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Desktopintegrationsbemühungen</title><link>https://encarsia.github.io/posts/application-fortsetzung/</link><dc:creator>Anke (encarsia)</dc:creator><description>&lt;div&gt;&lt;div class="contents warning pull-right topic" id="inhalt"&gt;
&lt;p class="topic-title first"&gt;Inhalt&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/application-fortsetzung/#glade" id="id3"&gt;Glade&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/application-fortsetzung/#icon" id="id4"&gt;Icon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/application-fortsetzung/#headerbar" id="id5"&gt;Headerbar&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/application-fortsetzung/#kommandozeilenoptionen" id="id6"&gt;Kommandozeilenoptionen&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/application-fortsetzung/#optionen-anlegen" id="id7"&gt;Optionen anlegen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/application-fortsetzung/#signal-verbinden" id="id8"&gt;Signal verbinden&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/application-fortsetzung/#optionen-verarbeiten" id="id9"&gt;Optionen verarbeiten&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/application-fortsetzung/#optionen-ubergeben" id="id10"&gt;Optionen übergeben&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/application-fortsetzung/#listings" id="id11"&gt;Listings&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/application-fortsetzung/#id2" id="id12"&gt;Glade&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/application-fortsetzung/#python" id="id13"&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Desktopintegration: Icon, Headerbar, Kommandozeilenoptionen&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;(Fortsetzung zum Artikel &lt;a class="reference external" href="https://encarsia.github.io/posts/application"&gt;GtkApplication&lt;/a&gt;)&lt;/p&gt;
&lt;a class="reference external image-reference" href="https://encarsia.github.io/images/15_application.png"&gt;&lt;img alt="/images/15_application.thumbnail.png" src="https://encarsia.github.io/images/15_application.thumbnail.png"&gt;&lt;/a&gt;
&lt;div class="section" id="glade"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/posts/application-fortsetzung/#id3"&gt;Glade&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="icon"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/posts/application-fortsetzung/#id4"&gt;Icon&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Einem Fenster lässt sich direkt in Glade unter &lt;em&gt;"Allgemein &amp;gt; Darstellung &amp;gt; Symboldatei"&lt;/em&gt; ein Icon auswählen. Das Problem dabei ist, dass Glade Bilddateien nur anzeigt, wenn sie sich im selben Verzeichnis wie die Gladedatei selbst befinden, auch wenn man ein anderes Verzeichnis auswählt.&lt;/p&gt;
&lt;p&gt;Am einfachsten behebt man dies, indem man die Gladedatei in einem Texteditor bearbeitet und den (relativen) Pfad zum &lt;a class="reference external" href="https://openclipart.org/detail/22535/ducky-icon"&gt;Icon&lt;/a&gt; angibt. Diese Einstellung bleibt auch erhalten, wenn die Datei später mit Glade bearbeitet und gespeichert wird:&lt;/p&gt;
&lt;pre class="code xml"&gt;&lt;a name="rest_code_b9af2ace714741058c583bd8f2146d6b-1"&gt;&lt;/a&gt;&lt;span class="nt"&gt;&amp;lt;object&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"GtkApplicationWindow"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"window"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_b9af2ace714741058c583bd8f2146d6b-2"&gt;&lt;/a&gt;  ...
&lt;a name="rest_code_b9af2ace714741058c583bd8f2146d6b-3"&gt;&lt;/a&gt;  &lt;span class="c"&gt;&amp;lt;!-- &amp;lt;property name="icon"&amp;gt;duckyou.svg&amp;lt;/property&amp;gt; --&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_b9af2ace714741058c583bd8f2146d6b-4"&gt;&lt;/a&gt;  &lt;span class="nt"&gt;&amp;lt;property&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"icon"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;../files/duckyou.svg&lt;span class="nt"&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_b9af2ace714741058c583bd8f2146d6b-5"&gt;&lt;/a&gt;  ...
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="headerbar"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/posts/application-fortsetzung/#id5"&gt;Headerbar&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Die Headerbar wurde mit GNOME 3.10 eingeführt und vereint Titelleiste und Toolbar in einem Widget, d.h neben Titel und Untertitel können rechts und/oder links verschiedene Widgets (Menüs, Buttons) angelegt sowie clientseitige Fensterkontrollknöpfe angezeigt werden.&lt;/p&gt;
&lt;p&gt;Die Headerbar ist optional. Möchte man sie nutzen, muss in den Fenstereinstellungen &lt;em&gt;"Allgemein &amp;gt; Darstellung &amp;gt; Klienseitige Fensterdekoration"&lt;/em&gt; ausgewählt werden. Daraufhin erscheint im oberen Bereich des Fensters ein reservierter Bereich, in dem die Headerbar platziert wird. Wird die Headerbar außerhalb davon platziert, wird weiterhin zusätzlich die normale Titelleiste angezeigt.&lt;/p&gt;
&lt;img alt="/images/15_headerbarglade.png" src="https://encarsia.github.io/images/15_headerbarglade.png"&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="kommandozeilenoptionen"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/posts/application-fortsetzung/#id6"&gt;Kommandozeilenoptionen&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;GtkApplication&lt;/em&gt; stellt die erforderlichen Mittel für anwendungseigene Kommandozeilenoptionen zur Verfügung (&lt;a class="reference external" href="https://wiki.gnome.org/HowDoI/GtkApplication/CommandLine"&gt;Handling command line options in GApplication&lt;/a&gt;).&lt;/p&gt;
&lt;div class="section" id="optionen-anlegen"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/posts/application-fortsetzung/#id7"&gt;Optionen anlegen&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Verfügbare Optionen werden mit der Funktion &lt;tt class="docutils literal"&gt;add_main_option_entries(entrylist)&lt;/tt&gt; hinzugefügt. Diese Einträge haben das Format &lt;em&gt;GLib.OptionEntry&lt;/em&gt;, welches allerlei Parameter besitzt.&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_00145f124f004dfa9fa60f81b35f5f29-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_00145f124f004dfa9fa60f81b35f5f29-2"&gt;&lt;/a&gt;    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Gtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Application&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"org.application.test"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Gio&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ApplicationFlags&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_00145f124f004dfa9fa60f81b35f5f29-3"&gt;&lt;/a&gt;    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_main_option_entries&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
&lt;a name="rest_code_00145f124f004dfa9fa60f81b35f5f29-4"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_option_entry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"--version"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"Show version numbers and exit"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_00145f124f004dfa9fa60f81b35f5f29-5"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_option_entry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"--setlabel"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"Set label widget"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;GLib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OptionArg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;STRING&lt;/span&gt;&lt;span class="p"&gt;,),&lt;/span&gt;
&lt;a name="rest_code_00145f124f004dfa9fa60f81b35f5f29-6"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_option_entry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"--bollocks"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"Additional test option - exit"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_00145f124f004dfa9fa60f81b35f5f29-7"&gt;&lt;/a&gt;    &lt;span class="p"&gt;])&lt;/span&gt;
&lt;a name="rest_code_00145f124f004dfa9fa60f81b35f5f29-8"&gt;&lt;/a&gt;
&lt;a name="rest_code_00145f124f004dfa9fa60f81b35f5f29-9"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;create_option_entry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;long_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;short_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;GLib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OptionArg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NONE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;arg_data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arg_description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_00145f124f004dfa9fa60f81b35f5f29-10"&gt;&lt;/a&gt;    &lt;span class="n"&gt;option&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;GLib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OptionEntry&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_00145f124f004dfa9fa60f81b35f5f29-11"&gt;&lt;/a&gt;    &lt;span class="n"&gt;option&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;long_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;long_name&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lstrip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_00145f124f004dfa9fa60f81b35f5f29-12"&gt;&lt;/a&gt;    &lt;span class="n"&gt;option&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;short_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;short_name&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;short_name&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lstrip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_00145f124f004dfa9fa60f81b35f5f29-13"&gt;&lt;/a&gt;    &lt;span class="n"&gt;option&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;
&lt;a name="rest_code_00145f124f004dfa9fa60f81b35f5f29-14"&gt;&lt;/a&gt;    &lt;span class="n"&gt;option&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arg&lt;/span&gt;
&lt;a name="rest_code_00145f124f004dfa9fa60f81b35f5f29-15"&gt;&lt;/a&gt;    &lt;span class="n"&gt;option&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;arg_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arg_data&lt;/span&gt;
&lt;a name="rest_code_00145f124f004dfa9fa60f81b35f5f29-16"&gt;&lt;/a&gt;    &lt;span class="n"&gt;option&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;description&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;description&lt;/span&gt;
&lt;a name="rest_code_00145f124f004dfa9fa60f81b35f5f29-17"&gt;&lt;/a&gt;    &lt;span class="n"&gt;option&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;arg_description&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arg_description&lt;/span&gt;
&lt;a name="rest_code_00145f124f004dfa9fa60f81b35f5f29-18"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;option&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="signal-verbinden"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/posts/application-fortsetzung/#id8"&gt;Signal verbinden&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Der &lt;em&gt;GtkApplication&lt;/em&gt;-eigene "handle-local-options"-Handler verarbeitet die Optionen. Sobald Optionen angelegt sind, wird dieses Signal noch vor dem "startup"-Signal ausgelöst&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_9ceb2fe5608a47f29422a074a57bf0ed-1"&gt;&lt;/a&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"handle-local-options"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;on_local_option&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="optionen-verarbeiten"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/posts/application-fortsetzung/#id9"&gt;Optionen verarbeiten&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Die an die Handler-Funktion übergebene &lt;tt class="docutils literal"&gt;option&lt;/tt&gt; ist ein Element der Klasse &lt;em&gt;GLib.VariantDict&lt;/em&gt;. Mit &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;contains("option")&lt;/span&gt;&lt;/tt&gt; lässt sich nach der übergebenen Option suchen.&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_5e02c3813d7e4a5d90084ba8832f4dc6-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;on_local_option&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;option&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_5e02c3813d7e4a5d90084ba8832f4dc6-2"&gt;&lt;/a&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;option&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"option1"&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_5e02c3813d7e4a5d90084ba8832f4dc6-3"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;#do something and exit normally&lt;/span&gt;
&lt;a name="rest_code_5e02c3813d7e4a5d90084ba8832f4dc6-4"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;a name="rest_code_5e02c3813d7e4a5d90084ba8832f4dc6-5"&gt;&lt;/a&gt;    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;option&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"option2"&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_5e02c3813d7e4a5d90084ba8832f4dc6-6"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;#do something different and exit&lt;/span&gt;
&lt;a name="rest_code_5e02c3813d7e4a5d90084ba8832f4dc6-7"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;a name="rest_code_5e02c3813d7e4a5d90084ba8832f4dc6-8"&gt;&lt;/a&gt;    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;option&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"option3"&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_5e02c3813d7e4a5d90084ba8832f4dc6-9"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;#do more and continue&lt;/span&gt;
&lt;a name="rest_code_5e02c3813d7e4a5d90084ba8832f4dc6-10"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Ein übergebener String kann extrahiert werden, indem &lt;em&gt;GLib.VariantDict&lt;/em&gt; mit &lt;tt class="docutils literal"&gt;end()&lt;/tt&gt; in &lt;em&gt;GLib.Variant&lt;/em&gt; konvertiert wird, das sich wiederum mit &lt;tt class="docutils literal"&gt;keys()&lt;/tt&gt; auslesen lässt:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_8570f92e074140dd89a95caa746b4810-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;var&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;GLib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;VariantDict&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;option&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_8570f92e074140dd89a95caa746b4810-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;option_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;/pre&gt;&lt;dl class="docutils"&gt;
&lt;dt&gt;Ein Return-Wert ist zwingend erforderlich, er entspricht dabei dem Exit-Status:&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last simple"&gt;
&lt;li&gt;&lt;strong&gt;-1&lt;/strong&gt;: Anwendung wird weiter ausgeführt&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;0&lt;/strong&gt;: erfolgreiche Ausführung, Anwendung wird beendet, "startup/activate" werden nicht ausgeführt&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;1&lt;/strong&gt; bzw. positiver Wert: nicht erfolgreiche Ausführung, Anwendung wird beendet&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class="section" id="optionen-ubergeben"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/posts/application-fortsetzung/#id10"&gt;Optionen übergeben&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Die Option, die immer verfügbar ist, ist &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--help&lt;/span&gt;&lt;/tt&gt;. Hier werden unter "Anwendungsoptionen" die angelegten Optionen samt Beschreibung aufgeführt. Die Optionen können wie definiert angegeben werden:&lt;/p&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_d9bbf99da4d14248aa20a617639ccb45-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; python script.py --version
&lt;a name="rest_code_d9bbf99da4d14248aa20a617639ccb45-2"&gt;&lt;/a&gt;&lt;span class="go"&gt;Python: 3.6.0&lt;/span&gt;
&lt;a name="rest_code_d9bbf99da4d14248aa20a617639ccb45-3"&gt;&lt;/a&gt;&lt;span class="go"&gt;GTK+:   3.22.6&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;oder mit &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--setlabel&lt;/span&gt;&lt;/tt&gt; einen String an &lt;em&gt;Gtk.Label&lt;/em&gt; übergeben:&lt;/p&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_59f96d814d454228861fbc672a1dca07-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; python script.py --setlabel &lt;span class="s2"&gt;"I can haz options!"&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a href="https://encarsia.github.io/posts/application-fortsetzung/"&gt;Weiterlesen…&lt;/a&gt; (2 min verbleiben zum Lesen)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>glade</category><category>python</category><guid>https://encarsia.github.io/posts/application-fortsetzung/</guid><pubDate>Sun, 15 Jan 2017 12:51:29 GMT</pubDate></item><item><title>Selbständig</title><link>https://encarsia.github.io/posts/application/</link><dc:creator>Anke (encarsia)</dc:creator><description>&lt;div&gt;&lt;div class="contents warning pull-right topic" id="inhalt"&gt;
&lt;p class="topic-title first"&gt;Inhalt&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/application/#xml-dateien" id="id4"&gt;XML-Dateien&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/application/#glade" id="id5"&gt;Glade&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/application/#gmenu" id="id6"&gt;GMenu&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/application/#python" id="id7"&gt;Python&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/application/#initialisierung-von-gtkapplication" id="id8"&gt;Initialisierung von &lt;em&gt;GtkApplication&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/application/#appmenu" id="id9"&gt;Appmenu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/application/#starten-und-beenden" id="id10"&gt;Starten und Beenden&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/application/#links" id="id11"&gt;Links&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/application/#listings" id="id12"&gt;Listings&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/application/#id1" id="id13"&gt;Glade&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/application/#id2" id="id14"&gt;GMenu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/application/#id3" id="id15"&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Programm als GtkApplication laufen lassen&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;GtkApplication&lt;/em&gt; handhabt verschiedene wichtige Aspekte einer GTK+-Anwendung, wie etwa der GTK+-Initialisierung, dem Sessionmanagement und der Desktopintegration.&lt;/p&gt;
&lt;a class="reference external image-reference" href="https://encarsia.github.io/images/14_application.png"&gt;&lt;img alt="/images/14_application.thumbnail.png" src="https://encarsia.github.io/images/14_application.thumbnail.png"&gt;&lt;/a&gt;
&lt;div class="section" id="xml-dateien"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/posts/application/#id4"&gt;XML-Dateien&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="glade"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/posts/application/#id5"&gt;Glade&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In Glade verändert sich im Prinzip nichts. Als Hauptfenster sollten &lt;em&gt;GtkApplicationWindows&lt;/em&gt; zum Einsatz kommen. Als Beispiel wird hier das Gladefile aus dem &lt;a class="reference external" href="https://encarsia.github.io/posts/dialoge"&gt;Artikel zu Dialogen&lt;/a&gt; wieder verwendet.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="gmenu"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/posts/application/#id6"&gt;GMenu&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Die GNOME-Shell unterstützt Appmenüs, erreichbar über das obere Panel. Die XML-Datei muss so formatiert sein, dass sie als &lt;em&gt;GioMenu&lt;/em&gt; erkannt wird:&lt;/p&gt;
&lt;pre class="code xml"&gt;&lt;a name="rest_code_32034b8ef2f446e996c9f6f4013a95a5-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;&amp;lt;?xml version="1.0"?&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_32034b8ef2f446e996c9f6f4013a95a5-2"&gt;&lt;/a&gt;&lt;span class="nt"&gt;&amp;lt;interface&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_32034b8ef2f446e996c9f6f4013a95a5-3"&gt;&lt;/a&gt; &lt;span class="nt"&gt;&amp;lt;menu&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"appmenu"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_32034b8ef2f446e996c9f6f4013a95a5-4"&gt;&lt;/a&gt;    &lt;span class="nt"&gt;&amp;lt;section&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_32034b8ef2f446e996c9f6f4013a95a5-5"&gt;&lt;/a&gt;      &lt;span class="nt"&gt;&amp;lt;item&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_32034b8ef2f446e996c9f6f4013a95a5-6"&gt;&lt;/a&gt;        &lt;span class="nt"&gt;&amp;lt;attribute&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"label"&lt;/span&gt; &lt;span class="na"&gt;translatable=&lt;/span&gt;&lt;span class="s"&gt;"yes"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Menu Item&lt;span class="nt"&gt;&amp;lt;/attribute&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_32034b8ef2f446e996c9f6f4013a95a5-7"&gt;&lt;/a&gt;        &lt;span class="nt"&gt;&amp;lt;attribute&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"action"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;app.item&lt;span class="nt"&gt;&amp;lt;/attribute&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_32034b8ef2f446e996c9f6f4013a95a5-8"&gt;&lt;/a&gt;      &lt;span class="nt"&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_32034b8ef2f446e996c9f6f4013a95a5-9"&gt;&lt;/a&gt;    &lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_32034b8ef2f446e996c9f6f4013a95a5-10"&gt;&lt;/a&gt;  &lt;span class="nt"&gt;&amp;lt;/menu&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_32034b8ef2f446e996c9f6f4013a95a5-11"&gt;&lt;/a&gt;&lt;span class="nt"&gt;&amp;lt;/interface&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Von Glade selbst würde diese XML-Datei als veraltetes Format erkannt, aber sie lässt sich trotzdem von &lt;em&gt;GtkBuilder&lt;/em&gt; laden und anschließend kann man die Identifier nutzen.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="python"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/posts/application/#id7"&gt;Python&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="initialisierung-von-gtkapplication"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/posts/application/#id8"&gt;Initialisierung von &lt;em&gt;GtkApplication&lt;/em&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Bei der Initialisierung wird eine &lt;em&gt;application_id&lt;/em&gt;- und &lt;em&gt;flags&lt;/em&gt;-Angabe benötigt. Letztere können in der Regel bei 0 bzw. FLAGS_NONE belassen werden (siehe &lt;a class="reference external" href="https://lazka.github.io/pgi-docs/Gio-2.0/flags.html#Gio.ApplicationFlags"&gt;Gio.ApplicationFlags&lt;/a&gt;), die Konventionen für die application_id sind &lt;a class="reference external" href="https://people.gnome.org/~gcampagna/docs/Gio-2.0/Gio.Application.id_is_valid.html"&gt;hier dokumentiert&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Die Application kann nun mit verschiedenen Signalen verbunden werden, die zu bestimmten Ereignissen ausgelöst werden, aber es muss mindestens &lt;tt class="docutils literal"&gt;activate&lt;/tt&gt; verbunden werden:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_b69a215f39664464a1ac67a465f89bfa-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_b69a215f39664464a1ac67a465f89bfa-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_b69a215f39664464a1ac67a465f89bfa-3"&gt;&lt;/a&gt;    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Gtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Application&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"org.application.test"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_b69a215f39664464a1ac67a465f89bfa-4"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;#self.app.connect("startup", self.on_app_startup) #optional&lt;/span&gt;
&lt;a name="rest_code_b69a215f39664464a1ac67a465f89bfa-5"&gt;&lt;/a&gt;    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"activate"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;on_app_activate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_b69a215f39664464a1ac67a465f89bfa-6"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;#self.app.connect("shutdown", self.on_app_shutdown) #optional&lt;/span&gt;
&lt;a name="rest_code_b69a215f39664464a1ac67a465f89bfa-7"&gt;&lt;/a&gt;
&lt;a name="rest_code_b69a215f39664464a1ac67a465f89bfa-8"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;on_app_activate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_b69a215f39664464a1ac67a465f89bfa-9"&gt;&lt;/a&gt;
&lt;a name="rest_code_b69a215f39664464a1ac67a465f89bfa-10"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;#setting up GtkBuilder etc.&lt;/span&gt;
&lt;a name="rest_code_b69a215f39664464a1ac67a465f89bfa-11"&gt;&lt;/a&gt;    &lt;span class="o"&gt;...&lt;/span&gt;
&lt;a name="rest_code_b69a215f39664464a1ac67a465f89bfa-12"&gt;&lt;/a&gt;    &lt;span class="o"&gt;...&lt;/span&gt;
&lt;a name="rest_code_b69a215f39664464a1ac67a465f89bfa-13"&gt;&lt;/a&gt;    &lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="appmenu"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/posts/application/#id9"&gt;Appmenu&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Wie oben bereits erwähnt, lässt sich die GMenu-XML von &lt;em&gt;GtkBuilder&lt;/em&gt; laden, dann wird das Menü der Application zugewiesen:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_533154470eaa4a069b9e9a6f9d7d4f96-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;builder&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_from_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"menu.ui"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_533154470eaa4a069b9e9a6f9d7d4f96-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_app_menu&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;builder&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_object&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"appmenu"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Die zu den Menüeinträgen verknüpften Funktionen müssen nun als Actions, genauer &lt;em&gt;GioSimpleActions&lt;/em&gt;, erstellt und analog zur herkömmlichen Signalverknüpfung über &lt;tt class="docutils literal"&gt;connect&lt;/tt&gt; verbunden werden.&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_66ef8e7a59e34d8eb28d1d01e4bb23a7-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;add_simple_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_66ef8e7a59e34d8eb28d1d01e4bb23a7-2"&gt;&lt;/a&gt;    &lt;span class="n"&gt;action&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Gio&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SimpleAction&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_66ef8e7a59e34d8eb28d1d01e4bb23a7-3"&gt;&lt;/a&gt;    &lt;span class="n"&gt;action&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"activate"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_66ef8e7a59e34d8eb28d1d01e4bb23a7-4"&gt;&lt;/a&gt;    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;action&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Im Beispiel werden Actions zum Aufrufen der Dialoge erstellt.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="starten-und-beenden"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/posts/application/#id10"&gt;Starten und Beenden&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;GtkApplication&lt;/em&gt; übernimmt die Handhabung des GTK+-Mainloops, das heißt, es nicht mehr notwendig GTK+ manuell zu starten oder zu beenden. Stattdessen werden &lt;tt class="docutils literal"&gt;run()&lt;/tt&gt; und &lt;tt class="docutils literal"&gt;quit()&lt;/tt&gt; verwendet:&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_40d9da515ee34d02b0ed9fb0d483a370-1"&gt;&lt;/a&gt;Gtk.main()      -&amp;gt;  app.run(argv)
&lt;a name="rest_code_40d9da515ee34d02b0ed9fb0d483a370-2"&gt;&lt;/a&gt;Gtk.main_quit() -&amp;gt;  app.quit()
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="links"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/posts/application/#id11"&gt;Links&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://developer.gnome.org/gtk3/stable/GtkApplication.html"&gt;GNOME Developer: GtkApplication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.bachsau.com/2015/07/13/how-to-use-gtk-3-in-python-to-manage-your-whole-application/"&gt;How to use GTK+ 3 in Python to manage your whole application&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://stackoverflow.com/questions/19481439/how-to-create-a-complete-menu-using-gio-actions-in-pygi-gtk"&gt;Stackoverflow: How to create a complete menu using GIO Actions in PyGI GTK?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://encarsia.github.io/posts/application/"&gt;Weiterlesen…&lt;/a&gt; (2 min verbleiben zum Lesen)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;</description><category>glade</category><category>python</category><guid>https://encarsia.github.io/posts/application/</guid><pubDate>Sat, 14 Jan 2017 12:51:29 GMT</pubDate></item><item><title>NoN: Fortschritte</title><link>https://encarsia.github.io/posts/non-fortschritte/</link><dc:creator>Anke (encarsia)</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;strong&gt;Knights of Ni - Fortschritte&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Wie &lt;a class="reference external" href="https://encarsia.github.io/posts/neues-projekt-knights-of-ni"&gt;bereits erwähnt&lt;/a&gt;, bastel ich aktuell an einer GUI für &lt;a class="reference external" href="https://getnikola.com"&gt;Nikola&lt;/a&gt;, die einige Fortschritte vorzuweisen hat:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Titelleiste entfernt, da Headerbar benutzt wird&lt;/li&gt;
&lt;li&gt;Wechseln zwischen Nikola-Instanzen (zuletzt benutzte wird gespeichert)&lt;/li&gt;
&lt;li&gt;Bookmarkfunktion (bislang können nur Bookmarks hinzugefügt werden, bei Bedarf manuell aus der config entfernen)&lt;/li&gt;
&lt;li&gt;Untersützung für mehrsprachige Seiten:&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Anzeige der Standardsprache und der konfigurierten anderen Sprachen&lt;/li&gt;
&lt;li&gt;Posts/Pages-Tab zeigt Vorhandensein von Übersetzungen an&lt;/li&gt;
&lt;li&gt;Tab "Translations" zeigt vorhandene Dateien an&lt;/li&gt;
&lt;li&gt;per Rechtsklick können neue Übersetzungen angelegt werden, dabei wird der Ausgangsbeitrag gemäß entsprechendem Dateimuster gespeichert&lt;/li&gt;
&lt;li&gt;&lt;em&gt;ich weiß noch nicht, wie sinnvoll dieser separate Tab ist (Redundanz) und ob ich ihn beibehalte&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;hat der Artikel keinen Titel, wird das interne Kürzel (slug) oder, falls ebenfalls nicht vorhanden, der Dateiname angezeigt&lt;/li&gt;
&lt;li&gt;gesprächiges Log, um vorzutäuschen, dass ganz viel wichtiger Kram passiert&lt;/li&gt;
&lt;/ul&gt;
&lt;a class="reference external image-reference" href="https://encarsia.github.io/images/non2.png"&gt;&lt;img alt="/images/non2.thumbnail.png" src="https://encarsia.github.io/images/non2.thumbnail.png"&gt;&lt;/a&gt;
&lt;p&gt;Das läuft aus meiner Sicht schon alles erstaunlich gut. Dummerweise habe ich bei der Verwendung von Glade (und auch Python, aber vor allem Glade) inzwischen ebenfalls einige Fortschritte gemacht, was mich ernsthaft zur Überlegung geführt hat, das GoProTool nochmal zu überarbeiten. Die Oberfläche würde ich belassen, aber viel Funktionalität könnte effizienter umgesetzt werden. Ich stelle das mal hinten an.&lt;/p&gt;
&lt;p&gt;Geplant ist nun ein simples Nikola-unabhängiges Vorlagensystem und anschließend ist etwas Fleißarbeit bei der Lokalisation erforderlich.&lt;/p&gt;&lt;/div&gt;</description><category>nikola</category><category>python</category><guid>https://encarsia.github.io/posts/non-fortschritte/</guid><pubDate>Sun, 08 Jan 2017 21:18:52 GMT</pubDate></item><item><title>YouNiversity: Python Tricks</title><link>https://encarsia.github.io/posts/youniversity-python-tricks/</link><dc:creator>Anke (encarsia)</dc:creator><description>&lt;div&gt;&lt;p&gt;Daniel Bader zeigt auf seinem YouTube-Kanal allerlei Nützliches zum Thema Python.&lt;/p&gt;
&lt;div class="youtube-video"&gt;
&lt;iframe width="480" height="344" src="https://www.youtube.com/embed/gllUwQnYVww?rel=0&amp;amp;hd=1&amp;amp;wmode=transparent"&gt;&lt;/iframe&gt;
&lt;/div&gt;&lt;p&gt;Aktuell gibt es sein in Arbeit befindliches Buch &lt;em&gt;"Python Tricks. The Book"&lt;/em&gt; gerade zum unschlagbaren Preis von 9 $ (+ 1,71 $ deutsche Umsatzsteuer): &lt;a class="reference external" href="https://dbader.org/products/python-tricks-book/"&gt;Klick&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Es bestehen keine persönlichen oder/und finanziellen Verbindungen.&lt;/p&gt;&lt;/div&gt;</description><category>python</category><category>video</category><category>youtube</category><guid>https://encarsia.github.io/posts/youniversity-python-tricks/</guid><pubDate>Wed, 04 Jan 2017 19:51:38 GMT</pubDate></item><item><title>Dialoge</title><link>https://encarsia.github.io/posts/dialoge/</link><dc:creator>Anke (encarsia)</dc:creator><description>&lt;div&gt;&lt;div class="contents warning pull-right topic" id="inhalt"&gt;
&lt;p class="topic-title first"&gt;Inhalt&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/dialoge/#glade" id="id3"&gt;Glade&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/dialoge/#aboutdialog" id="id4"&gt;AboutDialog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/dialoge/#messagedialog" id="id5"&gt;MessageDialog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/dialoge/#buttons-und-responses" id="id6"&gt;Buttons und Responses&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/dialoge/#wiederherstellbare-dialoge" id="id7"&gt;Wiederherstellbare Dialoge&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/dialoge/#python" id="id8"&gt;Python&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/dialoge/#responses" id="id9"&gt;Responses&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/dialoge/#delete-event" id="id10"&gt;Delete-event&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/dialoge/#listings" id="id11"&gt;Listings&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/dialoge/#id1" id="id12"&gt;Glade&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/dialoge/#id2" id="id13"&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Anzeige von Dialogfenstern&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Dialoge sind ergänzende Fenster zur Anwendung und dienen der Interaktion mit dem Benutzer, in denen Informationen angezeigt werden oder Eingaben vom Benutzer abgefragt werden können. Die &lt;em&gt;GtkDialog&lt;/em&gt;-Klasse bietet einige Unterklassen für gebräuchliche Anzeigen und Abfragen, wie die im Beispiel verwendeten &lt;em&gt;About&lt;/em&gt;- und &lt;em&gt;MessageDialog&lt;/em&gt;.&lt;/p&gt;
&lt;a class="reference external image-reference" href="https://encarsia.github.io/images/13_dialoge.png"&gt;&lt;img alt="/images/13_dialoge.thumbnail.png" src="https://encarsia.github.io/images/13_dialoge.thumbnail.png"&gt;&lt;/a&gt;
&lt;div class="section" id="glade"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/posts/dialoge/#id3"&gt;Glade&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Dialog-Widgets findet man unter &lt;em&gt;"Oberste Ebene"&lt;/em&gt; neben den Fenster-Widgets.&lt;/p&gt;
&lt;p&gt;Dialoge sind ergänzende Fenster, um den Fokus des Nutzers zu lenken. Sie können direkt an ein übergeordnetes Fenster angeheftet werden, mindestens aber müssen sie unter &lt;em&gt;"Allgemein &amp;gt; Fensterattribute &amp;gt; Vorübergehend für:"&lt;/em&gt; einem Eltern-Fenster zugeordnet werden.&lt;/p&gt;
&lt;div class="section" id="aboutdialog"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/posts/dialoge/#id4"&gt;AboutDialog&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Das "About"-Dialogfenster bietet in der Regel Informationen zum Projekt, darunter Version, Lizenz, beteiligte Programmierer, Übersetzer etc. Dies alles lässt sich sehr einfach direkt in Glade angeben.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="messagedialog"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/posts/dialoge/#id5"&gt;MessageDialog&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Der MessageDialog ist ein Standarddialog zum Anzeigen oder Abfragen von Informationen. Er ist so konfiguriert, dass er keine eigene Fensterdekoration besitzt und nicht als Fenster in der Taskbar erscheint. Außerdem bietet er die Möglichkeit, Standardbuttons einzurichten.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="buttons-und-responses"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/posts/dialoge/#id6"&gt;Buttons und Responses&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Dialoge besitzen bereits intern über eine &lt;em&gt;GtkButtonBox&lt;/em&gt;, die mit beliebigen Buttons befüllt werden kann.&lt;/p&gt;
&lt;p&gt;Im Gegensatz zu Buttons in normalen Fenstern müssen in Dialogen keine Signale auf &lt;em&gt;clicked&lt;/em&gt; angelegt werden, sondern man legt in den Button-Eigenschaften unter &lt;em&gt;"Allgemein"&lt;/em&gt; eine Antwortkennung (Response) fest (int) und belegt das Signal &lt;em&gt;response&lt;/em&gt; des &lt;em&gt;GtkDialog&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Standardbuttons wie im MessageDialog auswählbar besitzen eine vorgegebene Response:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Ok&lt;/strong&gt; -5&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Abbrechen&lt;/strong&gt; -6&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Schließen&lt;/strong&gt; -7&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ja&lt;/strong&gt; -8&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Nein&lt;/strong&gt; -9&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;[X]&lt;/strong&gt; -4&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Der große Vorteil der Responses besteht darin, dass sie sich direkt auf das Dialog-Objekt beziehen; man kann die Responses in einer Funktion verarbeiten und muss dies nicht für jeden einzelnen Button vornehmen.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="wiederherstellbare-dialoge"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/posts/dialoge/#id7"&gt;Wiederherstellbare Dialoge&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Das Problem von per &lt;em&gt;destroy&lt;/em&gt;-Signal geschlossenen Fenstern besteht darin, dass sie sich nicht wieder aufrufen lassen. Deshalb wird stattdessen das Signal &lt;em&gt;delete-event&lt;/em&gt; belegt.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="python"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/posts/dialoge/#id8"&gt;Python&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="responses"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/posts/dialoge/#id9"&gt;Responses&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Beim Auslösen des &lt;em&gt;response&lt;/em&gt;-Signals wird die Antwortkennung als Parameter übergeben, so kann wie bereits erwähnt jede innerhalb einer einzelnen Funktion verarbeitet werden:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_ad44bdbc21104fb9bd2000d67f46dc1d-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;on_dialog_response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_ad44bdbc21104fb9bd2000d67f46dc1d-2"&gt;&lt;/a&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_ad44bdbc21104fb9bd2000d67f46dc1d-3"&gt;&lt;/a&gt;        &lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hide_on_delete&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_ad44bdbc21104fb9bd2000d67f46dc1d-4"&gt;&lt;/a&gt;    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_ad44bdbc21104fb9bd2000d67f46dc1d-5"&gt;&lt;/a&gt;        &lt;span class="n"&gt;do&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;something&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_ad44bdbc21104fb9bd2000d67f46dc1d-6"&gt;&lt;/a&gt;    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_ad44bdbc21104fb9bd2000d67f46dc1d-7"&gt;&lt;/a&gt;        &lt;span class="n"&gt;do&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;something&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;different&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="delete-event"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/posts/dialoge/#id10"&gt;Delete-event&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Mit der Funktion &lt;tt class="docutils literal"&gt;hide_on_delete()&lt;/tt&gt; ausgeblendete Dialoge oder reguläre Fenster lassen sich mit &lt;tt class="docutils literal"&gt;show_all()&lt;/tt&gt; wieder anzeigen:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_f19e6a8dd3624fc8b34bbf4541fcdd5b-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;on_dialog_delete_event&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_f19e6a8dd3624fc8b34bbf4541fcdd5b-2"&gt;&lt;/a&gt;    &lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hide_on_delete&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_f19e6a8dd3624fc8b34bbf4541fcdd5b-3"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a href="https://encarsia.github.io/posts/dialoge/"&gt;Weiterlesen…&lt;/a&gt; (2 min verbleiben zum Lesen)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>glade</category><category>python</category><guid>https://encarsia.github.io/posts/dialoge/</guid><pubDate>Sat, 31 Dec 2016 16:51:29 GMT</pubDate></item><item><title>Ansichtssache</title><link>https://encarsia.github.io/posts/ansichtssache/</link><dc:creator>Anke (encarsia)</dc:creator><description>&lt;div&gt;&lt;div class="contents warning pull-right topic" id="inhalt"&gt;
&lt;p class="topic-title first"&gt;Inhalt&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/ansichtssache/#treestore-vs-liststore" id="id5"&gt;TreeStore vs. ListStore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/ansichtssache/#glade" id="id6"&gt;Glade&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/ansichtssache/#treemodelsort" id="id7"&gt;TreeModelSort&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/ansichtssache/#treemodelfilter" id="id8"&gt;TreeModelFilter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/ansichtssache/#formatierung-aus-dem-modell-laden" id="id9"&gt;Formatierung aus dem Modell laden&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/ansichtssache/#python" id="id10"&gt;Python&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/ansichtssache/#id1" id="id11"&gt;TreeModelSort&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/ansichtssache/#id2" id="id12"&gt;TreeModelFilter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/ansichtssache/#listings" id="id13"&gt;Listings&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/ansichtssache/#id3" id="id14"&gt;Glade&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/ansichtssache/#id4" id="id15"&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Daten anzeigen mit TreeStore&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;(Fortsetzung zum &lt;a class="reference external" href="https://encarsia.github.io/posts/uberlistet"&gt;ListStore-Artikel&lt;/a&gt;)&lt;/p&gt;
&lt;a class="reference external image-reference" href="https://encarsia.github.io/images/12_treestore.png"&gt;&lt;img alt="/images/12_treestore.thumbnail.png" src="https://encarsia.github.io/images/12_treestore.thumbnail.png" style="width: 480px;"&gt;&lt;/a&gt;
&lt;div class="section" id="treestore-vs-liststore"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/posts/ansichtssache/#id5"&gt;TreeStore vs. ListStore&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Im Gegensatz zum ListStore können Zeilen eines TreeStores ihrerseits Kind-Elemente besitzen, die &lt;tt class="docutils literal"&gt;append&lt;/tt&gt;-Funktion benötigt demzufolge ein weiteren Parameter, der einen Bezug zu einer anderen Datenzeile anzeigt:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_7791c47c68794774ab99a0fdc67b8614-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;#append row to liststore&lt;/span&gt;
&lt;a name="rest_code_7791c47c68794774ab99a0fdc67b8614-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;store&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;value1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;value2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;value3&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;a name="rest_code_7791c47c68794774ab99a0fdc67b8614-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_7791c47c68794774ab99a0fdc67b8614-4"&gt;&lt;/a&gt;&lt;span class="c1"&gt;#append row to treestore&lt;/span&gt;
&lt;a name="rest_code_7791c47c68794774ab99a0fdc67b8614-5"&gt;&lt;/a&gt;&lt;span class="n"&gt;store&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="n"&gt;value1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;value2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;value3&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Der Wert der Variable &lt;em&gt;parent&lt;/em&gt; ist entweder&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;None&lt;/strong&gt;, wenn die Zeile keine übergeordnete Zeile besitzt, oder&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TreeIter&lt;/strong&gt;, der zur übergeordneten Zeile zeigt&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Der TreeIter wird beim Erstellen einer Zeile erzeugt, untergeordnete Zeilen werden nach folgendem Schema angelegt:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_b1115020e75d4c2dbc93a5d1a2253f32-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;row1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;store&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="n"&gt;value1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;value2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;value3&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;a name="rest_code_b1115020e75d4c2dbc93a5d1a2253f32-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;row2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;store&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;row1&lt;/span&gt;&lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="n"&gt;value1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;value2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;value3&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Man erhält den &lt;em&gt;TreeIter&lt;/em&gt;-Wert einer Zeile am einfachsten über die &lt;tt class="docutils literal"&gt;get_selection&lt;/tt&gt;-Funktion des &lt;em&gt;GtkTreeSelection&lt;/em&gt;-Widgets von TreeView (wird automatisch angelegt).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="glade"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/posts/ansichtssache/#id6"&gt;Glade&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Im Beispiel werden zwei TreeStores und die jeweils enthaltenen Spalten angelegt, dazu die TreeView-Widgets zur Anzeige.&lt;/p&gt;
&lt;div class="section" id="treemodelsort"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/posts/ansichtssache/#id7"&gt;TreeModelSort&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Spalten lassen sich mit der Funktion &lt;tt class="docutils literal"&gt;set_sort_column_id&lt;/tt&gt; einfach sortieren. Wendet man diese Funktion direkt auf TreeStore an, werden logischerweise alle TreeView-Widgets, die darauf zurückgreifen, sortiert.&lt;/p&gt;
&lt;p&gt;Für diese Fälle muss man &lt;em&gt;TreeModelSort&lt;/em&gt;-Elemente "zwischenschalten", d.h. man erstellt aus der Widget-Seitenleiste unter &lt;em&gt;"Sonstiges &amp;gt; Sortierung für Baumansichtsmodell"&lt;/em&gt; (4. Eintrag) ein Widget und weist ihm den gewünschten TreeStore zu (einzige Option unter "Allgemein"). Anschließend ersetzt man im TreeView das Modell mit dem eben erstellten TreeModelSort.&lt;/p&gt;
&lt;p&gt;Die Sortierungsfunktion führt man wie zuvor, nur auf das TreeModelSort-Objekt, aus.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="treemodelfilter"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/posts/ansichtssache/#id8"&gt;TreeModelFilter&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;TreeModelFilter&lt;/em&gt; ermöglicht die Darstellung bestimmter Zeilen, in Glade wird wie bei TreeModelSort verfahren, zuerst das Element anlegen (3. Eintrag unter "Sonstige"), anschließend erfolgen die Zuweisungen zum Modell und TreeView.&lt;/p&gt;
&lt;p&gt;Im gewählten Beispiel sollen Sorten nach der Fruchtfarbe sortiert werden, es wird also noch ein Container für Buttons benötigt, also eine &lt;em&gt;GtkButtonBox&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="formatierung-aus-dem-modell-laden"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/posts/ansichtssache/#id9"&gt;Formatierung aus dem Modell laden&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Neben den anzuzeigenden Spalten gibt es im ersten TreeStore eine Spalte "weight". Der Wert in dieser Spalte wird dazu verwendet, die Zelle in Fettschrift darzustellen. Dazu wird in den Eigenschaften des CellRenderers unter &lt;em&gt;Schriftgewicht&lt;/em&gt; die entsprechende Spalte angegeben (der Wert für normale Schrift ist 400). Analog dazu können beispielsweise auch Zellen eingefärbt oder weitere Schriftformatierungen vorgenommen werden.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="python"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/posts/ansichtssache/#id10"&gt;Python&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id1"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/posts/ansichtssache/#id11"&gt;TreeModelSort&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Durch die Positionsabfrage von &lt;tt class="docutils literal"&gt;GtkTreeSelection.get_selected()&lt;/tt&gt; erhält man ein Tupel (model,pos), &lt;em&gt;pos&lt;/em&gt; von &lt;em&gt;model&lt;/em&gt; zeigt dabei auf TreeModelSort (bzw. analog auf TreeModelFilter), nicht auf TreeStore und erfordert eine Konvertierung:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_921807b9c3504f54a57b822930d6b14c-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;pos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;selection&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_selected&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_921807b9c3504f54a57b822930d6b14c-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;converted_iter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;treesort&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;convert_iter_to_child_iter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_921807b9c3504f54a57b822930d6b14c-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;store&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;converted_iter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;column&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/posts/ansichtssache/#id12"&gt;TreeModelFilter&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Zunächst muss eine Filterfunktion erstellt werden, in der die Sichtbarkeit von Zeilen definiert wird, im Beispiel also die Variable &lt;em&gt;self.color&lt;/em&gt;:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_6b03e8794a7c4119a16d83debf341610-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;color_filter_func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;iter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_6b03e8794a7c4119a16d83debf341610-2"&gt;&lt;/a&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;iter&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_6b03e8794a7c4119a16d83debf341610-3"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;a name="rest_code_6b03e8794a7c4119a16d83debf341610-4"&gt;&lt;/a&gt;    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_6b03e8794a7c4119a16d83debf341610-5"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Die Funktion wird zunächst nach dem Schema&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_6f0e2252f4f74822868ea1efd7ad3d79-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;treefilter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_visible_func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filter_func&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;zugewiesen, jede Filterung wird dann per &lt;tt class="docutils literal"&gt;refilter()&lt;/tt&gt; ausgelöst, also wenn das Button-Signal ausgelöst wird:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_7f2a24f78e2f42beb686a1e54cb29e1a-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;on_button_clicked&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_7f2a24f78e2f42beb686a1e54cb29e1a-2"&gt;&lt;/a&gt;    &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_label&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_7f2a24f78e2f42beb686a1e54cb29e1a-3"&gt;&lt;/a&gt;    &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"treefilter"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;refilter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a href="https://encarsia.github.io/posts/ansichtssache/"&gt;Weiterlesen…&lt;/a&gt; (3 min verbleiben zum Lesen)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>glade</category><category>python</category><guid>https://encarsia.github.io/posts/ansichtssache/</guid><pubDate>Wed, 21 Dec 2016 23:02:20 GMT</pubDate></item><item><title>Neues Projekt: Knights of Ni</title><link>https://encarsia.github.io/posts/neues-projekt-knights-of-ni/</link><dc:creator>Anke (encarsia)</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;strong&gt;Knights of Ni - kleiner Manager für den statischen Webseitengenerator Nikola&lt;/strong&gt;&lt;/p&gt;
&lt;a class="reference external image-reference" href="https://encarsia.github.io/images/non_window.png"&gt;&lt;img alt="/images/non_window.thumbnail.png" src="https://encarsia.github.io/images/non_window.thumbnail.png"&gt;&lt;/a&gt;
&lt;p&gt;Neues kleines GitHub-Übungsprojekt aus Glade und Python zusammengezimmert: &lt;a class="reference external" href="https://github.com/encarsia/non"&gt;Knights of Ni&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Inwiefern ich das weiter ausbaue, entscheide ich operativ; jetzt widme ich mich erstmal wieder weiter den Tutorial-Artikeln.&lt;/p&gt;&lt;/div&gt;</description><category>glade</category><category>nikola</category><category>python</category><guid>https://encarsia.github.io/posts/neues-projekt-knights-of-ni/</guid><pubDate>Sun, 11 Dec 2016 16:57:35 GMT</pubDate></item><item><title>Exterminate!</title><link>https://encarsia.github.io/posts/exterminate/</link><dc:creator>Anke (encarsia)</dc:creator><description>&lt;div&gt;&lt;div class="contents warning pull-right topic" id="inhalt"&gt;
&lt;p class="topic-title first"&gt;Inhalt&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/exterminate/#glade" id="id3"&gt;Glade&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/exterminate/#python" id="id4"&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/exterminate/#listings" id="id5"&gt;Listings&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/exterminate/#id1" id="id6"&gt;Glade&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/exterminate/#id2" id="id7"&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Das VTE-Terminal-Widget&lt;/strong&gt;&lt;/p&gt;
&lt;a class="reference external image-reference" href="https://encarsia.github.io/images/11_terminal.png"&gt;&lt;img alt="/images/11_terminal.thumbnail.png" src="https://encarsia.github.io/images/11_terminal.thumbnail.png"&gt;&lt;/a&gt;
&lt;div class="section" id="glade"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/posts/exterminate/#id3"&gt;Glade&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Das Widget findet man in der Widget-Seitenleiste ganz unten und stellt ein fertiges Terminal bereit. Um das Terminal auf &lt;tt class="docutils literal"&gt;exit&lt;/tt&gt; zu schließen, muss das Signal &lt;em&gt;child-exited&lt;/em&gt; abgefangen werden.&lt;/p&gt;
&lt;p&gt;Ein Klick auf den Button soll innerhalb dieses Terminals eine Python-Konsole starten, hier wird also das &lt;em&gt;clicked&lt;/em&gt;-Signal belegt.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="python"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/posts/exterminate/#id4"&gt;Python&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Elemente außerhalb des &lt;em&gt;Gtk&lt;/em&gt;-Moduls, die Glade verwendet werden, müssen als &lt;em&gt;GObject&lt;/em&gt;-Typ registriert werden (dies betrifft beispielsweise auch das &lt;em&gt;GtkSourceView&lt;/em&gt;-Widget (Modul &lt;em&gt;GtkSource&lt;/em&gt;):&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_1605d6ee1d554822b2b5790242d31633-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;GObject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;type_register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Vte&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Terminal&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Das Terminal wird mit der Funktion &lt;tt class="docutils literal"&gt;spawn_sync&lt;/tt&gt; initiiert, die ganze 7 Parameter erwartet. Die &lt;a class="reference external" href="https://lazka.github.io/pgi-docs/#Vte-2.91/classes/Terminal.html#Vte.Terminal.spawn_sync"&gt;Dokumentation&lt;/a&gt; liefert Details, für eine einfache Bash kommt man mit viel Defaults und Nones aus:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_5428a094863842108c748df5071be457-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;terminal&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;spawn_sync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;a name="rest_code_5428a094863842108c748df5071be457-2"&gt;&lt;/a&gt;        &lt;span class="n"&gt;Vte&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PtyFlags&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DEFAULT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_5428a094863842108c748df5071be457-3"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_5428a094863842108c748df5071be457-4"&gt;&lt;/a&gt;        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"/bin/bash"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;a name="rest_code_5428a094863842108c748df5071be457-5"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_5428a094863842108c748df5071be457-6"&gt;&lt;/a&gt;        &lt;span class="n"&gt;GLib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SpawnFlags&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DEFAULT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_5428a094863842108c748df5071be457-7"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_5428a094863842108c748df5071be457-8"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_5428a094863842108c748df5071be457-9"&gt;&lt;/a&gt;        &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Um eine Eingabe an die Konsole zu schicken, bedarf es der Funktion &lt;tt class="docutils literal"&gt;feed_child&lt;/tt&gt;. Als Parameter müssen übergeben werden zum einen der String (inklusive &lt;em&gt;newline&lt;/em&gt;, um einen Befehl auszuführen) und die Länge des Strings:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_d3f48d4147b348e1899ef1e74effc5b3-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;command&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"python&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;a name="rest_code_d3f48d4147b348e1899ef1e74effc5b3-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;terminal&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;feed_child&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a href="https://encarsia.github.io/posts/exterminate/"&gt;Weiterlesen…&lt;/a&gt; (1 min verbleiben zum Lesen)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;</description><category>glade</category><category>python</category><guid>https://encarsia.github.io/posts/exterminate/</guid><pubDate>Wed, 30 Nov 2016 14:48:06 GMT</pubDate></item><item><title>YouNiversity: Transforming Code into Beautiful, Idiomatic Python</title><link>https://encarsia.github.io/posts/youniversity-transforming-python-code/</link><dc:creator>Anke (encarsia)</dc:creator><description>&lt;div class="youtube-video"&gt;
&lt;iframe width="480" height="344" src="https://www.youtube.com/embed/OSGv2VnC0go?rel=0&amp;amp;hd=1&amp;amp;wmode=transparent"&gt;&lt;/iframe&gt;
&lt;/div&gt;</description><category>python</category><category>video</category><category>youtube</category><guid>https://encarsia.github.io/posts/youniversity-transforming-python-code/</guid><pubDate>Tue, 29 Nov 2016 11:30:03 GMT</pubDate></item><item><title>Romani ite domum</title><link>https://encarsia.github.io/posts/romani-ite-domum/</link><dc:creator>Anke (encarsia)</dc:creator><description>&lt;div&gt;&lt;div class="contents warning pull-right topic" id="inhalt"&gt;
&lt;p class="topic-title first"&gt;Inhalt&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/romani-ite-domum/#glade" id="id4"&gt;Glade&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/romani-ite-domum/#python" id="id5"&gt;Python&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/romani-ite-domum/#ubersetzbare-strings" id="id6"&gt;Übersetzbare Strings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/romani-ite-domum/#bind-textdomain-einrichten" id="id7"&gt;(bind)textdomain einrichten&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/romani-ite-domum/#gettext" id="id8"&gt;GetText&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/romani-ite-domum/#pot" id="id9"&gt;POT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/romani-ite-domum/#po" id="id10"&gt;PO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/romani-ite-domum/#mo" id="id11"&gt;MO&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/romani-ite-domum/#listings" id="id12"&gt;Listings&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/romani-ite-domum/#id1" id="id13"&gt;Glade&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/romani-ite-domum/#id2" id="id14"&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/posts/romani-ite-domum/#id3" id="id15"&gt;POT&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Lokalisation mit gettext und locale&lt;/strong&gt;&lt;/p&gt;
&lt;a class="reference external image-reference" href="https://encarsia.github.io/images/10_lokalisation.png"&gt;&lt;img alt="/images/10_lokalisation.thumbnail.png" src="https://encarsia.github.io/images/10_lokalisation.thumbnail.png"&gt;&lt;/a&gt;
&lt;div class="section" id="glade"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/posts/romani-ite-domum/#id4"&gt;Glade&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Strings von Labels oder Menüs sind standardmäßig als übersetzbar konfiguriert (Checkbox unter "Beschriftung"), insofern muss hier nichts weiter beachtet werden. Glade-Projektdateien werden direkt von GetText verarbeitet.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="python"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/posts/romani-ite-domum/#id5"&gt;Python&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="ubersetzbare-strings"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/posts/romani-ite-domum/#id6"&gt;Übersetzbare Strings&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Zur Übersetzung freigegebene Strings werden durch eine Einklammerung mit vorausgehendem Unterstrich markiert und beim Aufruf von &lt;tt class="docutils literal"&gt;xgettext&lt;/tt&gt; erkannt:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_a654b4189cd44fa2a95365dc8123715e-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gettext&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gettext&lt;/span&gt;
&lt;a name="rest_code_a654b4189cd44fa2a95365dc8123715e-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;translatable_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"translate me"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="bind-textdomain-einrichten"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/posts/romani-ite-domum/#id7"&gt;(bind)textdomain einrichten&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Nun muss man Python noch zeigen, unter welchem Namen und Pfad die MO-Dateien (siehe unten) zu finden sind:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_1bdcf62db90443d9b889d8764b2344dc-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;locale&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bindtextdomain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;appname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;locales_dir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_1bdcf62db90443d9b889d8764b2344dc-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;locale&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;textdomain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;locales_dir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_1bdcf62db90443d9b889d8764b2344dc-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;gettext&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bindtextdomain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;appname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;locales_dir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_1bdcf62db90443d9b889d8764b2344dc-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;gettext&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;textdomain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;appname&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_1bdcf62db90443d9b889d8764b2344dc-5"&gt;&lt;/a&gt;&lt;span class="n"&gt;builder&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_translation_domain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;appname&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;tt class="docutils literal"&gt;set_translation_domain&lt;/tt&gt; muss vor dem Laden der Glade-Datei(en) aufgerufen werden.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="gettext"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/posts/romani-ite-domum/#id8"&gt;GetText&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="pot"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/posts/romani-ite-domum/#id9"&gt;POT&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;POT steht für Portable Object Template und ist dem Namen zufolge die Vorlage für Übersetzungen. Diese Datei enthält alle übersetzbaren Strings. Nachdem eine leere POT-Datei erstellt wurde, ruft man nun &lt;tt class="docutils literal"&gt;xgettext&lt;/tt&gt; nach folgendem Muster für alle Quelldateien auf:&lt;/p&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_85baed6ae48a43d69bc525efdad24d1c-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; xgettext --options -o output.pot sourcefile.ext
&lt;/pre&gt;&lt;p&gt;Die erkannten Strings werden nach dem Schema&lt;/p&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_1689736006804271a01da42982996a86-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;#&lt;/span&gt;: sourcefile.ext:line number
&lt;a name="rest_code_1689736006804271a01da42982996a86-2"&gt;&lt;/a&gt;&lt;span class="go"&gt;msgid "translatable string"&lt;/span&gt;
&lt;a name="rest_code_1689736006804271a01da42982996a86-3"&gt;&lt;/a&gt;&lt;span class="go"&gt;msgstr ""&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;der angegebenen POT-Datei hinzugefügt. Die Markierung der Fundstelle(n) des Strings kann mit der Option &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--no-location&lt;/span&gt;&lt;/tt&gt; verhindert werden.&lt;/p&gt;
&lt;p&gt;Für das Beispiel wird also je ein Aufruf für die Glade- und Python-Datei benötgt:&lt;/p&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_c446dbe23bc144bb86dfaad31c2a4b4c-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; xgettext --sort-output --keyword&lt;span class="o"&gt;=&lt;/span&gt;translatable --language&lt;span class="o"&gt;=&lt;/span&gt;Glade -j -o 10_localization/TUT.pot 10_lokalisation.glade
&lt;a name="rest_code_c446dbe23bc144bb86dfaad31c2a4b4c-2"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; xgettext --language&lt;span class="o"&gt;=&lt;/span&gt;Python -j -o 10_localization/TUT.pot 10_lokalisation.py
&lt;/pre&gt;&lt;p&gt;Mit der Option &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-j&lt;/span&gt;&lt;/tt&gt; (&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--join-existing&lt;/span&gt;&lt;/tt&gt;) wird eine bestehende Datei um zusätzliche Strings ergänzt und funktioniert deshalb sowohl bei der Initiierung (vorher einfach mit &lt;tt class="docutils literal"&gt;touch template.pot&lt;/tt&gt; die leere Datei erstellen) als auch bei erneutem Aufruf zum Aktualisieren neuer Strings.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="po"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/posts/romani-ite-domum/#id10"&gt;PO&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Die übersetzten Strings werden in jeweils einer PO-Datei gespeichert. Eine neue Übersetzung legt man mit&lt;/p&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_00b06dcc0e3c484fb534fb6b592569b7-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; msginit --input&lt;span class="o"&gt;=&lt;/span&gt;source.pot --locale&lt;span class="o"&gt;=&lt;/span&gt;xx
&lt;a name="rest_code_00b06dcc0e3c484fb534fb6b592569b7-2"&gt;&lt;/a&gt;&lt;span class="gp"&gt;#&lt;/span&gt; &lt;span class="nv"&gt;xx&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;language code
&lt;/pre&gt;&lt;p&gt;an, das eine PO-Datei mit dem Namen xx.po (z.B. de.po) anlegt. Diese kann direkt im Texteditor oder mittels Tools wie &lt;a class="reference external" href="https://poedit.net/"&gt;PoEdit&lt;/a&gt; bearbeitet werden. Die deutschsprachige Lokalisation wird also angelegt mit&lt;/p&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_03bbf65a49e349eba6ec26071f9b1fef-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; msginit --input&lt;span class="o"&gt;=&lt;/span&gt;TUT.pot --locale&lt;span class="o"&gt;=&lt;/span&gt;de
&lt;/pre&gt;&lt;p&gt;Wird die POT-Datei verändert, kann man die PO-Dateien mit &lt;tt class="docutils literal"&gt;msgmerge&lt;/tt&gt; abgleichen und anschließend die neuen Strings übesetzen:&lt;/p&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_dc8697b580044ce38713fe6455fc2fbd-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; msgmerge lang.po template.pot &amp;gt; new_lang.po
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="mo"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/posts/romani-ite-domum/#id11"&gt;MO&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;MO-Dateien sind auf Maschinenlesbarkeit optimierte PO-Dateien und letztlich die, die vom Programm benutzt werden. Unterhalb der angegebenen &lt;em&gt;bindtextdomain&lt;/em&gt; liegen die Lokalisationsdateien nach der Verzeichnisstruktur &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;(path/to/bindtextdomain)/locale/language&lt;/span&gt; code/LC_MESSAGES/appname.po&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;Im Beispiel wird die bindtextdomain einfach im lokalen Verzeichnis angelegt, die erzeugte &lt;cite&gt;de.po&lt;/cite&gt; wird mit &lt;tt class="docutils literal"&gt;msgfmt&lt;/tt&gt; in die MO-Datei überführt:&lt;/p&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_fd72d99b8d5c415dbb1ad525fe958ed8-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; msgfmt --output locale/de/LC_MESSAGES/TUT.mo de.po
&lt;/pre&gt;&lt;p&gt;&lt;a href="https://encarsia.github.io/posts/romani-ite-domum/"&gt;Weiterlesen…&lt;/a&gt; (5 min verbleiben zum Lesen)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>glade</category><category>python</category><guid>https://encarsia.github.io/posts/romani-ite-domum/</guid><pubDate>Mon, 28 Nov 2016 13:50:22 GMT</pubDate></item></channel></rss>