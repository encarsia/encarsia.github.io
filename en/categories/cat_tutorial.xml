<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Merge and Destroy (Posts about tutorial)</title><link>https://encarsia.github.io/</link><description></description><atom:link href="https://encarsia.github.io/en/categories/cat_tutorial.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Sun, 22 Jan 2017 09:22:11 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Desktop integration</title><link>https://encarsia.github.io/en/posts/application-fortsetzung/</link><dc:creator>Anke (encarsia)</dc:creator><description>&lt;div&gt;&lt;div class="contents warning pull-right topic" id="contents"&gt;
&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/application-fortsetzung/#glade" id="id3"&gt;Glade&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/application-fortsetzung/#icon" id="id4"&gt;Icon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/application-fortsetzung/#headerbar" id="id5"&gt;Headerbar&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/application-fortsetzung/#commandline-options" id="id6"&gt;Commandline options&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/application-fortsetzung/#create-options" id="id7"&gt;Create Options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/application-fortsetzung/#connect-signal" id="id8"&gt;Connect signal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/application-fortsetzung/#processing-options" id="id9"&gt;Processing options&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/application-fortsetzung/#run-application-with-options" id="id10"&gt;Run application with options&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/application-fortsetzung/#listings" id="id11"&gt;Listings&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/application-fortsetzung/#id2" id="id12"&gt;Glade&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/application-fortsetzung/#python" id="id13"&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Desktop integration: icon, headerbar, commndline options&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;(Continuation if the &lt;a class="reference external" href="https://encarsia.github.io/en/posts/application"&gt;GtkApplication article&lt;/a&gt;)&lt;/p&gt;
&lt;a class="reference external image-reference" href="https://encarsia.github.io/images/15_application.png"&gt;&lt;img alt="/images/15_application.thumbnail.png" src="https://encarsia.github.io/images/15_application.thumbnail.png"&gt;&lt;/a&gt;
&lt;div class="section" id="glade"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/application-fortsetzung/#id3"&gt;Glade&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="icon"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/application-fortsetzung/#id4"&gt;Icon&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To assign an icon to an window just select &lt;em&gt;"General Appearance &amp;gt; Icon File"&lt;/em&gt;. Problematic here is that Glade only shows image files located in the same folder as the Glade file even if an image from another folder is chosen.&lt;/p&gt;
&lt;p&gt;A simple solution is editing the Glade file in a text editor and add the relative path to the &lt;a class="reference external" href="https://openclipart.org/detail/22535/ducky-icon"&gt;icon&lt;/a&gt;. This edit is preserved even when changing and saving the file with Glade again:&lt;/p&gt;
&lt;pre class="code xml"&gt;&lt;a name="rest_code_83bbfeb8e3ba4f79ac7f7988453b639e-1"&gt;&lt;/a&gt;&lt;span class="nt"&gt;&amp;lt;object&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"GtkApplicationWindow"&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"window"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_83bbfeb8e3ba4f79ac7f7988453b639e-2"&gt;&lt;/a&gt;  ...
&lt;a name="rest_code_83bbfeb8e3ba4f79ac7f7988453b639e-3"&gt;&lt;/a&gt;  &lt;span class="c"&gt;&amp;lt;!-- &amp;lt;property name="icon"&amp;gt;duckyou.svg&amp;lt;/property&amp;gt; --&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_83bbfeb8e3ba4f79ac7f7988453b639e-4"&gt;&lt;/a&gt;  &lt;span class="nt"&gt;&amp;lt;property&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"icon"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;../files/duckyou.svg&lt;span class="nt"&gt;&amp;lt;/property&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_83bbfeb8e3ba4f79ac7f7988453b639e-5"&gt;&lt;/a&gt;  ...
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="headerbar"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/application-fortsetzung/#id5"&gt;Headerbar&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Headerbars were introduced in GNOME 3.10 and unite titlebar and toolbar. Besides title and subtitle there is room for widgets such as buttons or menus and client side window controls.&lt;/p&gt;
&lt;p&gt;A headerbar is optional. To make use of it &lt;em&gt;"General &amp;gt; Appearance &amp;gt; Client side window decorations"&lt;/em&gt; has to be activated if not set yet. This prepares a reserved container area in the upper window area to add the headerbar widget in. If a headerbar is placed out of this specific area a regular titlebar is generated in addition to the headerbar.&lt;/p&gt;
&lt;img alt="/images/15_headerbarglade.png" src="https://encarsia.github.io/images/15_headerbarglade.png"&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="commandline-options"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/application-fortsetzung/#id6"&gt;Commandline options&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;GtkApplication&lt;/em&gt; provides functions to define individual commandline options of the applications (&lt;a class="reference external" href="https://wiki.gnome.org/HowDoI/GtkApplication/CommandLine"&gt;Handling command line options in GApplication&lt;/a&gt;).&lt;/p&gt;
&lt;div class="section" id="create-options"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/application-fortsetzung/#id7"&gt;Create Options&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Options are added by the &lt;tt class="docutils literal"&gt;add_main_option_entries(entrylist)&lt;/tt&gt; function. The entries must be &lt;em&gt;GLib.OptionEntry&lt;/em&gt; formatted which requires a bunch of parameters.&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_20806f8745ba4c2b944a5005bde0fc18-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_20806f8745ba4c2b944a5005bde0fc18-2"&gt;&lt;/a&gt;    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Gtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Application&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"org.application.test"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Gio&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ApplicationFlags&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;a name="rest_code_20806f8745ba4c2b944a5005bde0fc18-3"&gt;&lt;/a&gt;    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_main_option_entries&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
&lt;a name="rest_code_20806f8745ba4c2b944a5005bde0fc18-4"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_option_entry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"--version"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"Show version numbers and exit"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_20806f8745ba4c2b944a5005bde0fc18-5"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_option_entry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"--setlabel"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"Set label widget"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;GLib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OptionArg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;STRING&lt;/span&gt;&lt;span class="p"&gt;,),&lt;/span&gt;
&lt;a name="rest_code_20806f8745ba4c2b944a5005bde0fc18-6"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;create_option_entry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"--bollocks"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"Additional test option - exit"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;a name="rest_code_20806f8745ba4c2b944a5005bde0fc18-7"&gt;&lt;/a&gt;    &lt;span class="p"&gt;])&lt;/span&gt;
&lt;a name="rest_code_20806f8745ba4c2b944a5005bde0fc18-8"&gt;&lt;/a&gt;
&lt;a name="rest_code_20806f8745ba4c2b944a5005bde0fc18-9"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;create_option_entry&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;long_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;short_name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arg&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;GLib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OptionArg&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;NONE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;arg_data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;arg_description&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_20806f8745ba4c2b944a5005bde0fc18-10"&gt;&lt;/a&gt;    &lt;span class="n"&gt;option&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;GLib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;OptionEntry&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_20806f8745ba4c2b944a5005bde0fc18-11"&gt;&lt;/a&gt;    &lt;span class="n"&gt;option&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;long_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;long_name&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lstrip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_20806f8745ba4c2b944a5005bde0fc18-12"&gt;&lt;/a&gt;    &lt;span class="n"&gt;option&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;short_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;short_name&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="n"&gt;short_name&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lstrip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'-'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_20806f8745ba4c2b944a5005bde0fc18-13"&gt;&lt;/a&gt;    &lt;span class="n"&gt;option&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flags&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;flags&lt;/span&gt;
&lt;a name="rest_code_20806f8745ba4c2b944a5005bde0fc18-14"&gt;&lt;/a&gt;    &lt;span class="n"&gt;option&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;arg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arg&lt;/span&gt;
&lt;a name="rest_code_20806f8745ba4c2b944a5005bde0fc18-15"&gt;&lt;/a&gt;    &lt;span class="n"&gt;option&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;arg_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arg_data&lt;/span&gt;
&lt;a name="rest_code_20806f8745ba4c2b944a5005bde0fc18-16"&gt;&lt;/a&gt;    &lt;span class="n"&gt;option&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;description&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;description&lt;/span&gt;
&lt;a name="rest_code_20806f8745ba4c2b944a5005bde0fc18-17"&gt;&lt;/a&gt;    &lt;span class="n"&gt;option&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;arg_description&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;arg_description&lt;/span&gt;
&lt;a name="rest_code_20806f8745ba4c2b944a5005bde0fc18-18"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;option&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="connect-signal"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/application-fortsetzung/#id8"&gt;Connect signal&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The "handle-local-options" signal of &lt;em&gt;Gtk.Application&lt;/em&gt; handles commandline options. If the signal is connected the signal is emitted before the "startup" signal.&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_2e1cae02d2d646faa543b0661bb83236-1"&gt;&lt;/a&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"handle-local-options"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;on_local_option&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="processing-options"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/application-fortsetzung/#id9"&gt;Processing options&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;tt class="docutils literal"&gt;option&lt;/tt&gt; will be passed as an element of the &lt;em&gt;GLib.VariantDict&lt;/em&gt; class which can be searched for by calling &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;contains("option")&lt;/span&gt;&lt;/tt&gt;:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_d64e5f3a23344a609c5d56c6ae0be217-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;on_local_option&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;option&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_d64e5f3a23344a609c5d56c6ae0be217-2"&gt;&lt;/a&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;option&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"option1"&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_d64e5f3a23344a609c5d56c6ae0be217-3"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;#do something and exit normally&lt;/span&gt;
&lt;a name="rest_code_d64e5f3a23344a609c5d56c6ae0be217-4"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;a name="rest_code_d64e5f3a23344a609c5d56c6ae0be217-5"&gt;&lt;/a&gt;    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;option&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"option2"&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_d64e5f3a23344a609c5d56c6ae0be217-6"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;#do something different and exit&lt;/span&gt;
&lt;a name="rest_code_d64e5f3a23344a609c5d56c6ae0be217-7"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;a name="rest_code_d64e5f3a23344a609c5d56c6ae0be217-8"&gt;&lt;/a&gt;    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;option&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"option3"&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_d64e5f3a23344a609c5d56c6ae0be217-9"&gt;&lt;/a&gt;        &lt;span class="c1"&gt;#do more and continue&lt;/span&gt;
&lt;a name="rest_code_d64e5f3a23344a609c5d56c6ae0be217-10"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;A string can be extracted by calling &lt;tt class="docutils literal"&gt;end()&lt;/tt&gt; which converts &lt;em&gt;GLib.VariantDict&lt;/em&gt; to a &lt;em&gt;GLib.Variant&lt;/em&gt; element. That &lt;em&gt;GLib.Variant&lt;/em&gt; then can be culled by calling &lt;tt class="docutils literal"&gt;keys()&lt;/tt&gt;:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_e3bf16e0ff3542038b4409441a6baa3d-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;var&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;GLib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;VariantDict&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;option&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_e3bf16e0ff3542038b4409441a6baa3d-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;option_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;var&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;()[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;The handler function demands a return value that corresponds to the exit status:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;-1&lt;/strong&gt;: application execution will be continued&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;0&lt;/strong&gt;: execution successful, application will be quit, "startup/activate" will not be emitted&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;1&lt;/strong&gt; or positive value: execution was not successful, application will be quit&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="run-application-with-options"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/application-fortsetzung/#id10"&gt;Run application with options&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The option &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--help&lt;/span&gt;&lt;/tt&gt; is always available and lists all defined options of the application and their descriptions.&lt;/p&gt;
&lt;p&gt;The options of the example file now can be executed:&lt;/p&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_32df56faaa4d4f1ab7024f0af175fb97-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; python script.py --version
&lt;a name="rest_code_32df56faaa4d4f1ab7024f0af175fb97-2"&gt;&lt;/a&gt;&lt;span class="go"&gt;Python: 3.6.0&lt;/span&gt;
&lt;a name="rest_code_32df56faaa4d4f1ab7024f0af175fb97-3"&gt;&lt;/a&gt;&lt;span class="go"&gt;GTK+:   3.22.6&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;or pass a string to the application's &lt;em&gt;Gtk.Label&lt;/em&gt;:&lt;/p&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_837ae8877f2a45f6ab5be0e7cb83fa02-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; python script.py --setlabel &lt;span class="s2"&gt;"I can haz options!"&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a href="https://encarsia.github.io/en/posts/application-fortsetzung/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>glade</category><category>python</category><guid>https://encarsia.github.io/en/posts/application-fortsetzung/</guid><pubDate>Sun, 15 Jan 2017 12:51:29 GMT</pubDate></item><item><title>Stand-alone</title><link>https://encarsia.github.io/en/posts/application/</link><dc:creator>Anke (encarsia)</dc:creator><description>&lt;div&gt;&lt;div class="contents warning pull-right topic" id="contents"&gt;
&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/application/#xml-files" id="id6"&gt;XML files&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/application/#glade" id="id7"&gt;Glade&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/application/#gmenu" id="id8"&gt;GMenu&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/application/#python" id="id9"&gt;Python&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/application/#initialize-gtkapplication" id="id10"&gt;Initialize &lt;em&gt;GtkApplication&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/application/#appmenu" id="id11"&gt;Appmenu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/application/#start-and-quit" id="id12"&gt;Start and quit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/application/#links" id="id13"&gt;Links&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/application/#listings" id="id14"&gt;Listings&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/application/#id3" id="id15"&gt;Glade&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/application/#id4" id="id16"&gt;GMenu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/application/#id5" id="id17"&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Run program as GtkApplication&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;GtkApplication&lt;/em&gt; handles different important aspects of a GTK+ application like GTK+ initialization, session management and desktop integration.&lt;/p&gt;
&lt;a class="reference external image-reference" href="https://encarsia.github.io/images/14_application.png"&gt;&lt;img alt="/images/14_application.thumbnail.png" src="https://encarsia.github.io/images/14_application.thumbnail.png"&gt;&lt;/a&gt;
&lt;div class="section" id="xml-files"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/application/#id6"&gt;XML files&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="glade"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/application/#id7"&gt;Glade&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Glade is used as usual, main windows should be &lt;a href="https://encarsia.github.io/en/posts/application/#id1"&gt;&lt;span class="problematic" id="id2"&gt;**&lt;/span&gt;&lt;/a&gt;GtkApplicationWindows*. As example the file from the &lt;a class="reference external" href="https://encarsia.github.io/en/posts/dialoge"&gt;dialogue article&lt;/a&gt; is reused.&lt;/p&gt;
&lt;div class="system-message" id="id1"&gt;
&lt;p class="system-message-title"&gt;System Message: WARNING/2 (&lt;tt class="docutils"&gt;&amp;lt;string&amp;gt;&lt;/tt&gt;, line 17); &lt;em&gt;&lt;a href="https://encarsia.github.io/en/posts/application/#id2"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
Inline strong start-string without end-string.&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="gmenu"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/application/#id8"&gt;GMenu&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The GNOME Shell supports appmenus residing in the (top) panel. The Gmenu XML file must be formatted to be recognized as &lt;em&gt;GioMenu&lt;/em&gt;:&lt;/p&gt;
&lt;pre class="code xml"&gt;&lt;a name="rest_code_474e017ed3c14c4cbacc90562497554e-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;&amp;lt;?xml version="1.0"?&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_474e017ed3c14c4cbacc90562497554e-2"&gt;&lt;/a&gt;&lt;span class="nt"&gt;&amp;lt;interface&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_474e017ed3c14c4cbacc90562497554e-3"&gt;&lt;/a&gt; &lt;span class="nt"&gt;&amp;lt;menu&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;"appmenu"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_474e017ed3c14c4cbacc90562497554e-4"&gt;&lt;/a&gt;    &lt;span class="nt"&gt;&amp;lt;section&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_474e017ed3c14c4cbacc90562497554e-5"&gt;&lt;/a&gt;      &lt;span class="nt"&gt;&amp;lt;item&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_474e017ed3c14c4cbacc90562497554e-6"&gt;&lt;/a&gt;        &lt;span class="nt"&gt;&amp;lt;attribute&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"label"&lt;/span&gt; &lt;span class="na"&gt;translatable=&lt;/span&gt;&lt;span class="s"&gt;"yes"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;Menu Item&lt;span class="nt"&gt;&amp;lt;/attribute&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_474e017ed3c14c4cbacc90562497554e-7"&gt;&lt;/a&gt;        &lt;span class="nt"&gt;&amp;lt;attribute&lt;/span&gt; &lt;span class="na"&gt;name=&lt;/span&gt;&lt;span class="s"&gt;"action"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;app.item&lt;span class="nt"&gt;&amp;lt;/attribute&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_474e017ed3c14c4cbacc90562497554e-8"&gt;&lt;/a&gt;      &lt;span class="nt"&gt;&amp;lt;/item&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_474e017ed3c14c4cbacc90562497554e-9"&gt;&lt;/a&gt;    &lt;span class="nt"&gt;&amp;lt;/section&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_474e017ed3c14c4cbacc90562497554e-10"&gt;&lt;/a&gt;  &lt;span class="nt"&gt;&amp;lt;/menu&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_474e017ed3c14c4cbacc90562497554e-11"&gt;&lt;/a&gt;&lt;span class="nt"&gt;&amp;lt;/interface&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Glade identifies this file format as an outdated Glade file and refuses to open it. Apart from that &lt;em&gt;GtkBuilder&lt;/em&gt; can handle the menu and address identifiers.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="python"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/application/#id9"&gt;Python&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="initialize-gtkapplication"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/application/#id10"&gt;Initialize &lt;em&gt;GtkApplication&lt;/em&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The initialization process requires the parameters &lt;em&gt;application_id&lt;/em&gt; and &lt;em&gt;flags&lt;/em&gt;. Flags can normally set to 0 being the same as FLAGS_NONE (see &lt;a class="reference external" href="https://lazka.github.io/pgi-docs/Gio-2.0/flags.html#Gio.ApplicationFlags"&gt;Gio.ApplicationFlags&lt;/a&gt;), naming conventions for application_id are &lt;a class="reference external" href="https://people.gnome.org/~gcampagna/docs/Gio-2.0/Gio.Application.id_is_valid.html"&gt;listed here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The application can be connected to different signals being emitted on preassigned events. It is mandatory to at least define an &lt;tt class="docutils literal"&gt;activate&lt;/tt&gt; signal:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_d0578e1372764864a4b75ace548319ad-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_d0578e1372764864a4b75ace548319ad-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_d0578e1372764864a4b75ace548319ad-3"&gt;&lt;/a&gt;    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Gtk&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Application&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"org.application.test"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_d0578e1372764864a4b75ace548319ad-4"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;#self.app.connect("startup", self.on_app_startup) #optional&lt;/span&gt;
&lt;a name="rest_code_d0578e1372764864a4b75ace548319ad-5"&gt;&lt;/a&gt;    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"activate"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;on_app_activate&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_d0578e1372764864a4b75ace548319ad-6"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;#self.app.connect("shutdown", self.on_app_shutdown) #optional&lt;/span&gt;
&lt;a name="rest_code_d0578e1372764864a4b75ace548319ad-7"&gt;&lt;/a&gt;
&lt;a name="rest_code_d0578e1372764864a4b75ace548319ad-8"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;on_app_activate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_d0578e1372764864a4b75ace548319ad-9"&gt;&lt;/a&gt;
&lt;a name="rest_code_d0578e1372764864a4b75ace548319ad-10"&gt;&lt;/a&gt;    &lt;span class="c1"&gt;#setting up GtkBuilder etc.&lt;/span&gt;
&lt;a name="rest_code_d0578e1372764864a4b75ace548319ad-11"&gt;&lt;/a&gt;    &lt;span class="o"&gt;...&lt;/span&gt;
&lt;a name="rest_code_d0578e1372764864a4b75ace548319ad-12"&gt;&lt;/a&gt;    &lt;span class="o"&gt;...&lt;/span&gt;
&lt;a name="rest_code_d0578e1372764864a4b75ace548319ad-13"&gt;&lt;/a&gt;    &lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="appmenu"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/application/#id11"&gt;Appmenu&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;GMenu XML files are loaded by &lt;em&gt;GtkBuilder&lt;/em&gt;:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_7d9e8c0c7e134977b5a4bc8347cd6b71-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;builder&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_from_file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"menu.ui"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_7d9e8c0c7e134977b5a4bc8347cd6b71-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_app_menu&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;builder&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_object&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"appmenu"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Menu entries now have to be connected to actions which are created as &lt;em&gt;GioSimpleActions&lt;/em&gt;:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_3b0e8f0bf8674a5c9017c22c09e0813f-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;add_simple_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_3b0e8f0bf8674a5c9017c22c09e0813f-2"&gt;&lt;/a&gt;    &lt;span class="n"&gt;action&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Gio&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SimpleAction&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_3b0e8f0bf8674a5c9017c22c09e0813f-3"&gt;&lt;/a&gt;    &lt;span class="n"&gt;action&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;connect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"activate"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;callback&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_3b0e8f0bf8674a5c9017c22c09e0813f-4"&gt;&lt;/a&gt;    &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_action&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;action&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;In the example file actions invokes dialog windows.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="start-and-quit"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/application/#id12"&gt;Start and quit&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;GtkApplication&lt;/em&gt; takes over the handling of the GTK+ mainloop so there is no need of starting and quitting GTK+ manually and &lt;tt class="docutils literal"&gt;run()&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;quit()&lt;/tt&gt; called instead:&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_ae34b22f99a74ee3b071cfb2701ee826-1"&gt;&lt;/a&gt;Gtk.main()      -&amp;gt;  app.run(argv)
&lt;a name="rest_code_ae34b22f99a74ee3b071cfb2701ee826-2"&gt;&lt;/a&gt;Gtk.main_quit() -&amp;gt;  app.quit()
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="links"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/application/#id13"&gt;Links&lt;/a&gt;&lt;/h2&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://developer.gnome.org/gtk3/stable/GtkApplication.html"&gt;GNOME Developer: GtkApplication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.bachsau.com/2015/07/13/how-to-use-gtk-3-in-python-to-manage-your-whole-application/"&gt;How to use GTK+ 3 in Python to manage your whole application&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://stackoverflow.com/questions/19481439/how-to-create-a-complete-menu-using-gio-actions-in-pygi-gtk"&gt;Stackoverflow: How to create a complete menu using GIO Actions in PyGI GTK?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="https://encarsia.github.io/en/posts/application/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;</description><category>glade</category><category>python</category><guid>https://encarsia.github.io/en/posts/application/</guid><pubDate>Sat, 14 Jan 2017 12:51:29 GMT</pubDate></item><item><title>Translating articles</title><link>https://encarsia.github.io/en/posts/artikelubersetzungen/</link><dc:creator>Anke (encarsia)</dc:creator><description>&lt;div&gt;&lt;p&gt;As soon as I figured out multilinguality in Nikola I will translate the tutorial series into English.&lt;/p&gt;
&lt;p&gt;...&lt;/p&gt;
&lt;p&gt;Well, that was kinda easy...(but I will need some time for translation and writing new stuff and improving the new project).&lt;/p&gt;&lt;/div&gt;</description><category>nikola</category><guid>https://encarsia.github.io/en/posts/artikelubersetzungen/</guid><pubDate>Wed, 04 Jan 2017 20:54:21 GMT</pubDate></item><item><title>Dialogues</title><link>https://encarsia.github.io/en/posts/dialoge/</link><dc:creator>Anke (encarsia)</dc:creator><description>&lt;div&gt;&lt;div class="contents warning pull-right topic" id="contents"&gt;
&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/dialoge/#glade" id="id3"&gt;Glade&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/dialoge/#aboutdialog" id="id4"&gt;AboutDialog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/dialoge/#messagedialog" id="id5"&gt;MessageDialog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/dialoge/#buttons-and-responses" id="id6"&gt;Buttons and responses&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/dialoge/#reestablish-dialogues" id="id7"&gt;Reestablish dialogues&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/dialoge/#python" id="id8"&gt;Python&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/dialoge/#responses" id="id9"&gt;Responses&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/dialoge/#delete-event" id="id10"&gt;Delete-event&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/dialoge/#listings" id="id11"&gt;Listings&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/dialoge/#id1" id="id12"&gt;Glade&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/dialoge/#id2" id="id13"&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Handle dialogue windows&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Dialogues are complementary windows which are useful in interaction with the user, to show some relevant information or demand input. The &lt;em&gt;GtkDialog&lt;/em&gt; class provides subclasses for common dialogue use cases like the &lt;em&gt;AboutDialog&lt;/em&gt; and &lt;em&gt;MessageDialog&lt;/em&gt; used in the example file.&lt;/p&gt;
&lt;a class="reference external image-reference" href="https://encarsia.github.io/images/13_dialoge.png"&gt;&lt;img alt="/images/13_dialoge.thumbnail.png" src="https://encarsia.github.io/images/13_dialoge.thumbnail.png"&gt;&lt;/a&gt;
&lt;div class="section" id="glade"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/dialoge/#id3"&gt;Glade&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In the widget sidebar dialog widgets are integrated to the &lt;em&gt;"Toplevel&lt;/em&gt;" section next to window widgets.&lt;/p&gt;
&lt;p&gt;Dialogs are complementary windows to grab the user's focus. They can fixed to a superordinated window but at least be configured transient to a parent window via &lt;em&gt;General &amp;gt; Window Attributes Transient For:"&lt;/em&gt;.&lt;/p&gt;
&lt;div class="section" id="aboutdialog"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/dialoge/#id4"&gt;AboutDialog&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The "About" dialog window in general gives information about the project, its version, license, participating programmers, translators etc. All this can be directly typed into Glade.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="messagedialog"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/dialoge/#id5"&gt;MessageDialog&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The MessageDialog is a standard dialog to show information or call for input. It is configurated to be drawn without window decoration or showing up seperately in the taskbar. Furthermore there is the possibility to add standard buttons.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="buttons-and-responses"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/dialoge/#id6"&gt;Buttons and responses&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Dialogs already own an intern &lt;em&gt;GtkButtonBox&lt;/em&gt; to place any buttons in.&lt;/p&gt;
&lt;p&gt;In constrast to regular windows the &lt;em&gt;clicked&lt;/em&gt; signals of the buttons do not have to be assigned in these Buttonboxes (it's still possible to do so, of course). Instead in the &lt;em&gt;"General"&lt;/em&gt; button properties you define a response answer (int) and assign the &lt;em&gt;response&lt;/em&gt; signal of the &lt;em&gt;GtkDialog&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Standard buttons available for example in MessageDialogs have a fixed response:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Ok&lt;/strong&gt; -5&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Abort&lt;/strong&gt; -6&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Close&lt;/strong&gt; -7&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Yes&lt;/strong&gt; -8&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;No&lt;/strong&gt; -9&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;[X]&lt;/strong&gt; -4&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;The huge advantage of that procedure is that the response refers to the dialog object so the responses can be processed by a single function.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="reestablish-dialogues"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/dialoge/#id7"&gt;Reestablish dialogues&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The problem of windows closed via &lt;em&gt;destroy&lt;/em&gt; signal is that they cannot be reactivated therefore the &lt;em&gt;delete-event&lt;/em&gt; signal is used here.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="python"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/dialoge/#id8"&gt;Python&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="responses"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/dialoge/#id9"&gt;Responses&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;When emitting the &lt;em&gt;response&lt;/em&gt; signal the response is passed as parameter. As said before this offers the option to process all responses in one function:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_0f9980508b8e4702ac6507abb594e2f0-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;on_dialog_response&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_0f9980508b8e4702ac6507abb594e2f0-2"&gt;&lt;/a&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_0f9980508b8e4702ac6507abb594e2f0-3"&gt;&lt;/a&gt;        &lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hide_on_delete&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_0f9980508b8e4702ac6507abb594e2f0-4"&gt;&lt;/a&gt;    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_0f9980508b8e4702ac6507abb594e2f0-5"&gt;&lt;/a&gt;        &lt;span class="n"&gt;do&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;something&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_0f9980508b8e4702ac6507abb594e2f0-6"&gt;&lt;/a&gt;    &lt;span class="k"&gt;elif&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_0f9980508b8e4702ac6507abb594e2f0-7"&gt;&lt;/a&gt;        &lt;span class="n"&gt;do&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;something&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;different&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="delete-event"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/dialoge/#id10"&gt;Delete-event&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;tt class="docutils literal"&gt;hide_on_delete()&lt;/tt&gt; function removes a window but can be reestablished by &lt;tt class="docutils literal"&gt;show_all()&lt;/tt&gt;:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_89fb4655da5141f185ddb96c3c85c973-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;on_dialog_delete_event&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_89fb4655da5141f185ddb96c3c85c973-2"&gt;&lt;/a&gt;    &lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hide_on_delete&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_89fb4655da5141f185ddb96c3c85c973-3"&gt;&lt;/a&gt;    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a href="https://encarsia.github.io/en/posts/dialoge/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>glade</category><category>python</category><guid>https://encarsia.github.io/en/posts/dialoge/</guid><pubDate>Sat, 31 Dec 2016 16:51:29 GMT</pubDate></item><item><title>Data view</title><link>https://encarsia.github.io/en/posts/ansichtssache/</link><dc:creator>Anke (encarsia)</dc:creator><description>&lt;div&gt;&lt;div class="contents warning pull-right topic" id="contents"&gt;
&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/ansichtssache/#treestore-vs-liststore" id="id5"&gt;TreeStore vs. ListStore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/ansichtssache/#glade" id="id6"&gt;Glade&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/ansichtssache/#treemodelsort" id="id7"&gt;TreeModelSort&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/ansichtssache/#treemodelfilter" id="id8"&gt;TreeModelFilter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/ansichtssache/#load-formatting-values-from-the-model" id="id9"&gt;Load formatting values from the model&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/ansichtssache/#python" id="id10"&gt;Python&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/ansichtssache/#id1" id="id11"&gt;TreeModelSort&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/ansichtssache/#id2" id="id12"&gt;TreeModelFilter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/ansichtssache/#listings" id="id13"&gt;Listings&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/ansichtssache/#id3" id="id14"&gt;Glade&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/ansichtssache/#id4" id="id15"&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Display TreeStore data&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;(Continuation of the &lt;a class="reference external" href="https://encarsia.github.io/en/posts/uberlistet"&gt;ListStore article&lt;/a&gt;)&lt;/p&gt;
&lt;a class="reference external image-reference" href="https://encarsia.github.io/images/12_treestore.png"&gt;&lt;img alt="/images/12_treestore.thumbnail.png" src="https://encarsia.github.io/images/12_treestore.thumbnail.png" style="width: 480px;"&gt;&lt;/a&gt;
&lt;div class="section" id="treestore-vs-liststore"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/ansichtssache/#id5"&gt;TreeStore vs. ListStore&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In contrast to ListStores TreeStore rows can possess child rows. That's why the &lt;tt class="docutils literal"&gt;append&lt;/tt&gt; function requires another parameter that specifies the parent row reference:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_be45f229e1c845ddb0afb64775f695f5-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;#append row to liststore&lt;/span&gt;
&lt;a name="rest_code_be45f229e1c845ddb0afb64775f695f5-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;store&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;value1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;value2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;value3&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;a name="rest_code_be45f229e1c845ddb0afb64775f695f5-3"&gt;&lt;/a&gt;
&lt;a name="rest_code_be45f229e1c845ddb0afb64775f695f5-4"&gt;&lt;/a&gt;&lt;span class="c1"&gt;#append row to treestore&lt;/span&gt;
&lt;a name="rest_code_be45f229e1c845ddb0afb64775f695f5-5"&gt;&lt;/a&gt;&lt;span class="n"&gt;store&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;parent&lt;/span&gt;&lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="n"&gt;value1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;value2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;value3&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;The &lt;em&gt;parent&lt;/em&gt; value is either&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;None&lt;/strong&gt; if the current row is not a child row of another, or&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;TreeIter&lt;/strong&gt; pointing to the superordinate row.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;em&gt;TreeIter&lt;/em&gt; value is generated when creating a row, subordinate rows are created by&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_7ba0d6a25bf0441f8deb3d077efa344f-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;row1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;store&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="n"&gt;value1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;value2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;value3&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;a name="rest_code_7ba0d6a25bf0441f8deb3d077efa344f-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;row2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;store&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;row1&lt;/span&gt;&lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="n"&gt;value1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;value2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;value3&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;The TreeIter of a cell is obtained by calling the &lt;tt class="docutils literal"&gt;get_selection&lt;/tt&gt; function of the automatically generated &lt;em&gt;GtkTreeSelection&lt;/em&gt; widget.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="glade"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/ansichtssache/#id6"&gt;Glade&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In the example there are two TreeStores with some columns and the coresponding TreeView widgets to display the data columns.&lt;/p&gt;
&lt;div class="section" id="treemodelsort"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/ansichtssache/#id7"&gt;TreeModelSort&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Sorting a column is set by calling &lt;tt class="docutils literal"&gt;set_sort_column_id&lt;/tt&gt;. If this is applied to the TreeStore all TreeView widgets using this store are equally sorted.&lt;/p&gt;
&lt;p&gt;If this behaviour is not diesired &lt;em&gt;TreeModelSort&lt;/em&gt; elements come into play and which are "interposed" between store and view widgets. First the TreeModelSort is created via &lt;em&gt;"Miscellaneous &amp;gt; Tree Model Sort"&lt;/em&gt; from the widget sidebar. Then you choose a source TreeView to use data from. After that the model in the TreeView widget is replaced by the newly created TreeModelSort.&lt;/p&gt;
&lt;p&gt;The sort function is now simply applied to the TreeModelSort object instead to the TreeView object.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="treemodelfilter"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/ansichtssache/#id8"&gt;TreeModelFilter&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;TreeModelFilter&lt;/em&gt; allows to only show data that matches the specified filter criteria. Handling this object is analogue to TreeModelSort.&lt;/p&gt;
&lt;p&gt;In the example the varieties can be filtered according to fruit colour so there is a &lt;em&gt;GtkButtonBox&lt;/em&gt; required to put the corresponding buttons into.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="load-formatting-values-from-the-model"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/ansichtssache/#id9"&gt;Load formatting values from the model&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Besides the columns containing displayed data there is a "weight" column in the first TreeStore. This value is used to show the cell in bold text. It is realized by setting the CellRenderer's property of &lt;em&gt;"Font weight"&lt;/em&gt; to the column containing the corresponding value (normal font is 400). In this way the appearance of cells can be defined, for example colours or font formating.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="python"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/ansichtssache/#id10"&gt;Python&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id1"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/ansichtssache/#id11"&gt;TreeModelSort&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Requesting a position by calling &lt;tt class="docutils literal"&gt;GtkTreeSelection.get_selected()&lt;/tt&gt; returns a tuple (model, pos), &lt;em&gt;pos&lt;/em&gt; of &lt;em&gt;model&lt;/em&gt; points to TreeModelSort (or TreeModelFilter) and requires conversion to the TreeStore position:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_4f1db1304374497cbc0580a32846ce9d-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;pos&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;selection&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_selected&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_4f1db1304374497cbc0580a32846ce9d-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;converted_iter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;treesort&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;convert_iter_to_child_iter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_4f1db1304374497cbc0580a32846ce9d-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;store&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;converted_iter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;column&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/ansichtssache/#id12"&gt;TreeModelFilter&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;First of all a filter function is required defining the visibility of cells, in the example it's the variable &lt;em&gt;self.color&lt;/em&gt;:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_64ed9714f7064d27b88d070ed54c3a0a-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;color_filter_func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;iter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_64ed9714f7064d27b88d070ed54c3a0a-2"&gt;&lt;/a&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;iter&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_64ed9714f7064d27b88d070ed54c3a0a-3"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;a name="rest_code_64ed9714f7064d27b88d070ed54c3a0a-4"&gt;&lt;/a&gt;    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;a name="rest_code_64ed9714f7064d27b88d070ed54c3a0a-5"&gt;&lt;/a&gt;        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;This function has to be assigned to TreeFilter&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_f377f028a42140358098d4f6d137289e-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;treefilter&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_visible_func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filter_func&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;A filter process is then executed by calling the &lt;tt class="docutils literal"&gt;refilter()&lt;/tt&gt; function on the TreeFilter object:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_7f44afa7424942b392044b735e45fbb0-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;on_button_clicked&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_7f44afa7424942b392044b735e45fbb0-2"&gt;&lt;/a&gt;    &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_label&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_7f44afa7424942b392044b735e45fbb0-3"&gt;&lt;/a&gt;    &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;obj&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"treefilter"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;refilter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a href="https://encarsia.github.io/en/posts/ansichtssache/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>glade</category><category>python</category><guid>https://encarsia.github.io/en/posts/ansichtssache/</guid><pubDate>Wed, 21 Dec 2016 23:02:20 GMT</pubDate></item><item><title>Exterminate!</title><link>https://encarsia.github.io/en/posts/exterminate/</link><dc:creator>Anke (encarsia)</dc:creator><description>&lt;div&gt;&lt;div class="contents warning pull-right topic" id="contents"&gt;
&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/exterminate/#glade" id="id5"&gt;Glade&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/exterminate/#python" id="id6"&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/exterminate/#listings" id="id7"&gt;Listings&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/exterminate/#id3" id="id8"&gt;Glade&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/exterminate/#id4" id="id9"&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;The VTE terminal widget&lt;/strong&gt;&lt;/p&gt;
&lt;a class="reference external image-reference" href="https://encarsia.github.io/images/11_terminal.png"&gt;&lt;img alt="/images/11_terminal.thumbnail.png" src="https://encarsia.github.io/images/11_terminal.thumbnail.png"&gt;&lt;/a&gt;
&lt;div class="section" id="glade"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/exterminate/#id5"&gt;Glade&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The widget can be found in the lower part of the widget side bar and provides a complete terminal emulator. To close the window on the &lt;tt class="docutils literal"&gt;exit&lt;/tt&gt; command the &lt;em&gt;child-exited&lt;/em&gt; signal has to be assigned.&lt;/p&gt;
&lt;p&gt;A button click shall open a Python prompt within the terminal window, so we need the familiar &lt;em&gt;clicked&lt;/em&gt; signal.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="python"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/exterminate/#id6"&gt;Python&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Elements used in Glade that are not part of the &lt;em&gt;Gtk&lt;/em&gt; module have to be registered as a &lt;em&gt;GObject&lt;/em&gt; object (this is also required when using a &lt;em&gt;GtkSourceView&lt;/em&gt; widget as the functionality is provided by the &lt;a href="https://encarsia.github.io/en/posts/exterminate/#id1"&gt;&lt;span class="problematic" id="id2"&gt;*&lt;/span&gt;&lt;/a&gt;GtkSource module):&lt;/p&gt;
&lt;div class="system-message" id="id1"&gt;
&lt;p class="system-message-title"&gt;System Message: WARNING/2 (&lt;tt class="docutils"&gt;&amp;lt;string&amp;gt;&lt;/tt&gt;, line 19); &lt;em&gt;&lt;a href="https://encarsia.github.io/en/posts/exterminate/#id2"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
Inline emphasis start-string without end-string.&lt;/div&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_959be446af7c48b9a88af6a8d081ffd6-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;GObject&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;type_register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Vte&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Terminal&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;The terminal emulator is initiated by calling &lt;tt class="docutils literal"&gt;spawn_sync&lt;/tt&gt; expecting 7 parameters. Detailed information on the parameters are available in the &lt;a class="reference external" href="https://lazka.github.io/pgi-docs/#Vte-2.91/classes/Terminal.html#Vte.Terminal.spawn_sync"&gt;documentation&lt;/a&gt; but for a common start a lot of defaults and Nones will do:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_76e1b49acda346f79ad56329d94eec36-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;terminal&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;spawn_sync&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;a name="rest_code_76e1b49acda346f79ad56329d94eec36-2"&gt;&lt;/a&gt;        &lt;span class="n"&gt;Vte&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;PtyFlags&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DEFAULT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_76e1b49acda346f79ad56329d94eec36-3"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_76e1b49acda346f79ad56329d94eec36-4"&gt;&lt;/a&gt;        &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"/bin/bash"&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
&lt;a name="rest_code_76e1b49acda346f79ad56329d94eec36-5"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_76e1b49acda346f79ad56329d94eec36-6"&gt;&lt;/a&gt;        &lt;span class="n"&gt;GLib&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;SpawnFlags&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;DEFAULT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_76e1b49acda346f79ad56329d94eec36-7"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_76e1b49acda346f79ad56329d94eec36-8"&gt;&lt;/a&gt;        &lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_76e1b49acda346f79ad56329d94eec36-9"&gt;&lt;/a&gt;        &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;The &lt;tt class="docutils literal"&gt;feed_child&lt;/tt&gt; function must be called to send a command to the console. The expected parameters are the string including a newline and the length of the string:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_8a7bfb5ae0744521a207638967e90674-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;command&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"python&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;a name="rest_code_8a7bfb5ae0744521a207638967e90674-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;terminal&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;feed_child&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;command&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a href="https://encarsia.github.io/en/posts/exterminate/"&gt;Read more…&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;</description><category>glade</category><category>python</category><guid>https://encarsia.github.io/en/posts/exterminate/</guid><pubDate>Wed, 30 Nov 2016 14:48:06 GMT</pubDate></item><item><title>Romani ite domum</title><link>https://encarsia.github.io/en/posts/romani-ite-domum/</link><dc:creator>Anke (encarsia)</dc:creator><description>&lt;div&gt;&lt;div class="contents warning pull-right topic" id="contents"&gt;
&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/romani-ite-domum/#glade" id="id4"&gt;Glade&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/romani-ite-domum/#python" id="id5"&gt;Python&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/romani-ite-domum/#translatable-strings" id="id6"&gt;Translatable strings&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/romani-ite-domum/#configure-bind-textdomain" id="id7"&gt;configure (bind)textdomain&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/romani-ite-domum/#gettext" id="id8"&gt;GetText&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/romani-ite-domum/#pot" id="id9"&gt;POT&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/romani-ite-domum/#po" id="id10"&gt;PO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/romani-ite-domum/#mo" id="id11"&gt;MO&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/romani-ite-domum/#listings" id="id12"&gt;Listings&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/romani-ite-domum/#id1" id="id13"&gt;Glade&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/romani-ite-domum/#id2" id="id14"&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/romani-ite-domum/#id3" id="id15"&gt;POT&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Localization with gettext and locale&lt;/strong&gt;&lt;/p&gt;
&lt;a class="reference external image-reference" href="https://encarsia.github.io/images/10_lokalisation.png"&gt;&lt;img alt="/images/10_lokalisation.thumbnail.png" src="https://encarsia.github.io/images/10_lokalisation.thumbnail.png"&gt;&lt;/a&gt;
&lt;div class="section" id="glade"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/romani-ite-domum/#id4"&gt;Glade&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Strings in widgets are by default configurated as translatable so there are no preparations required. GetText directly provercesses Glade project files.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="python"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/romani-ite-domum/#id5"&gt;Python&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="translatable-strings"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/romani-ite-domum/#id6"&gt;Translatable strings&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Approved translatable strings are recognized by &lt;tt class="docutils literal"&gt;xgettext&lt;/tt&gt; by brackets with a leading underscore:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_827d6b8d2e464eddbb6cf61b2d338b48-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;_&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;gettext&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gettext&lt;/span&gt;
&lt;a name="rest_code_827d6b8d2e464eddbb6cf61b2d338b48-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;translatable_string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;_&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"translate me"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="configure-bind-textdomain"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/romani-ite-domum/#id7"&gt;configure (bind)textdomain&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Now name and location of the MO files have to be configured in the source code:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_fb9e3252bdc34217a870df464a9eacb8-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;locale&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bindtextdomain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;appname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;locales_dir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_fb9e3252bdc34217a870df464a9eacb8-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;locale&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;textdomain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;locales_dir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_fb9e3252bdc34217a870df464a9eacb8-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;gettext&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bindtextdomain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;appname&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;locales_dir&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_fb9e3252bdc34217a870df464a9eacb8-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;gettext&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;textdomain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;appname&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_fb9e3252bdc34217a870df464a9eacb8-5"&gt;&lt;/a&gt;&lt;span class="n"&gt;builder&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_translation_domain&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;appname&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;tt class="docutils literal"&gt;set_translation_domain&lt;/tt&gt; has to be called before loading Glade files.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="gettext"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/romani-ite-domum/#id8"&gt;GetText&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="pot"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/romani-ite-domum/#id9"&gt;POT&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;POT is the abbrevation for Portable Object Template. This file contains all original translatable strings. After generating an empty POT file, &lt;tt class="docutils literal"&gt;xgettext&lt;/tt&gt; is executed for all source files containing translatable strings:&lt;/p&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_8faf48fa6f714737b2625c868dd44356-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; xgettext --options -o output.pot sourcefile.ext
&lt;/pre&gt;&lt;p&gt;The identified strings are added to the POT file.&lt;/p&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_2528dcee055b43f1848a775e081b610c-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;#&lt;/span&gt;: sourcefile.ext:line number
&lt;a name="rest_code_2528dcee055b43f1848a775e081b610c-2"&gt;&lt;/a&gt;&lt;span class="go"&gt;msgid "translatable string"&lt;/span&gt;
&lt;a name="rest_code_2528dcee055b43f1848a775e081b610c-3"&gt;&lt;/a&gt;&lt;span class="go"&gt;msgstr ""&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;The file number reference comment can be avoided by passting the option &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--no-location&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;In this article's example it is required to run xgettext once for the Glade file and once for the Python source code; the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-j&lt;/span&gt;&lt;/tt&gt; (&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--join-existing&lt;/span&gt;&lt;/tt&gt;) option adds new found strings to an existing file:&lt;/p&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_86d44409a67842ff86d5507d36f7d94a-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; xgettext --sort-output --keyword&lt;span class="o"&gt;=&lt;/span&gt;translatable --language&lt;span class="o"&gt;=&lt;/span&gt;Glade -j -o 10_localization/TUT.pot 10_lokalisation.glade
&lt;a name="rest_code_86d44409a67842ff86d5507d36f7d94a-2"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; xgettext --language&lt;span class="o"&gt;=&lt;/span&gt;Python -j -o 10_localization/TUT.pot 10_lokalisation.py
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="po"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/romani-ite-domum/#id10"&gt;PO&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Translated strings are stored in a PO file per language. A new translation ist invoked by&lt;/p&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_8c6ea5f4ee5e4b3481b82e3de3ad056d-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; msginit --input&lt;span class="o"&gt;=&lt;/span&gt;source.pot --locale&lt;span class="o"&gt;=&lt;/span&gt;xx
&lt;a name="rest_code_8c6ea5f4ee5e4b3481b82e3de3ad056d-2"&gt;&lt;/a&gt;&lt;span class="gp"&gt;#&lt;/span&gt; &lt;span class="nv"&gt;xx&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;language code
&lt;/pre&gt;&lt;p&gt;that generates a file after the pattern xx.po (p.e. de.po). This file can be edited in any text editor or dedicated tools such like &lt;a class="reference external" href="https://poedit.net/"&gt;PoEdit&lt;/a&gt;. A German localization for example is created by the command&lt;/p&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_7a8cb392dcf0496ab15d20995b00122c-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; msginit --input&lt;span class="o"&gt;=&lt;/span&gt;TUT.pot --locale&lt;span class="o"&gt;=&lt;/span&gt;de
&lt;/pre&gt;&lt;p&gt;If the POT file is altered the PO files are updated with the new strings by executing &lt;tt class="docutils literal"&gt;msgmerge&lt;/tt&gt;:&lt;/p&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_031a254c3b874273a75588c5f45b2f08-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; msgmerge lang.po template.pot &amp;gt; new_lang.po
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="mo"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/romani-ite-domum/#id11"&gt;MO&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;MO files are (machine readable) binary files and mandatory for gettext to work. Localization files are located below the &lt;em&gt;bindtextdomain&lt;/em&gt; following the file structure &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;path/to/bindtextdomain)/locale/language&lt;/span&gt; code/LC_MESSAGES/appname.po&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;In the example the bindtextdomain is created in the local directory, the generated &lt;cite&gt;de.po&lt;/cite&gt; translation text file then transformed into the  corresponding MO file:&lt;/p&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_eee09a53df844477899d1af95d164468-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; msgfmt --output locale/de/LC_MESSAGES/TUT.mo de.po
&lt;/pre&gt;&lt;p&gt;&lt;a href="https://encarsia.github.io/en/posts/romani-ite-domum/"&gt;Read more…&lt;/a&gt; (5 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>glade</category><category>python</category><guid>https://encarsia.github.io/en/posts/romani-ite-domum/</guid><pubDate>Mon, 28 Nov 2016 13:50:22 GMT</pubDate></item><item><title>ListStore</title><link>https://encarsia.github.io/en/posts/uberlistet/</link><dc:creator>Anke (encarsia)</dc:creator><description>&lt;div&gt;&lt;div class="contents warning pull-right topic" id="contents"&gt;
&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/uberlistet/#glade" id="id6"&gt;Glade&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/uberlistet/#liststore" id="id7"&gt;ListStore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/uberlistet/#widgets" id="id8"&gt;Widgets&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/uberlistet/#python" id="id9"&gt;Python&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/uberlistet/#treestore" id="id10"&gt;TreeStore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/uberlistet/#combobox" id="id11"&gt;ComboBox&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/uberlistet/#edit-cells" id="id12"&gt;Edit cells&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/uberlistet/#listings" id="id13"&gt;Listings&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/uberlistet/#id4" id="id14"&gt;Glade&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/uberlistet/#id5" id="id15"&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Store data sets in ListStores and use ComboBox and TreeView to display the data&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;There are a bunch of elements required to store and display tables of data in GTK+ applications:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;The model to administrate data. There are two types:&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;&lt;em&gt;ListStore:&lt;/em&gt; flat table, besides string and numerical values the rows also can be of GTK+ element type (like buttons or checkboxes), input of data sets in Glade possible&lt;/li&gt;
&lt;li&gt;&lt;em&gt;TreeStore:&lt;/em&gt; just like ListStore but rows can possess child rows, input of data sets in Glade is not possible (see also &lt;a class="reference external" href="https://encarsia.github.io/en/posts/ansichtssache"&gt;TreeStore article&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Widgets:&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;&lt;em&gt;TreeView:&lt;/em&gt; show, sort and edit data; used by both store model types; a data store can be used my multiple TreeView widgets&lt;/li&gt;
&lt;li&gt;&lt;em&gt;ComboBox:&lt;/em&gt; comboboxes are used to limit input to given list items, this list can be stored in a List/TreeStore (see also &lt;a class="reference external" href="https://encarsia.github.io/en/posts/qual-der-wahl"&gt;spinbutton and combobox article&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;CellRenderers:&lt;/em&gt; Subwidgets to specify source, layout and other properties (like being editable) of displayed data rows&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;a class="reference external image-reference" href="https://encarsia.github.io/images/09_treestore2.png"&gt;&lt;img alt="/images/09_treestore2.thumbnail.png" src="https://encarsia.github.io/images/09_treestore2.thumbnail.png"&gt;&lt;/a&gt;
&lt;div class="section" id="glade"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/uberlistet/#id6"&gt;Glade&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="liststore"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/uberlistet/#id7"&gt;ListStore&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In the example there is one ListStore created via &lt;em&gt;"Miscellaneous &amp;gt; List Store"&lt;/em&gt; which will be later used by three Widgets.&lt;/p&gt;
&lt;p&gt;First there are some rows created. ListStore data sets can be inserted in Glade but this in practise is only convenient for typing in few data sets.&lt;/p&gt;
&lt;p&gt;Content changes in the ListStore are simultaneously updated in the Widgets using the ListStore. For individual sorting of the same List/TreeStore it is needed to create &lt;em&gt;Gtk.TreeModelSort&lt;/em&gt; elements (this element is used in the example of the &lt;a class="reference external" href="https://encarsia.github.io/en/posts/ansichtssache"&gt;TreeStore article&lt;/a&gt;).&lt;/p&gt;
&lt;a class="reference external image-reference" href="https://encarsia.github.io/images/09_treestore1.png"&gt;&lt;img alt="/images/09_treestore1.thumbnail.png" src="https://encarsia.github.io/images/09_treestore1.thumbnail.png"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;div class="section" id="widgets"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/uberlistet/#id8"&gt;Widgets&lt;/a&gt;&lt;/h3&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;ComboBox&lt;/dt&gt;
&lt;dd&gt;Creating the widget you are prompted to choose as "TreeView Model". In the edit mode accessible via &lt;em&gt;"Edit &amp;gt; Hierarchy"&lt;/em&gt; there is created a CellRendererText. In the first field ("Text") the column to load the items of the dropdown menu from is set. To process the selection you will need the &lt;em&gt;changed&lt;/em&gt; signal.&lt;/dd&gt;
&lt;dt&gt;TreeView #1&lt;/dt&gt;
&lt;dd&gt;The first TreeView widget is placed within a &lt;em&gt;Gtk.ScrolledWindow&lt;/em&gt; container. Like in a ComboBox there are created CellRenderer representing a column to show in the TreeView table. If the sort indicator is activated columns can be sorted on a column table click.
Columns do not have to be sorted according to the columns they show.&lt;/dd&gt;
&lt;dt&gt;TreeView #2&lt;/dt&gt;
&lt;dd&gt;&lt;p class="first"&gt;The second TreeView widget is created within a &lt;em&gt;Gtk.ViewPort&lt;/em&gt;. This container widget does not provide scroll bars but the automatically adapts the necessary size to display the whole content. So for larger tables you will need the &lt;em&gt;Gtk.ScrolledWindow&lt;/em&gt;.
The sort indicator is deactivated and the middle column ("Description") is made editible with the signal &lt;a href="https://encarsia.github.io/en/posts/uberlistet/#id2"&gt;&lt;span class="problematic" id="id3"&gt;*&lt;/span&gt;&lt;/a&gt;edited" allocated.&lt;/p&gt;
&lt;div class="last system-message" id="id2"&gt;
&lt;p class="system-message-title"&gt;System Message: WARNING/2 (&lt;tt class="docutils"&gt;&amp;lt;string&amp;gt;&lt;/tt&gt;, line 45); &lt;em&gt;&lt;a href="https://encarsia.github.io/en/posts/uberlistet/#id3"&gt;backlink&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
Inline emphasis start-string without end-string.&lt;/div&gt;
&lt;/dd&gt;
&lt;dt&gt;Button&lt;/dt&gt;
&lt;dd&gt;The button's function is appending a row to the ListStore, so the &lt;em&gt;clicked&lt;/em&gt; signal is required.&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="python"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/uberlistet/#id9"&gt;Python&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="treestore"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/uberlistet/#id10"&gt;TreeStore&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The ListStore's row can be iterated over via &lt;tt class="docutils literal"&gt;for row in store&lt;/tt&gt;. New rows are added by &lt;tt class="docutils literal"&gt;append&lt;/tt&gt;, other options are &lt;tt class="docutils literal"&gt;insert&lt;/tt&gt; or &lt;tt class="docutils literal"&gt;remove&lt;/tt&gt; to add or delete rows at specific positions.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="combobox"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/uberlistet/#id11"&gt;ComboBox&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;For accessing a data row you need a &lt;em&gt;Gtk.TreeIter&lt;/em&gt; object which points to the position in the model (this can also be achieved by a &lt;em&gt;Gtk.TreePath&lt;/em&gt; object).&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_a459664856634718b5e1a5144febd1ad-1"&gt;&lt;/a&gt;&lt;span class="nb"&gt;iter&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;model&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_active_iter&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;&lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_model&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;a name="rest_code_a459664856634718b5e1a5144febd1ad-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;row&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;model&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;iter&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;a name="rest_code_a459664856634718b5e1a5144febd1ad-3"&gt;&lt;/a&gt;&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"Selection:"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="edit-cells"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/uberlistet/#id12"&gt;Edit cells&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;em&gt;edited&lt;/em&gt; signal passes the position and content of the edited cell. The new content of the &lt;em&gt;CellRendererText&lt;/em&gt; has to explicitly be committed to the data store otherwise the content will return to the pre edit state. This can be accomplished by using the passed &lt;em&gt;TreePath&lt;/em&gt; position.&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_2b02e7a66c9c40288fa4d1df5710bc50-1"&gt;&lt;/a&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;on_cellrenderer_descr_edited&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;widget&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;edit&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;a name="rest_code_2b02e7a66c9c40288fa4d1df5710bc50-2"&gt;&lt;/a&gt;    &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;store&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pos&lt;/span&gt;&lt;span class="p"&gt;)][&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;edit&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a href="https://encarsia.github.io/en/posts/uberlistet/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>glade</category><category>python</category><guid>https://encarsia.github.io/en/posts/uberlistet/</guid><pubDate>Thu, 24 Nov 2016 16:55:14 GMT</pubDate></item><item><title>Spoilt for choice</title><link>https://encarsia.github.io/en/posts/qual-der-wahl/</link><dc:creator>Anke (encarsia)</dc:creator><description>&lt;div&gt;&lt;div class="contents warning pull-right topic" id="contents"&gt;
&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/qual-der-wahl/#glade" id="id5"&gt;Glade&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/qual-der-wahl/#spinbutton" id="id6"&gt;Spinbutton&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/qual-der-wahl/#combobox" id="id7"&gt;Combobox&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/qual-der-wahl/#python" id="id8"&gt;Python&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/qual-der-wahl/#id1" id="id9"&gt;Spinbutton&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/qual-der-wahl/#id2" id="id10"&gt;Combobox&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/qual-der-wahl/#listings" id="id11"&gt;Listings&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/qual-der-wahl/#id3" id="id12"&gt;Glade&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/qual-der-wahl/#id4" id="id13"&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Spinbutton and Combobox&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Named widgets simplify input of values by providing a value list or range. Value input is normally done via mouseclicks, key input is optional.&lt;/p&gt;
&lt;div class="section" id="glade"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/qual-der-wahl/#id5"&gt;Glade&lt;/a&gt;&lt;/h2&gt;
&lt;a class="reference external image-reference" href="https://encarsia.github.io/images/08_combospin.png"&gt;&lt;img alt="/images/08_combospin.thumbnail.png" src="https://encarsia.github.io/images/08_combospin.thumbnail.png"&gt;&lt;/a&gt;
&lt;div class="section" id="spinbutton"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/qual-der-wahl/#id6"&gt;Spinbutton&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In Glade some properties of spinbutton widgets can be set like the minimum/maximum/default value. It is required to tie a &lt;em&gt;adjustment&lt;/em&gt; widget to the spinbutton. To do so select &lt;em&gt;"General &amp;gt; Spin Button Attributes &amp;gt; Adjustment"&lt;/em&gt; and assign or create an adjustment.&lt;/p&gt;
&lt;p&gt;Looking at the example file the two spinbuttons represent month and year dates. The month spinbutton is set to be circular, the minimum value follows after passing the maximum value. This act emits the &lt;em&gt;wrapped&lt;/em&gt; signal which is assigned to then adjust the year date of the second spinbutton.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="combobox"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/qual-der-wahl/#id7"&gt;Combobox&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;There are two different combobox widgets in GTK+:&lt;/p&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;GtkComboboxText&lt;/dt&gt;
&lt;dd&gt;The list items of the dropdown menu are strings directly that are directly set in the Glade widget properties&lt;/dd&gt;
&lt;dt&gt;GtkCombobox&lt;/dt&gt;
&lt;dd&gt;The list items are stored in a ListStore or TreeStore element that can hold data sets instead of a plain list. These data stores are accessible to different widgets (see the &lt;a class="reference external" href="https://encarsia.github.io/en/posts/uberlistet"&gt;"List article"&lt;/a&gt;).&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;Both widgets can include an optional entry widget which has to be activated in &lt;em&gt;"General &amp;gt; Has Entry"&lt;/em&gt;. By activating an internal &lt;em&gt;GtkEntry&lt;/em&gt; widget is created. It is important to set &lt;em&gt;"Common &amp;gt; Widget Flags &amp;gt; Can focus&lt;/em&gt;".&lt;/p&gt;
&lt;p&gt;The first ComboboxText widget in the exampe does not possess an entry field, the user can only select an item from the list. In both widgets the &lt;em&gt;changed&lt;/em&gt; signal is assigned to retrieve the selection.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="python"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/qual-der-wahl/#id8"&gt;Python&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id1"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/qual-der-wahl/#id9"&gt;Spinbutton&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The value of a spinbutton can be easily retrieved and set via &lt;tt class="docutils literal"&gt;get_value&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;set_value&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;In the example the values for the month and year date are set with the current dates. The &lt;tt class="docutils literal"&gt;on_spin_m_wrapped&lt;/tt&gt; function changes the year date up or down according to the value set in month date.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="id2"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/qual-der-wahl/#id10"&gt;Combobox&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Combobox lists can be extended by using the &lt;tt class="docutils literal"&gt;append&lt;/tt&gt; function, p.e.&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_e19be72a5b9149c49d243fddbf785ac0-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;builder&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get_object&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"comboboxtext2"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;None&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;entry&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;entry&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"foo"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;"bar"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;"yes"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;"no"&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;You get the selected item by calling &lt;tt class="docutils literal"&gt;widget.set_active_text()&lt;/tt&gt; which also passes the text of the optional text entry widget.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://encarsia.github.io/en/posts/qual-der-wahl/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>glade</category><category>python</category><guid>https://encarsia.github.io/en/posts/qual-der-wahl/</guid><pubDate>Fri, 11 Nov 2016 14:28:18 GMT</pubDate></item><item><title>Jumping off the greyscale</title><link>https://encarsia.github.io/en/posts/css/</link><dc:creator>Anke (encarsia)</dc:creator><description>&lt;div&gt;&lt;div class="contents warning pull-right topic" id="contents"&gt;
&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/css/#css" id="id4"&gt;CSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/css/#glade" id="id5"&gt;Glade&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/css/#python" id="id6"&gt;Python&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/css/#id1" id="id7"&gt;CSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/css/#levelbar" id="id8"&gt;Levelbar&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/css/#listings" id="id9"&gt;Listings&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/css/#id2" id="id10"&gt;Glade&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/css/#id3" id="id11"&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Pimp GUI using Cascading Style Sheets&lt;/strong&gt;&lt;/p&gt;
&lt;div class="section" id="css"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/css/#id4"&gt;CSS&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;GTK+ objects' layouts can be altered by using CSS. In my humble opinion the usage should not be exaggerated and the main part of the layout should be left to be managed by the theme. Links:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://wolfvollprecht.de/blog/gtk-python-and-css-are-an-awesome-combo/"&gt;GTK, Python and CSS are an awesome combo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://developer.gnome.org/gtk3/stable/chap-css-overview.html"&gt;Overview of CSS in GTK+&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://blogs.gnome.org/mclasen/2015/11/20/a-gtk-update/"&gt;A GTK+ update&lt;/a&gt; - Changes since GTK+ 3.20&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="glade"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/css/#id5"&gt;Glade&lt;/a&gt;&lt;/h2&gt;
&lt;a class="reference external image-reference" href="https://encarsia.github.io/images/07_css.png"&gt;&lt;img alt="/images/07_css.thumbnail.png" src="https://encarsia.github.io/images/07_css.thumbnail.png"&gt;&lt;/a&gt;
&lt;p&gt;CSS layout instructions are set in the source code. This example shows the usage of CSS in levelbars so 4 of them are created with Glade.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="python"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/css/#id6"&gt;Python&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="id1"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/css/#id7"&gt;CSS&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The pattern for layout instructions is&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_7a6122d3a9f3432e83b9143e72e5da84-1"&gt;&lt;/a&gt;widget [element] {
&lt;a name="rest_code_7a6122d3a9f3432e83b9143e72e5da84-2"&gt;&lt;/a&gt;  font...
&lt;a name="rest_code_7a6122d3a9f3432e83b9143e72e5da84-3"&gt;&lt;/a&gt;  color...
&lt;a name="rest_code_7a6122d3a9f3432e83b9143e72e5da84-4"&gt;&lt;/a&gt;  background...
&lt;a name="rest_code_7a6122d3a9f3432e83b9143e72e5da84-5"&gt;&lt;/a&gt;  ...
&lt;a name="rest_code_7a6122d3a9f3432e83b9143e72e5da84-6"&gt;&lt;/a&gt;}
&lt;/pre&gt;&lt;p&gt;that are stored in a string variable loaded by the &lt;tt class="docutils literal"&gt;Gtk.CssProvider()&lt;/tt&gt; class.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="levelbar"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/css/#id8"&gt;Levelbar&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Levelbar values can be displayed in different colours depending on the defined value range (see article &lt;a class="reference external" href="https://encarsia.github.io/en/posts/bars"&gt;"Bars"&lt;/a&gt;), p.e. to visualize a critical battery status. The predefined offset markers are:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;low&lt;/tt&gt; (&amp;lt;=.25)&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;high&lt;/tt&gt; (&amp;lt;=.75)&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;full&lt;/tt&gt; (bis 1)&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;The values can be retrieved by the &lt;tt class="docutils literal"&gt;get_offset_value&lt;/tt&gt; function or created/changed with the &lt;tt class="docutils literal"&gt;add_offset_value&lt;/tt&gt; function.&lt;/p&gt;
&lt;p&gt;In the example the 4th levelbar has an additional offset marker between &lt;tt class="docutils literal"&gt;high&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;full&lt;/tt&gt; that's why a value of 0.8 is not visualized as &lt;tt class="docutils literal"&gt;full&lt;/tt&gt; like it is in the 3rd levelbar.&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_fe6b4737eefc400088b3ae03853a48eb-1"&gt;&lt;/a&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;add_offset_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"alert"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;&lt;a href="https://encarsia.github.io/en/posts/css/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>glade</category><category>python</category><guid>https://encarsia.github.io/en/posts/css/</guid><pubDate>Tue, 08 Nov 2016 15:22:40 GMT</pubDate></item></channel></rss>