<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Merge and Destroy (Posts about nikola)</title><link>https://encarsia.github.io/</link><description></description><atom:link href="https://encarsia.github.io/en/categories/nikola.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Sat, 22 Dec 2018 17:53:52 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>NoN: v0.6 release</title><link>https://encarsia.github.io/en/posts/non-0.6/</link><dc:creator>Anke (encarsia)</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;strong&gt;Let's just use it as it is now.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The &lt;a class="reference external" href="https://encarsia.github.io/en/posts/non-0.5/"&gt;last release&lt;/a&gt; was a huge step for the project. Now it's time for some details and polish before I focus on a neglected project of mine.&lt;/p&gt;
&lt;div class="section" id="new-feature-upload-files-to-github-without-deployment"&gt;
&lt;h2&gt;New feature: upload files to GitHub without deployment&lt;/h2&gt;
&lt;p&gt;There are two new toolbuttons to push or pull changes to or from GitHub without building or deploying the site. This imitates 'cloud' support so you can edit articles, drafts, listings etc. within the GitHub web interface and/or download/pull changed files on multiple locations.&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="/images/non/pushdraft06.png" src="https://encarsia.github.io/images/non/pushdraft06.png"&gt;
&lt;p class="caption"&gt;Push files to the origin/src branch&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;This is a very basic implementation and you may have to manually resolve conflicts if you are editing in various places simultaneously.&lt;/p&gt;
&lt;div class="admonition warning"&gt;
&lt;p class="first admonition-title"&gt;Warnung&lt;/p&gt;
&lt;p class="last"&gt;Consider this feature marked as &lt;em&gt;testing&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="changelog"&gt;
&lt;h2&gt;Changelog&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;show input file format in statusbar&lt;/li&gt;
&lt;li&gt;detect if separate metadata file exists and show info in statusbar, open file on right click&lt;/li&gt;
&lt;li&gt;use the webbrowser Python package instead of subprocess commands; the package also uses the subprocess module but the code just looks nicer&lt;/li&gt;
&lt;li&gt;the "New post" dialog is a &lt;em&gt;GtkMessageDialog&lt;/em&gt; now&lt;/li&gt;
&lt;li&gt;FileChooserDialog has its OK/Cancel buttons back&lt;/li&gt;
&lt;li&gt;if the current working directory is bookmarked, the menu entry is labeled as "(active)" and deactivated&lt;/li&gt;
&lt;li&gt;gettext localization strings in the POT file are now complete&lt;/li&gt;
&lt;li&gt;German localization is complete&lt;/li&gt;
&lt;li&gt;some icons changed&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="figure"&gt;
&lt;img alt="/images/non/menu06.png" src="https://encarsia.github.io/images/non/menu06.png"&gt;
&lt;p class="caption"&gt;Menu: open bookmark is deactivated&lt;/p&gt;
&lt;/div&gt;
&lt;div class="figure"&gt;
&lt;img alt="/images/non/meta06.png" src="https://encarsia.github.io/images/non/meta06.png"&gt;
&lt;p class="caption"&gt;Information about file format and metafile in statusbar, open separate metafile on right click if it exists&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="links"&gt;
&lt;h2&gt;Links&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/encarsia/non/releases"&gt;Get it on GitHub!&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;evolution of Ni:&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://encarsia.github.io/en/posts/non-0.5/"&gt;v0.5 release&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://encarsia.github.io/en/posts/non-release/"&gt;v0.4 release&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://encarsia.github.io/en/posts/non-konsole/"&gt;Konsoledierung&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://encarsia.github.io/en/posts/non-fortschritte/"&gt;Fortschritte&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://encarsia.github.io/en/posts/neues-projekt-knights-of-ni/"&gt;Neues Projekt: Knights of Ni&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/div&gt;&lt;/div&gt;</description><guid>https://encarsia.github.io/en/posts/non-0.6/</guid><pubDate>Mon, 12 Nov 2018 15:10:57 GMT</pubDate></item><item><title>Nikola-Import-Plugin für Google+</title><link>https://encarsia.github.io/en/posts/import-gplus-nikola/</link><dc:creator>Anke (encarsia)</dc:creator><description>&lt;div&gt;&lt;div class="contents pull-right topic" id="inhalt"&gt;
&lt;p class="topic-title first"&gt;Inhalt&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/import-gplus-nikola/#das-ende-ist-nah" id="id3"&gt;Das Ende ist nah&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/import-gplus-nikola/#vorbereitungen" id="id4"&gt;Vorbereitungen&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/import-gplus-nikola/#google-takeout" id="id5"&gt;Google Takeout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/import-gplus-nikola/#nikola" id="id6"&gt;Nikola&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/import-gplus-nikola/#import-ausfuhren" id="id7"&gt;Import ausführen&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/import-gplus-nikola/#dateistruktur" id="id8"&gt;Dateistruktur&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/import-gplus-nikola/#beitrage-filtern" id="id9"&gt;Beiträge filtern&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/import-gplus-nikola/#import" id="id10"&gt;Import&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/import-gplus-nikola/#statische-seite-erstellen" id="id11"&gt;Statische Seite erstellen&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/import-gplus-nikola/#conf-py" id="id12"&gt;conf.py&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/import-gplus-nikola/#thema" id="id13"&gt;Thema&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/import-gplus-nikola/#build" id="id14"&gt;Build&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/import-gplus-nikola/#screenshots" id="id15"&gt;Screenshots&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/import-gplus-nikola/#links" id="id16"&gt;Links&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="das-ende-ist-nah"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/import-gplus-nikola/#id3"&gt;Das Ende ist nah&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Häufig wurde das Ende von Google+ herbeigeunkt. Nun, da es tatsächlich in etwa einem Jahr so weit ist, weicht Geschäftigkeit dem ersten Schock.&lt;/p&gt;
&lt;p&gt;In weiser Vorraussicht beschäftigte ich mich bereits vor einer Weile damit, die Daten brauchbar zu konservieren und entschied mich für eine Lösung mit dem statischen Webseitengenerator &lt;a class="reference external" href="https://getnikola.com/"&gt;Nikola&lt;/a&gt;: &lt;a class="reference external" href="https://encarsia.github.io/en/posts/google-takeout/"&gt;Verloren im Kaninchenbau von Google Takeout&lt;/a&gt;.&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="/images/takeout_gplus_slow.gif" src="https://encarsia.github.io/images/takeout_gplus_slow.gif"&gt;
&lt;p class="caption"&gt;Resultat der Nikola-generierten Seite mit hyde-Thema&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="vorbereitungen"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/import-gplus-nikola/#id4"&gt;Vorbereitungen&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="google-takeout"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/import-gplus-nikola/#id5"&gt;Google Takeout&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Zunächst benötigt man die Daten aus dem &lt;a class="reference external" href="https://takeout.google.com/settings/takeout"&gt;Takeout&lt;/a&gt;. Da sich hier große Datenmengen ansammeln, ist es ratsam, keine weiteren außer Googe+-relevanten Produkte auszuwählen:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Button "Nichts auswählen", dann &lt;em&gt;"Stream in Google+"&lt;/em&gt; aktivieren&lt;/li&gt;
&lt;li&gt;Als Dateiformat HTML wählen&lt;/li&gt;
&lt;li&gt;Als Archivformat &lt;strong&gt;zip&lt;/strong&gt; wählen, bei tar.gz kann es Encodingprobleme geben&lt;/li&gt;
&lt;li&gt;Nach Fertigstellung kann das/die Archiv/e heruntergeladen  und entpackt werden&lt;/li&gt;
&lt;li&gt;die &lt;em&gt;index.html&lt;/em&gt; gibt Hinweise auf Fehler bei der Archiverstellung&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="nikola"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/import-gplus-nikola/#id6"&gt;Nikola&lt;/a&gt;&lt;/h3&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Installation:&lt;/dt&gt;
&lt;dd&gt;Nikola kann über pip oder je nach verwendeter Distribution über die Paketverwaltung installiert werden: &lt;a class="reference external" href="https://getnikola.com/getting-started.html"&gt;Getting Started&lt;/a&gt;.&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Initialisierung:&lt;/dt&gt;
&lt;dd&gt;Das Plugin kann in einer bestehenden mit Nikola verwalteten Webseite erstellt werden. Es ist aber auch möglich, für diesen Verwendungszweck eine neue leere Seite zu erstellen, die dann später wieder gelöscht wird:&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_215ca2aef5b74d8faf679f16c793166b-1"&gt;&lt;/a&gt;$ nikola init gplus_dummy_site
&lt;/pre&gt;&lt;ol class="arabic simple" start="3"&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Plugin installieren:&lt;/dt&gt;
&lt;dd&gt;Das Plugin aus dem als Archiv herunterladen und enpacken oder das Repository klonen: &lt;a class="reference external" href="https://github.com/encarsia/gplus_nikola_import"&gt;encarsia/gplus_nikola_import&lt;/a&gt;. Den Ordner in die im vorigen Schritt angelegten Seite in den anzulegenden &lt;tt class="docutils literal"&gt;plugins&lt;/tt&gt;-Ordner kopieren.&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;Optional:
Um die Übersicht zu behalten, kann man auch den Takeout-Ordner in die Nikola-Seite verschieben.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="import-ausfuhren"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/import-gplus-nikola/#id7"&gt;Import ausführen&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="dateistruktur"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/import-gplus-nikola/#id8"&gt;Dateistruktur&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Bevor der Import ausgeführt wird, sollte man einen Blick in die &lt;tt class="docutils literal"&gt;import_gplus_html.py&lt;/tt&gt; werfen. Die Ordnerbezeichnungen entsprechen der deutschen Spracheinstellung des Takeouts, bei abweichender Spracheinstellung muss man hier die entsprechenden Bezeichnungen der Dateistruktur anpassen.&lt;/p&gt;
&lt;p&gt;Es werden Beiträge nach Verteilungsstatus unterschieden:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;em&gt;Öffentlich&lt;/em&gt; geteilt&lt;/li&gt;
&lt;li&gt;Mit &lt;em&gt;Meinen Kreisen&lt;/em&gt; geteilt&lt;/li&gt;
&lt;li&gt;Mit &lt;em&gt;Erweiterten Kreisen&lt;/em&gt; geteilt&lt;/li&gt;
&lt;li&gt;Mit bestimmten Kreisen oder Personen/Profilen geteilt&lt;/li&gt;
&lt;li&gt;Beiträge in &lt;em&gt;Communites&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Beiträge in &lt;em&gt;Sammlungen&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="beitrage-filtern"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/import-gplus-nikola/#id9"&gt;Beiträge filtern&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Mit der Option &lt;tt class="docutils literal"&gt;import_private&lt;/tt&gt; lässt sich einstellen, ob mit bestimmten Kreisen oder Personen/Profilen geteilte Beiträge importiert werden sollen.&lt;/p&gt;
&lt;p&gt;Die Option &lt;tt class="docutils literal"&gt;import_com&lt;/tt&gt; schaltet den Import von Communitybeträgen ein oder aus. Dabei wird nicht nach öffentlichen oder geschlossenen Communities unterschieden.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="import"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/import-gplus-nikola/#id10"&gt;Import&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Im &lt;tt class="docutils literal"&gt;gplus_dummy_site&lt;/tt&gt;-Verzeichnis führt man nun den Import aus, dabei wird als Argument der Ordner des entpackten Takeout-Verzeichnisses übergeben:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_4c0be523c0bf408095ee982a7e4488c4-1"&gt;&lt;/a&gt;$ nikola import_gplus_html takeout
&lt;/pre&gt;&lt;p&gt;Nikola initialisiert eine neue Seite namens "new_site", dort werden alle Posts, die dazugehörigen Metadaten und die Mediendateien gespeichert.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="statische-seite-erstellen"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/import-gplus-nikola/#id11"&gt;Statische Seite erstellen&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="conf-py"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/import-gplus-nikola/#id12"&gt;conf.py&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Nun wechselt man in das neue Verzeichnis "new_site", das wiederum eine Nikola-Instanz ist.&lt;/p&gt;
&lt;p&gt;Dort befindet sich die Konfigurationsdatei &lt;tt class="docutils literal"&gt;conf.py&lt;/tt&gt;. In dieser lassen sich nun Anpassungen vornehmen. Da im Beispiel das Thema &lt;a class="reference external" href="https://themes.getnikola.com/v7/hyde/"&gt;hyde&lt;/a&gt; verwendet wird, wird dieses hier gleich angepasst, außerdem RSS deaktiviert:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_14381e8ce4be4b1288ff967b84bee4b9-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;THEME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"hyde"&lt;/span&gt;
&lt;a name="rest_code_14381e8ce4be4b1288ff967b84bee4b9-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;GENERATE_RSS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="thema"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/import-gplus-nikola/#id13"&gt;Thema&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Hyde ist ein perönlicher Favorit und wird deshalb hier installiiert:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_ee94bce1a16344a399dd13c4b3c38052-1"&gt;&lt;/a&gt;$ nikola theme -i hyde
&lt;/pre&gt;&lt;p&gt;Im Pluginordner befindet sich eine CSS-Datei &lt;tt class="docutils literal"&gt;custom.css&lt;/tt&gt;, die einige optische Anpassungen für diesen Anwendungsfall enthält, diese einfach in das Verzeichnis &lt;tt class="docutils literal"&gt;themes/hyde/assets/css&lt;/tt&gt; kopieren.&lt;/p&gt;
&lt;p&gt;Grundsätzlich funktioniert die Seite mit jeden Theme. Eine Liste der verfügbaren &lt;a class="reference external" href="https://themes.getnikola.com"&gt;Themes&lt;/a&gt; erhält man folgendermaßen:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_dc6aea36c16348dd953b0c82214f5417-1"&gt;&lt;/a&gt;$ nikola theme -l   &lt;span class="c1"&gt;# installierbar&lt;/span&gt;
&lt;a name="rest_code_dc6aea36c16348dd953b0c82214f5417-2"&gt;&lt;/a&gt;$ nikola theme --list-installed     &lt;span class="c1"&gt;# installiert&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Um ein Thema zu verwenden, muss es in der &lt;tt class="docutils literal"&gt;conf.py&lt;/tt&gt; angegeben und die Seite neu gebaut werden. Ein erneuter Datenimport ist natürlich nicht notwendig.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="build"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/import-gplus-nikola/#id14"&gt;Build&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Die eigentliche Generierung der Seite erfolgt zum Schluss mit&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_d08115c199d84c4aacfb6d8aa3a2947e-1"&gt;&lt;/a&gt;$ nikola build
&lt;/pre&gt;&lt;p&gt;Den lokalen Server startet man mit&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_af6370780db54b98aba13eb9bf183391-1"&gt;&lt;/a&gt;$ nikola serve
&lt;a name="rest_code_af6370780db54b98aba13eb9bf183391-2"&gt;&lt;/a&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;2018&lt;/span&gt;-10-18T09:57:02Z&lt;span class="o"&gt;]&lt;/span&gt; INFO: serve: Serving on http://127.0.0.1:8000/ ...
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="screenshots"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/import-gplus-nikola/#id15"&gt;Screenshots&lt;/a&gt;&lt;/h2&gt;
&lt;div class="figure"&gt;
&lt;img alt="/images/GPlus_plugin/postview.png" src="https://encarsia.github.io/images/GPlus_plugin/postview.png"&gt;
&lt;p class="caption"&gt;Beitragsansicht (Postception!)&lt;/p&gt;
&lt;/div&gt;
&lt;div class="figure"&gt;
&lt;img alt="/images/GPlus_plugin/archiv.png" src="https://encarsia.github.io/images/GPlus_plugin/archiv.png"&gt;
&lt;p class="caption"&gt;Archiv&lt;/p&gt;
&lt;/div&gt;
&lt;div class="figure"&gt;
&lt;img alt="/images/GPlus_plugin/sharestatus.png" src="https://encarsia.github.io/images/GPlus_plugin/sharestatus.png"&gt;
&lt;p class="caption"&gt;Der Verteilungsstatus ist als Kategorie erfasst&lt;/p&gt;
&lt;/div&gt;
&lt;div class="figure"&gt;
&lt;img alt="/images/GPlus_plugin/cat_ubersicht.png" src="https://encarsia.github.io/images/GPlus_plugin/cat_ubersicht.png"&gt;
&lt;p class="caption"&gt;Kategorieansicht&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="links"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/import-gplus-nikola/#id16"&gt;Links&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Hier: &lt;a class="reference external" href="https://encarsia.github.io/en/posts/google-takeout/"&gt;Verloren im Kaninchenbau von Google Takeout&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Hier: &lt;a class="reference external" href="https://encarsia.github.io/en/posts/diegplusdie/"&gt;The Notwork - lasst G+ sterben&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Import-Plugin für &lt;a class="reference external" href="https://getnikola.com/"&gt;Nikola&lt;/a&gt;: &lt;a class="reference external" href="https://github.com/encarsia/gplus_nikola_import/"&gt;gplus_nikola_import&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Alternative mit G+-Import: &lt;a class="reference external" href="https://git.net2o.de/bernd/net2o"&gt;net2o&lt;/a&gt; - reinvent the internet, &lt;a class="reference external" href="https://plus.google.com/+BerndPaysan"&gt;Bernd Paysan auf G+&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;</description><guid>https://encarsia.github.io/en/posts/import-gplus-nikola/</guid><pubDate>Wed, 17 Oct 2018 13:25:00 GMT</pubDate></item><item><title>NoN: News, changes and release</title><link>https://encarsia.github.io/en/posts/non-0.5/</link><dc:creator>Anke (encarsia)</dc:creator><description>&lt;div&gt;&lt;div class="contents pull-right topic" id="inhalt"&gt;
&lt;p class="topic-title first"&gt;Inhalt&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/non-0.5/#versions-n-distros" id="id1"&gt;Versions'n'distros&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/non-0.5/#nikola-v8" id="id2"&gt;Nikola v8&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/non-0.5/#runs-on-archlinux-and-ubuntu" id="id3"&gt;Runs on Archlinux and Ubuntu&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/non-0.5/#this-is-new-since-last-release" id="id4"&gt;This is new since last release&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/non-0.5/#install-uninstall-via-setuptools" id="id5"&gt;Install/uninstall via setuptools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/non-0.5/#config-in-yaml-format" id="id6"&gt;Config in YAML format&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/non-0.5/#site-data-stored-in-json-file" id="id7"&gt;Site data stored in JSON file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/non-0.5/#optimized-window-space" id="id8"&gt;Optimized window space&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/non-0.5/#summary-tab" id="id9"&gt;Summary tab&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/non-0.5/#localization-support" id="id10"&gt;Localization support&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/non-0.5/#create-posts-pages-in-markdown" id="id11"&gt;Create posts/pages in Markdown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/non-0.5/#get-help" id="id12"&gt;Get help&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/non-0.5/#thing-left-do-do" id="id13"&gt;Thing left do do&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/non-0.5/#issues" id="id14"&gt;Issues&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/non-0.5/#roadmap" id="id15"&gt;Roadmap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/non-0.5/#download" id="id16"&gt;Download&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Watch Knights of Ni grow up.&lt;/strong&gt;&lt;/p&gt;
&lt;div class="section" id="versions-n-distros"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/non-0.5/#id1"&gt;Versions'n'distros&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="nikola-v8"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/non-0.5/#id2"&gt;Nikola v8&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If you have not done yet you should read the &lt;a class="reference external" href="https://getnikola.com/blog/upgrading-to-nikola-v8.html"&gt;upgrade guide to Nikola v8&lt;/a&gt;. NoN works with v7 and v8 nonetheless.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="runs-on-archlinux-and-ubuntu"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/non-0.5/#id3"&gt;Runs on Archlinux and Ubuntu&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I fiddled around until I got NoN working on a fresh Ubuntu 18.04 LTS installation. First install some dependencies:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_41d19bd738c54cf48131613ee136c755-1"&gt;&lt;/a&gt;$ sudo apt-get install gir1.2-webkit2-4.0 python3-pip
&lt;/pre&gt;&lt;p&gt;and then in lack of a package in the repositories install Nikola via pip:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_96163992b33f4cda94d3548069977b50-1"&gt;&lt;/a&gt;$ pip3 install Nikola&lt;span class="o"&gt;[&lt;/span&gt;extras&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;If you are on (a) Archlinux (derivate) you can install Nikola from the repos:&lt;/p&gt;
&lt;pre class="code bash"&gt;&lt;a name="rest_code_b3e53aa95047423fa2d52bec98eef309-1"&gt;&lt;/a&gt;$ sudo pacman -S nikola python-yaml
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="this-is-new-since-last-release"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/non-0.5/#id4"&gt;This is new since last release&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="install-uninstall-via-setuptools"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/non-0.5/#id5"&gt;Install/uninstall via setuptools&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;NoN is basically a Python script with a GtkBuilder GUI so in general you can get it running by executing &lt;tt class="docutils literal"&gt;non.py&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;As an alternative you can now install or uninstall the application using setuptools which will also install a desktop entry so you can start the application from the menu:&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_0bb367d02a8f46c4bf526b2442b96b84-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# install for current user&lt;/span&gt;
&lt;a name="rest_code_0bb367d02a8f46c4bf526b2442b96b84-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;
&lt;a name="rest_code_0bb367d02a8f46c4bf526b2442b96b84-3"&gt;&lt;/a&gt;&lt;span class="c1"&gt;# install system-wide&lt;/span&gt;
&lt;a name="rest_code_0bb367d02a8f46c4bf526b2442b96b84-4"&gt;&lt;/a&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Use the &lt;tt class="docutils literal"&gt;uninstall&lt;/tt&gt; command to revert installation.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="config-in-yaml-format"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/non-0.5/#id6"&gt;Config in YAML format&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The configuration is stored in easy readable YAML format. As of now there are only bookmarks and the last working directory stored.&lt;/p&gt;
&lt;p&gt;Editing or removing bookmarks can only be done here (GUI solution is on the roadmap).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="site-data-stored-in-json-file"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/non-0.5/#id7"&gt;Site data stored in JSON file&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Application has been sped up by storing the sites (meta) data in a JSON formatted file. If a &lt;tt class="docutils literal"&gt;conf.py&lt;/tt&gt; and the corresponding site is loaded into the application for the first time the data will be indexed. This initial task can take some time. On every next refresh/start this data will only be checked for changes and updated.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="optimized-window-space"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/non-0.5/#id8"&gt;Optimized window space&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I rearraged some elements to save some vertical space:&lt;/p&gt;
&lt;table border="1" class="docutils align-center"&gt;
&lt;colgroup&gt;
&lt;col width="100%"&gt;
&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td&gt;&lt;img alt="image1" src="https://encarsia.github.io/images/non/non_info_old.png"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;em&gt;is now&lt;/em&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;img alt="image2" src="https://encarsia.github.io/images/non/non_info_new.png"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="summary-tab"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/non-0.5/#id9"&gt;Summary tab&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The main window's notebook now has a new tab showing a HTML page with collected information about the current website:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;disk usage&lt;/li&gt;
&lt;li&gt;status (&lt;tt class="docutils literal"&gt;nikola status&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;broken internal links (&lt;tt class="docutils literal"&gt;nikola check &lt;span class="pre"&gt;-l&lt;/span&gt;&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;themes&lt;/li&gt;
&lt;li&gt;plugins and&lt;/li&gt;
&lt;li&gt;custom shortcodes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The CSS used is imitates GitHub style, credit goes to &lt;a class="reference external" href="https://github.com/sindresorhus/github-markdown-css"&gt;sindresorhus/github-markdown-css&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The summary is generated when initially indexing the site. Choose the menu item to generate a new report.&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="/images/non/non_summary.png" src="https://encarsia.github.io/images/non/non_summary.png"&gt;
&lt;p class="caption"&gt;Summary tab&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="localization-support"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/non-0.5/#id10"&gt;Localization support&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;There is now a translation template file (POT) waiting for translation. In case you have German localization, don't be irritated, there are only some strings translated yet.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="create-posts-pages-in-markdown"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/non-0.5/#id11"&gt;Create posts/pages in Markdown&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The default input format of Nikola is reStructuredText but it supports various other formats. You can now create new posts or pages in Markdown. This option is only available if &lt;em&gt;"markdown"&lt;/em&gt; is set in the &lt;tt class="docutils literal"&gt;conf.py&lt;/tt&gt;'s &lt;em&gt;COMPILERS&lt;/em&gt; variable.&lt;/p&gt;
&lt;p&gt;You must also configure the &lt;em&gt;POSTS&lt;/em&gt; and &lt;em&gt;PAGES&lt;/em&gt; dictionaries, NoN does not check for this and will not throw an error message if not set.&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="/images/non/non_md.png" src="https://encarsia.github.io/images/non/non_md.png"&gt;
&lt;p class="caption"&gt;Markdown format checkbutton&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="get-help"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/non-0.5/#id12"&gt;Get help&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The 'Help' button now contains a submenu with links to the Nikola handbook and to reStructuredText and Markdown syntax references so I...ehm you don't have to google them time and time again.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="thing-left-do-do"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/non-0.5/#id13"&gt;Thing left do do&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="issues"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/non-0.5/#id14"&gt;Issues&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;icon not shown under Wayland&lt;/li&gt;
&lt;li&gt;running application not marked at dock launcher (favorite), separate icon&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="roadmap"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/non-0.5/#id15"&gt;Roadmap&lt;/a&gt;&lt;/h3&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;preferences dialog/window&lt;/li&gt;
&lt;li&gt;article templates (make use of &lt;tt class="docutils literal"&gt;nikola new_post &lt;span class="pre"&gt;--import...&lt;/span&gt;&lt;/tt&gt;)&lt;/li&gt;
&lt;li&gt;editor tab for quick editing&lt;/li&gt;
&lt;li&gt;option to pull/push drafts from/to Git&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="download"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/non-0.5/#id16"&gt;Download&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/encarsia/non/releases/tag/v0.5"&gt;v0.5 release&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/encarsia/non/"&gt;clone or download from GitHub&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;</description><guid>https://encarsia.github.io/en/posts/non-0.5/</guid><pubDate>Sat, 06 Oct 2018 06:00:59 GMT</pubDate></item><item><title>Embed Mastodon toots with Nikola</title><link>https://encarsia.github.io/en/posts/mastodon-nikola/</link><dc:creator>Anke (encarsia)</dc:creator><description>&lt;div&gt;&lt;p&gt;

    

    

&lt;iframe src="https://mastodon.social/@kevingimbel/100745593232538751/embed" class="mastodon-embed" style="max-width: 100%; border: 0" width="600" height='333"&amp;lt;/iframe'&gt;

&lt;/iframe&gt;&lt;/p&gt;
&lt;p&gt;Reading the post &lt;a class="reference external" href="https://www.kevingimbel.com/mastodon-embed-shortcode-for-hugo/"&gt;Mastodon Embed Shortcode for hugo&lt;/a&gt; I became envious and thought 'We Nikola users might want that, too'. The &lt;a class="reference external" href="https://getnikola.com/handbook.html#shortcodes"&gt;Nikola handbook&lt;/a&gt; plainly admits to have 'adopted' the shortcode feature from Hugo so how hard can it be?&lt;/p&gt;
&lt;p&gt;Here are three ways of embedding toots in your Nikola site using reStructuredText.&lt;/p&gt;
&lt;div class="section" id="the-raw-directive"&gt;
&lt;h2&gt;The &lt;em&gt;raw&lt;/em&gt; directive&lt;/h2&gt;
&lt;p&gt;This directive enables you to pass content to the output without being processed. See &lt;a class="reference external" href="http://docutils.sourceforge.net/docs/ref/rst/directives.html#raw-data-pass-through"&gt;reStructuredText Directives documentation&lt;/a&gt; for details.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://encarsia.github.io/listings/raw.txt.html"&gt;raw.txt&lt;/a&gt;  &lt;a class="reference external" href="https://encarsia.github.io/listings/raw.txt"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code rest"&gt;&lt;a name="rest_code_54066a9544bd407b8739ff289b4b6984-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="ow"&gt;raw&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt; html
&lt;a name="rest_code_54066a9544bd407b8739ff289b4b6984-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_54066a9544bd407b8739ff289b4b6984-3"&gt;&lt;/a&gt;    &amp;lt;iframe src="https://mastodon.social/@kevingimbel/100745593232538751/embed" class="mastodon-embed" style="max-width: 100%; border: 0" width="600" height="333"&amp;lt;/iframe&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="the-raw-shortcode"&gt;
&lt;h2&gt;The &lt;em&gt;raw&lt;/em&gt; shortcode&lt;/h2&gt;
&lt;p&gt;This is part of the built-in shortcodes. It works like the directive, you only need to use shortcode tags.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://encarsia.github.io/listings/raw.txt.html"&gt;raw.txt&lt;/a&gt;  &lt;a class="reference external" href="https://encarsia.github.io/listings/raw.txt"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code html"&gt;&lt;a name="rest_code_37db1d3e9bb44be3b1cb4492c0f2ee4a-1"&gt;&lt;/a&gt;{{% raw %}}
&lt;a name="rest_code_37db1d3e9bb44be3b1cb4492c0f2ee4a-2"&gt;&lt;/a&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;iframe&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"https://mastodon.social/@kevingimbel/100745593232538751/embed"&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"mastodon-embed"&lt;/span&gt; &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"max-width: 100%; border: 0"&lt;/span&gt; &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"600"&lt;/span&gt; &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"333"&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="na"&gt;iframe&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;a name="rest_code_37db1d3e9bb44be3b1cb4492c0f2ee4a-3"&gt;&lt;/a&gt;{{% /raw %}}
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="create-your-own-shortcode"&gt;
&lt;h2&gt;Create your own shortcode&lt;/h2&gt;
&lt;p&gt;A separate shortcode can easily be realized with a &lt;a class="reference external" href="https://getnikola.com/extending.html#template-based-shortcodes"&gt;template-based shortcode&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;All you have to do is create a template and save it as &lt;tt class="docutils literal"&gt;your_shortcode_name.tmpl&lt;/tt&gt; in the &lt;tt class="docutils literal"&gt;shortcodes&lt;/tt&gt; folder of your Nikola site. If you do not use any custom shortcodes yet you will probably have to create the folder.&lt;/p&gt;
&lt;p&gt;Depending on the template engine used by your theme you have to provide shortcode templates for Jinja2 or Mako:&lt;/p&gt;
&lt;script src="https://gist.github.com/52728167ac7d2fe79caf480c291931ea.js"&gt;&lt;/script&gt;&lt;noscript&gt;&lt;pre class="literal-block"&gt;
{#
Usage:

    {{% mastodon status=https://instance.domain/@user/tootnr %}}
    
Optional parameters:

    width (default: 600)
    height (default: 333)
    
    Example: {{% mastodon status=https://instance.domain/@user/tootnr % width=300 height=600}} will show a 300x600 frame instead of the default 600x333
#}

&amp;lt;iframe src="{{ status }}/embed" class="mastodon-embed" style="max-width: 100%; border: 0" width="{{ width|default("600") }}" height="{{ height|default("333") }}"&amp;lt;/iframe&amp;gt;

&lt;/pre&gt;
&lt;/noscript&gt;&lt;script src="https://gist.github.com/da438431ca42781045b4d63ac1b9ea5c.js"&gt;&lt;/script&gt;&lt;noscript&gt;&lt;pre class="literal-block"&gt;
&amp;lt;%doc&amp;gt;
Usage:

    {{% mastodon status=https://instance.domain/@user/tootnr %}}
    
Optional parameters:

    width (default: 600)
    height (default: 333)
    
    Example: {{% mastodon status=https://instance.domain/@user/tootnr % width=300 height=600}} will show a 300x600 frame instead of the default 600x333
&amp;lt;/%doc&amp;gt;

% if width is UNDEFINED:
    &amp;lt;% w = 600 %&amp;gt;
% else:
    &amp;lt;% w = width %&amp;gt;
% endif

% if height is UNDEFINED:
    &amp;lt;% h = 333 %&amp;gt;
% else:
    &amp;lt;% h = height %&amp;gt;
% endif

&amp;lt;iframe src="${status}/embed" class="mastodon-embed" style="max-width: 100%; border: 0" width=${w} height=${h}"&amp;lt;/iframe&amp;gt;

&lt;/pre&gt;
&lt;/noscript&gt;&lt;p&gt;The shortcode can be used as intended, pass a status and optionally width and height.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://encarsia.github.io/listings/raw.txt.html"&gt;raw.txt&lt;/a&gt;  &lt;a class="reference external" href="https://encarsia.github.io/listings/raw.txt"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code html"&gt;&lt;a name="rest_code_542681abeca44355a6d7bc0a41094eb3-1"&gt;&lt;/a&gt;{{% mastodon status=https://mastodon.social/@kevingimbel/100745593232538751 %}}
&lt;a name="rest_code_542681abeca44355a6d7bc0a41094eb3-2"&gt;&lt;/a&gt;{{% mastodon status=https://mastodon.social/@kevingimbel/100745593232538751 width=300 height=600 %}}
&lt;/pre&gt;&lt;p&gt;This is working for me but if the shortcode fails you should use the shortcode role to pass the text unaltered (consult the &lt;a class="reference external" href="https://getnikola.com/handbook.html#using-a-shortcode"&gt;handbook&lt;/a&gt; for more information):&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://encarsia.github.io/listings/raw.txt.html"&gt;raw.txt&lt;/a&gt;  &lt;a class="reference external" href="https://encarsia.github.io/listings/raw.txt"&gt;(Source)&lt;/a&gt;&lt;/p&gt;
&lt;pre class="code rest"&gt;&lt;a name="rest_code_5db4d10f4bf047099c51449c75c73f54-1"&gt;&lt;/a&gt;&lt;span class="na"&gt;:sc:&lt;/span&gt;&lt;span class="nv"&gt;`{{% mastodon status=https://mastodon.social/@kevingimbel/100745593232538751 %}}`&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</description><category>mastodon</category><category>nikola</category><guid>https://encarsia.github.io/en/posts/mastodon-nikola/</guid><pubDate>Tue, 18 Sep 2018 13:50:16 GMT</pubDate></item><item><title>NoN: jetzt noch toller</title><link>https://encarsia.github.io/en/posts/non-jetzt-noch-viel-toller/</link><dc:creator>Anke (encarsia)</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;strong&gt;Knights of Ni - sag niemals nie&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Nach den &lt;a class="reference external" href="https://encarsia.github.io/en/posts/non-release/"&gt;kürzlichen Änderungen&lt;/a&gt; an der Oberfläche gibt es nun erfreuliche Fortschritte darunter zu vermelden.&lt;/p&gt;
&lt;div class="section" id="neuigkeiten"&gt;
&lt;h2&gt;Neuigkeiten&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Man kann NoN jetzt richtig (mit Hilfe von setuptools) installieren und deinstallieren.&lt;/li&gt;
&lt;li&gt;Vom Programm generierte Dateien werden nun wie üblich im eigenen Verzeichnis im Homeverzeichnis gespeichert.&lt;/li&gt;
&lt;li&gt;Der Programmablauf wurde beschleunigt und die Dateizugriffe massiv reduziert, indem die Posts-/Pages-Informationen für den wiederholten Abruf geparst und in einer JSON-Datei abgelegt werden.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="installation-via-setuptools"&gt;
&lt;h2&gt;Installation via setuptools&lt;/h2&gt;
&lt;p&gt;Bei der Installation via &lt;a class="reference external" href="https://pypi.org/project/setuptools/"&gt;setuptools&lt;/a&gt; werden sowohl das Programm inklusive der UI als auch ein Desktopeintrag installiert. Nach der Installation lässt sich das Programm in GNOME also bequem über &lt;tt class="docutils literal"&gt;[super]&lt;/tt&gt; + &lt;tt class="docutils literal"&gt;[n]&lt;/tt&gt; (... &lt;tt class="docutils literal"&gt;[o]&lt;/tt&gt; ... &lt;tt class="docutils literal"&gt;[n]&lt;/tt&gt;) + &lt;tt class="docutils literal"&gt;[enter]&lt;/tt&gt; starten.&lt;/p&gt;
&lt;p&gt;Um dies alles auch wieder loszuwerden, gibt es ein zusätzliches &lt;cite&gt;uninstall&lt;/cite&gt;-Kommando. Beide Kommandos sind mit der Option &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;--user&lt;/span&gt;&lt;/tt&gt; möglich:&lt;/p&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_521b8c02da8c4642b4184e548d5b5b43-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;#&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;De-/&lt;span class="o"&gt;)&lt;/span&gt;Installation im lokalen Nutzerverzeichnis
&lt;a name="rest_code_521b8c02da8c4642b4184e548d5b5b43-2"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; python setup.py install --user
&lt;a name="rest_code_521b8c02da8c4642b4184e548d5b5b43-3"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; python setup.py uninstall --user
&lt;a name="rest_code_521b8c02da8c4642b4184e548d5b5b43-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_521b8c02da8c4642b4184e548d5b5b43-5"&gt;&lt;/a&gt;&lt;span class="gp"&gt;#&lt;/span&gt; systemweite &lt;span class="o"&gt;(&lt;/span&gt;De-/&lt;span class="o"&gt;)&lt;/span&gt;Installation
&lt;a name="rest_code_521b8c02da8c4642b4184e548d5b5b43-6"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; sudo python setup.py install
&lt;a name="rest_code_521b8c02da8c4642b4184e548d5b5b43-7"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; sudo python setup.py uninstall
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="dateistruktur"&gt;
&lt;h2&gt;Dateistruktur&lt;/h2&gt;
&lt;p&gt;Die Nutzerdaten liegen jetzt in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.non&lt;/span&gt;&lt;/tt&gt;. Dort befinden sich&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;die Konfigurationsdatei &lt;tt class="docutils literal"&gt;config.yaml&lt;/tt&gt;, in der der Pfad zur aktuellen/letzten Nikola-Seite und die Bookmarks gespeichert sind,&lt;/li&gt;
&lt;li&gt;die Logdatei &lt;tt class="docutils literal"&gt;non.log&lt;/tt&gt; sowie&lt;/li&gt;
&lt;li&gt;die geparsten Daten der aufgerufenen Nikola-Seiten jeweils als JSON-Datei.&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="speicherung-von-meta-daten"&gt;
&lt;h2&gt;Speicherung von (Meta-)Daten&lt;/h2&gt;
&lt;p&gt;Für die Anzeige im TreeStore wurden die Daten bisher sowieso intern als Dictionary gespeichert. Das Ineffiziente daran war allerdings, dass die Daten bei jedem Refresh immer neu abgerufen wurden. Dies ist nicht notwendig und mit zunehmender Größe der Seite auch sehr zäh.&lt;/p&gt;
&lt;p&gt;Die Lösung bestand also darin, die Daten des Dictionary zum einen für den späteren Gebrauch in einer Datei zu speichern und zum anderen es nur durch eine Update-Funktion auf aktualisierte Inhalte zu überprüfen.&lt;/p&gt;
&lt;p&gt;Auf diese Weise werden beim ersten Aufruf einer Nikola-Konfiguration alle Posts/Pages, Tags und Kategorien oder bei erneutem Aufruf die Daten aus der entsprechenden JSON-Datei eingelesen. Die Aktualisierung erfolgt über den Abgleich der letzten Dateimodifikation. Die JSON-Datei wird beim Wechsel in eine andere Nikola-Seite (z.B. über ein Bookmark) oder bei Programmende gespeichert.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="links"&gt;
&lt;h2&gt;Links&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/encarsia/non"&gt;Knights of Ni-Repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://getnikola.com"&gt;Nikola&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Beiträge im Blog&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://encarsia.github.io/en/posts/neues-projekt-knights-of-ni/"&gt;Neues Projekt: Knights of Ni&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://encarsia.github.io/en/posts/non-fortschritte/"&gt;NoN: Fortschritte&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://encarsia.github.io/en/posts/non-konsole/"&gt;NoN: Konsoledierung&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://encarsia.github.io/en/posts/non-release/"&gt;NoN: Fortschritte und Release&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://encarsia.github.io/en/posts/setuptools-spicker/"&gt;Der setuptools-Spicker&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;</description><guid>https://encarsia.github.io/en/posts/non-jetzt-noch-viel-toller/</guid><pubDate>Sun, 24 Jun 2018 13:45:12 GMT</pubDate></item><item><title>Lost in the rabbit hole of Google Takeout</title><link>https://encarsia.github.io/en/posts/google-takeout/</link><dc:creator>Anke (encarsia)</dc:creator><description>&lt;div&gt;&lt;div class="contents warning pull-right topic" id="contents"&gt;
&lt;p class="topic-title first"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/google-takeout/#i-get-the-4-20-and-google" id="id1"&gt;I get the 4, 20 and Google+&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/google-takeout/#unpacking-presents" id="id2"&gt;Unpacking presents&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/google-takeout/#your-entry-nikola" id="id3"&gt;Your entry: Nikola&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/google-takeout/#theming" id="id4"&gt;Theming&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/google-takeout/#wishlist" id="id5"&gt;Wishlist&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/google-takeout/#conclusion" id="id6"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/google-takeout/#update" id="id7"&gt;Update&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Backup your data. They said. All of it. They said. And then came Google Takeout&lt;/strong&gt;&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="/images/import_gplus_post.png" src="https://encarsia.github.io/images/import_gplus_post.png"&gt;
&lt;p class="caption"&gt;G+ post HTML file from Takeout&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="i-get-the-4-20-and-google"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/google-takeout/#id1"&gt;I get the 4, 20 and Google+&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://google.com/takeout/"&gt;Takeout&lt;/a&gt; is Google's user data archive system for numerous products. My primary target me was to download an archive of my Google+ activities.&lt;/p&gt;
&lt;p&gt;The approach is quite simple: choose the product in Takeout and wait until the archive(s) has/have been generated. The downloadable archive will be valid for a week but you can generate new archives at any time.&lt;/p&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;Lesson 1:&lt;/dt&gt;
&lt;dd&gt;Choose &lt;em&gt;zip&lt;/em&gt; as filetype if you use umlauts, there could be encoding issues in &lt;em&gt;tgz&lt;/em&gt; files.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;I remembered that there was an import plugin for Nikola and I imagined to throw in the archive and to get a usable local site in return. At this point of the article the reader may speculate that this didn't work in the slightest way.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="unpacking-presents"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/google-takeout/#id2"&gt;Unpacking presents&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The first inspection reveals:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;All G+ posts are located in &lt;tt class="docutils literal"&gt;Google+ stream/Posts&lt;/tt&gt; as HTML files. These files appear usable.&lt;/li&gt;
&lt;li&gt;Image links just point to filenames. The path is missing so only images in the same directory are shown but&lt;/li&gt;
&lt;li&gt;Images are scattered among different directories (in &lt;tt class="docutils literal"&gt;Posts&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;Photos&lt;/tt&gt; and their subfolders). The majority of image files are stored in &lt;tt class="docutils literal"&gt;Photos of posts&lt;/tt&gt; in date corresponding subfolders.&lt;/li&gt;
&lt;li&gt;There are different date formats in peaceful co-existence:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_c15991999c344247b2e46254e609f275-1"&gt;&lt;/a&gt;Photos of posts/
&lt;a name="rest_code_c15991999c344247b2e46254e609f275-2"&gt;&lt;/a&gt; ├── 02.06.14
&lt;a name="rest_code_c15991999c344247b2e46254e609f275-3"&gt;&lt;/a&gt; ├── 02.06.16
&lt;a name="rest_code_c15991999c344247b2e46254e609f275-4"&gt;&lt;/a&gt; ├── 22. Juli 2013
&lt;a name="rest_code_c15991999c344247b2e46254e609f275-5"&gt;&lt;/a&gt; ├── 23.01.17
&lt;a name="rest_code_c15991999c344247b2e46254e609f275-6"&gt;&lt;/a&gt; ├── 2011-08-14
&lt;a name="rest_code_c15991999c344247b2e46254e609f275-7"&gt;&lt;/a&gt; └── 2012-03-13
&lt;/pre&gt;&lt;ol class="arabic simple" start="5"&gt;
&lt;li&gt;There is a corresponding JSON file for every image but not for HTML files.&lt;/li&gt;
&lt;li&gt;Strucure of HTML files:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="figure"&gt;
&lt;a class="reference external image-reference" href="https://encarsia.github.io/images/import_gplus_inspector.png"&gt;&lt;img alt="/images/import_gplus_inspector.thumbnail.png" src="https://encarsia.github.io/images/import_gplus_inspector.thumbnail.png"&gt;&lt;/a&gt;
&lt;p class="caption"&gt;Dumdidumdumdum...Inspektor Gadget&lt;/p&gt;
&lt;/div&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;Lesson 2&lt;/dt&gt;
&lt;dd&gt;You can open only single posts, there are a lot of deadlinks in image posts, but share and reaction information are displayed (public/private/collection/community post, +1, reshares and comments).&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class="section" id="your-entry-nikola"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/google-takeout/#id3"&gt;Your entry: Nikola&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;With low expectations I install the &lt;a class="reference external" href="https://plugins.getnikola.com/v7/import_gplus/"&gt;import plugin&lt;/a&gt; for &lt;a class="reference external" href="https://getnikola.com/"&gt;Nikola&lt;/a&gt; and see what happens. Nothing. The posts once were provided as JSON files but not in recent days.&lt;/p&gt;
&lt;p&gt;I brachiate through the files, importing HTML files first. The import plugin instantiates a new Nikola site, so I can just trial and error like hell. Then I care about deadlinks, then titles, it kepps getting better with every build.&lt;/p&gt;
&lt;p&gt;The result is a static website of my Google+ stream including +1's and comments and a link to the original post.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="theming"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/google-takeout/#id4"&gt;Theming&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In general the import is independent from any theme. I personally recommend &lt;a class="reference external" href="https://themes.getnikola.com/v7/hyde/"&gt;hyde&lt;/a&gt; which even can be improved by the &lt;tt class="docutils literal"&gt;custom.css&lt;/tt&gt; that is included in the archive.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="wishlist"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/google-takeout/#id5"&gt;Wishlist&lt;/a&gt;&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;local search function&lt;/li&gt;
&lt;li&gt;filter posts by share status&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="admonition attention"&gt;
&lt;p class="first admonition-title"&gt;Attention!&lt;/p&gt;
&lt;p class="last"&gt;In case you consider a publicly accessible stream backup you have to keep in mind that the imported data also includes all privately shared posts.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="conclusion"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/google-takeout/#id6"&gt;Conclusion&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;As a long-term heavy Google+ user you are used to inconsistencies and improvementent constantly getting worse so a Takeout archive is no more than a sparring partner to train with. It is only a matter of time until my version of the import plugin will go the way of all those Google messengers before.&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="/images/takeout_gplus_slow.gif" src="https://encarsia.github.io/images/takeout_gplus_slow.gif"&gt;
&lt;p class="caption"&gt;static Google+ Nikola site (hyde theme)&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="update"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/google-takeout/#id7"&gt;Update&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The end of Google+ has been recently announced and the issue of backing up and presentation of the data has become more relevant.&lt;/p&gt;
&lt;p&gt;You can download the plugin now from GitHub: &lt;a class="reference external" href="https://github.com/encarsia/gplus_nikola_import"&gt;encarsia/gplus_nikola_import&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The associated article to the plugin: &lt;a class="reference external" href="https://encarsia.github.io/en/posts/import-gplus-nikola/"&gt;Nikola-Import-Plugin für Google+&lt;/a&gt; (currently only in German but there is a detailed README file in the repository on how to get the plugin work).&lt;/p&gt;
&lt;br&gt;
&lt;a class="discuss-on-gplus" href="https://plus.google.com/105146352752269764996/posts/SkUoxkiTAK3"&gt;Comment on &lt;i class="fa fa-google-plus"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;</description><category>google+</category><category>nikola</category><category>python</category><category>takeout</category><guid>https://encarsia.github.io/en/posts/google-takeout/</guid><pubDate>Thu, 31 May 2018 14:10:07 GMT</pubDate></item><item><title>NoN: Fortschritte und Release</title><link>https://encarsia.github.io/en/posts/non-release/</link><dc:creator>Anke (encarsia)</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;strong&gt;Knights of Ni - little release on the prairie&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The GTK+ desktop client for static website generator Nikola has made some progress since mentioned last time here.&lt;/p&gt;
&lt;p&gt;Nikola v8 will soon be released in June. I saved the current development status as a &lt;a class="reference external" href="https://github.com/encarsia/non/releases/tag/v0.4"&gt;release&lt;/a&gt; because I cannot estimate how much effort I have to put into to make it ready for v8.&lt;/p&gt;
&lt;div class="section" id="news"&gt;
&lt;h2&gt;News&lt;/h2&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;Headerbar&lt;/dt&gt;
&lt;dd&gt;The submenu moved to the right side; on the left there is the GUI/teminal StackSwitcher; new: button that opens the Nikola handbook.&lt;/dd&gt;
&lt;dt&gt;More deployment options&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last simple"&gt;
&lt;li&gt;GitLab: use the &lt;em&gt;"Deploy to GitHub"&lt;/em&gt; button, for help on configuration see &lt;a class="reference external" href="https://gitlab.com/pages/nikola"&gt;this example Nikola site using GitLab&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Other: if there is &lt;tt class="docutils literal"&gt;DEPLOY_COMMANDS&lt;/tt&gt; variable set in your &lt;tt class="docutils literal"&gt;conf.py&lt;/tt&gt; the &lt;em&gt;"Deploy"&lt;/em&gt; button will execute the 'default' preset.&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;dt&gt;GtkApplication&lt;/dt&gt;
&lt;dd&gt;NoN now runs as a &lt;a class="reference external" href="https://encarsia.github.io/en/posts/application/"&gt;GtkApplication&lt;/a&gt;.&lt;/dd&gt;
&lt;dt&gt;Desktop entry&lt;/dt&gt;
&lt;dd&gt;Duckduckduckduckduck...&lt;/dd&gt;
&lt;dt&gt;Open post/page in browser&lt;/dt&gt;
&lt;dd&gt;Right click on an article to open it in the default webbrowser.&lt;/dd&gt;
&lt;dt&gt;Bits and pieces&lt;/dt&gt;
&lt;dd&gt;Bugfixes, improved logging, Python code is now conform to PEP8 (says pycodestyle).&lt;/dd&gt;
&lt;/dl&gt;
&lt;a class="reference external image-reference" href="https://encarsia.github.io/images/non3.png"&gt;&lt;img alt="/images/non3.thumbnail.png" src="https://encarsia.github.io/images/non3.thumbnail.png"&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;div class="section" id="links"&gt;
&lt;h2&gt;Links&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/encarsia/non"&gt;Knights of Ni-Repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://getnikola.com"&gt;Nikola&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;Previous posts&lt;/dt&gt;
&lt;dd&gt;&lt;ul class="first last"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://encarsia.github.io/en/posts/neues-projekt-knights-of-ni/"&gt;New project: Knights of Ni&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://encarsia.github.io/en/posts/non-fortschritte/"&gt;NoN: progress&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://encarsia.github.io/en/posts/non-konsole/"&gt;NoN: Konsoledierung&lt;/a&gt; (in German only)&lt;/li&gt;
&lt;/ul&gt;
&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>nikola</category><category>non</category><category>python</category><guid>https://encarsia.github.io/en/posts/non-release/</guid><pubDate>Mon, 28 May 2018 16:01:55 GMT</pubDate></item><item><title>Nikola: everything zen</title><link>https://encarsia.github.io/en/posts/nikola-zen-forkawesome/</link><dc:creator>Anke (encarsia)</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;em&gt;[UPDATE] Artikel wurde aktualisiert, keine manuelle Installation mehr notwendig&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Aktualisiertes zen-Thema für Nikola&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Ein Nachteil von &lt;a class="reference external" href="https://getnikola.com/"&gt;Nikola&lt;/a&gt; ist meiner Meinung nach die stiefmütterliche Behandlung der &lt;a class="reference external" href="https://themes.getnikola.com/"&gt;Themes&lt;/a&gt;. Das von mir genutzte &lt;em&gt;zen&lt;/em&gt;-Thema hatte ich bereits vor einiger Zeit auf Font Awesome 4-Icons geupdated und hier als Archiv zum Download bereitgestellt.&lt;/p&gt;
&lt;p&gt;Inzwischen gibt es nicht nur Version 5 von &lt;a class="reference external" href="https://fontawesome.com/"&gt;Font Awesome&lt;/a&gt;, sondern auch einen Fork des Projektes namens &lt;a class="reference external" href="https://forkawesome.github.io"&gt;Fork Awesome&lt;/a&gt; mit ein paar neuen Icons.&lt;/p&gt;
&lt;p&gt;Dank eines Kommentars einer der Nikola-Devs (thx Roberto) hier habe ich mich nun durchgerungen, meine Änderungen offiziell per Pull Request einzureichen. Die &lt;em&gt;zen&lt;/em&gt;-Familie ist nun auch im offiziellen Repository auf Font Awesome v4.7.0 geupdatet. Außerdem gibt es eine neue Variante, die die Fork Awesome-Icons nutzt. Eine manuelle Installation erübrigt sich also, sie kann direkt im Nikola-Projektordner erfolgen:&lt;/p&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_8609332611114b27a440414e7f4273fc-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; nikola theme -i zen-forkawesome
&lt;/pre&gt;&lt;p&gt;Anschließend muss das Thema nur noch in der &lt;tt class="docutils literal"&gt;conf.py&lt;/tt&gt; aktiviert werden:&lt;/p&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_bb0a998df75645fe8e9d8aaa96ccf734-1"&gt;&lt;/a&gt;THEME = "zen-forkawesome"
&lt;/pre&gt;&lt;p&gt;Desweiteren werden die Icons nun mit "fa fa-iconname" angesprochen statt zuvor mit "icon-iconname". Dies ist auch in &lt;tt class="docutils literal"&gt;conf.py.sample&lt;/tt&gt; vermerkt und wird bei der Installation des Themas angezeigt.&lt;/p&gt;
&lt;p&gt;Die Änderungen werden natürlich erst nach dem nächsten &lt;tt class="docutils literal"&gt;nikola build&lt;/tt&gt; wirksam. Da &lt;em&gt;zen-forkawesome&lt;/em&gt; auf &lt;em&gt;zen&lt;/em&gt; basiert, wird dieses Thema automatisch mit installiert.&lt;/p&gt;&lt;/div&gt;</description><guid>https://encarsia.github.io/en/posts/nikola-zen-forkawesome/</guid><pubDate>Sat, 12 May 2018 05:50:21 GMT</pubDate></item><item><title>Das Geheimnis der Sphinx</title><link>https://encarsia.github.io/en/posts/das-geheimnis-der-sphinx/</link><dc:creator>Anke (encarsia)</dc:creator><description>&lt;div&gt;&lt;div class="contents pull-right topic" id="inhalt"&gt;
&lt;p class="topic-title first"&gt;Inhalt&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/das-geheimnis-der-sphinx/#voruberlegungen" id="id8"&gt;Vorüberlegungen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/das-geheimnis-der-sphinx/#id1" id="id9"&gt;Sphinx&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/das-geheimnis-der-sphinx/#initialisierung" id="id10"&gt;Initialisierung&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/das-geheimnis-der-sphinx/#conf-py" id="id11"&gt;conf.py&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/das-geheimnis-der-sphinx/#epub" id="id12"&gt;Epub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/das-geheimnis-der-sphinx/#latex" id="id13"&gt;LaTeX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/das-geheimnis-der-sphinx/#sonstiges" id="id14"&gt;Sonstiges&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/das-geheimnis-der-sphinx/#static" id="id15"&gt;_static&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/das-geheimnis-der-sphinx/#templates" id="id16"&gt;_templates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/das-geheimnis-der-sphinx/#epub-zusatzliche-dateien-einfugen" id="id17"&gt;Epub: zusätzliche Dateien einfügen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/das-geheimnis-der-sphinx/#index-rst" id="id18"&gt;index.rst&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/das-geheimnis-der-sphinx/#bonus-mobi" id="id19"&gt;Bonus: Mobi&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/das-geheimnis-der-sphinx/#kindlegen" id="id20"&gt;KindleGen&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/das-geheimnis-der-sphinx/#problem-encoding" id="id21"&gt;Problem: Encoding&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/das-geheimnis-der-sphinx/#id7" id="id22"&gt;Nikola&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/das-geheimnis-der-sphinx/#automatisierung" id="id23"&gt;Automatisierung&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="https://encarsia.github.io/en/posts/das-geheimnis-der-sphinx/#fazit" id="id24"&gt;Fazit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Ob ich die Tutorial-Artikel nicht als E-Book zusammenfassen könnte, wurde ich gefragt. Ich kann.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Folgt mir auf meiner abenteuerlichen und actiongeladenen Reise, in dem mit Kanonen auf Spatzen geschossen wird und ich den Geheimnissen der rätselhaften Sphinx auf die Spur komme.&lt;/p&gt;
&lt;a class="reference external image-reference" href="https://encarsia.github.io/images/sph_cover.jpeg"&gt;&lt;img alt="/images/sph_cover.thumbnail.jpeg" src="https://encarsia.github.io/images/sph_cover.thumbnail.jpeg"&gt;&lt;/a&gt;
&lt;div class="section" id="voruberlegungen"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/das-geheimnis-der-sphinx/#id8"&gt;Vorüberlegungen&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Die GitHub-Page läuft mit dem statischen Seitengenerator &lt;a class="reference external" href="https://getnikola.com/"&gt;Nikola&lt;/a&gt;, die standardmäßig reStructuredText-Quelldateien parst. Da kommt ein Dokumentationstool, das diese ebenso verarbeiten kann und die Ausgabe in verschiedene Formate ermöglicht, absolut gelegen. All das bietet &lt;a class="reference external" href="http://www.sphinx-doc.org"&gt;Sphinx&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Die naheliegende, sich aber möglicherweise als naiv herausstellende, Überlegung war nun, die bestehenden Blogartikelquelldateien so vorzubereiten, dass sich mit wenig Aufwand gewünschte Ausgabeformate immer wieder neu generieren lassen.&lt;/p&gt;
&lt;p&gt;Sphinx bietet Builder für&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;EPUB&lt;/strong&gt;, dem offenen E-Book-Standard, nativ von allen E-Reader-Fabrikaten außer den Kindles unterstützt&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PDF&lt;/strong&gt;, das per LaTeX (verschiedene Engines verfügbar) erzeugt wird&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="id1"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/das-geheimnis-der-sphinx/#id9"&gt;Sphinx&lt;/a&gt;&lt;/h2&gt;
&lt;div class="section" id="initialisierung"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/das-geheimnis-der-sphinx/#id10"&gt;Initialisierung&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Nach der Installation erstellt man das Projektverzeichnis und initialisiert mit&lt;/p&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_32304e583a084555acb781253960a4b6-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; sphinx-quickstart
&lt;/pre&gt;&lt;p&gt;das Grundgerüst. Fast alle Fragen können auf der Voreinstellung belassen werden. Im Projektverzeichnis befindet sich nun die Konfigurationsdatei &lt;tt class="docutils literal"&gt;conf.py&lt;/tt&gt; sowie das Root-Dokument &lt;tt class="docutils literal"&gt;index.rst&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Die Dateien lassen sich nach dem Muster &lt;tt class="docutils literal"&gt;make Builder&lt;/tt&gt; erzeugen, die in den Unterverzeichnissen &lt;tt class="docutils literal"&gt;_build/builder&lt;/tt&gt; befinden:&lt;/p&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_03bca26eccb449d0a38befe77fc0c905-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; make epub
&lt;a name="rest_code_03bca26eccb449d0a38befe77fc0c905-2"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; make latexpdf
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="conf-py"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/das-geheimnis-der-sphinx/#id11"&gt;conf.py&lt;/a&gt;&lt;/h3&gt;
&lt;div class="section" id="epub"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/das-geheimnis-der-sphinx/#id12"&gt;Epub&lt;/a&gt;&lt;/h4&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_0c312a5bfee749bb8aff6955c527cdac-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;#HTML-Dateien vor dem Inhalt der index.rst einfügen&lt;/span&gt;
&lt;a name="rest_code_0c312a5bfee749bb8aff6955c527cdac-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;epub_pre_files&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="s1"&gt;'info.xhtml'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'Info'&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;a name="rest_code_0c312a5bfee749bb8aff6955c527cdac-3"&gt;&lt;/a&gt;&lt;span class="n"&gt;html_additional_pages&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'info'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'info.html'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_0c312a5bfee749bb8aff6955c527cdac-4"&gt;&lt;/a&gt;
&lt;a name="rest_code_0c312a5bfee749bb8aff6955c527cdac-5"&gt;&lt;/a&gt;&lt;span class="c1"&gt;#Titel erzeugen&lt;/span&gt;
&lt;a name="rest_code_0c312a5bfee749bb8aff6955c527cdac-6"&gt;&lt;/a&gt;&lt;span class="n"&gt;epub_cover&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'_static/cover.png'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'epub-cover.html'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;a name="rest_code_0c312a5bfee749bb8aff6955c527cdac-7"&gt;&lt;/a&gt;
&lt;a name="rest_code_0c312a5bfee749bb8aff6955c527cdac-8"&gt;&lt;/a&gt;&lt;span class="c1"&gt;#Stichwortverzeichnis auslassen&lt;/span&gt;
&lt;a name="rest_code_0c312a5bfee749bb8aff6955c527cdac-9"&gt;&lt;/a&gt;&lt;span class="n"&gt;epub_use_index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
&lt;a name="rest_code_0c312a5bfee749bb8aff6955c527cdac-10"&gt;&lt;/a&gt;
&lt;a name="rest_code_0c312a5bfee749bb8aff6955c527cdac-11"&gt;&lt;/a&gt;&lt;span class="c1"&gt;#Bezeichnung der Ausgabedatei&lt;/span&gt;
&lt;a name="rest_code_0c312a5bfee749bb8aff6955c527cdac-12"&gt;&lt;/a&gt;&lt;span class="n"&gt;epub_basename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;output_basename&lt;/span&gt;
&lt;a name="rest_code_0c312a5bfee749bb8aff6955c527cdac-13"&gt;&lt;/a&gt;
&lt;a name="rest_code_0c312a5bfee749bb8aff6955c527cdac-14"&gt;&lt;/a&gt;&lt;span class="c1"&gt;#für die Generierung der info.xhtml benötigt, da sonst None&lt;/span&gt;
&lt;a name="rest_code_0c312a5bfee749bb8aff6955c527cdac-15"&gt;&lt;/a&gt;&lt;span class="n"&gt;html_last_updated_fmt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt;. %B %Y'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="latex"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/das-geheimnis-der-sphinx/#id13"&gt;LaTeX&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Für die PDF-Ausgabe müssen eine Reihe von TeXLive-Paketen installiert sein (siehe &lt;a class="reference external" href="http://www.sphinx-doc.org/en/stable/builders.html#sphinx.builders.latex.LaTeXBuilder"&gt;Dokumentation&lt;/a&gt;). Als Alternativen seien an dieser Stelle das in &lt;a class="reference external" href="https://calibre-ebook.com/"&gt;Calibre&lt;/a&gt; integrierte Konvertierungstool &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;ebook-convert&lt;/span&gt;&lt;/tt&gt; und &lt;a class="reference external" href="http://www.epub2pdf.com/"&gt;epub2pdf&lt;/a&gt; genannt.&lt;/p&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_ac8b743d9b144ce980480f52ce796670-1"&gt;&lt;/a&gt;&lt;span class="c1"&gt;#Papierformat (Standard ist US-Letter), leere Seiten vermeiden&lt;/span&gt;
&lt;a name="rest_code_ac8b743d9b144ce980480f52ce796670-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;latex_elements&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
&lt;a name="rest_code_ac8b743d9b144ce980480f52ce796670-3"&gt;&lt;/a&gt;    &lt;span class="s1"&gt;'papersize'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'a4paper'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;a name="rest_code_ac8b743d9b144ce980480f52ce796670-4"&gt;&lt;/a&gt;    &lt;span class="s1"&gt;'classoptions'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'oneside,openany'&lt;/span&gt;
&lt;a name="rest_code_ac8b743d9b144ce980480f52ce796670-5"&gt;&lt;/a&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;a name="rest_code_ac8b743d9b144ce980480f52ce796670-6"&gt;&lt;/a&gt;
&lt;a name="rest_code_ac8b743d9b144ce980480f52ce796670-7"&gt;&lt;/a&gt;&lt;span class="c1"&gt;#Logo auf der Titelseite&lt;/span&gt;
&lt;a name="rest_code_ac8b743d9b144ce980480f52ce796670-8"&gt;&lt;/a&gt;&lt;span class="n"&gt;latex_logo&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'_static/logo.png'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="sonstiges"&gt;
&lt;h4&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/das-geheimnis-der-sphinx/#id14"&gt;Sonstiges&lt;/a&gt;&lt;/h4&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;Pygments&lt;/dt&gt;
&lt;dd&gt;Syntax-Highlighting, ebenfalls von Nikola unterstützt, hier wie dort bevorzuge ich das Theme "borland".&lt;/dd&gt;
&lt;dt&gt;Bezeichnung der Ausgabedatei&lt;/dt&gt;
&lt;dd&gt;Der Dateiname lässt sich für die verschiedenen Builder jeweils festlegen. Um für alle verwendeten Builder jeweils die gleiche Bezeichnung zu nutzen, verwende ich hier die eigene Variable &lt;tt class="docutils literal"&gt;output_basename&lt;/tt&gt;. Diese wird demzufolge nicht von Sphinx unterstützt und nur innerhalb der &lt;tt class="docutils literal"&gt;conf.py&lt;/tt&gt; verwendet (in den Variablen htmlhelp_basename, latex_documents, texinfo_documents, epub_basename).&lt;/dd&gt;
&lt;/dl&gt;
&lt;pre class="code python"&gt;&lt;a name="rest_code_d3e5348643154159a15b1ed39da4f3c1-1"&gt;&lt;/a&gt;&lt;span class="n"&gt;pygments_style&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'borland'&lt;/span&gt;
&lt;a name="rest_code_d3e5348643154159a15b1ed39da4f3c1-2"&gt;&lt;/a&gt;&lt;span class="n"&gt;output_basename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'gladepytutorial'&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="static"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/das-geheimnis-der-sphinx/#id15"&gt;_static&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In diesem Ordner befinden sich Stylesheets, Bilder und Skripte, die nach den vorgegebenen Dateien geladen werden. So kann man lokale individuelle Stylesheet-Anpassungen vornehmen, ohne das Theme selbst zu modifizieren. Hier befinden sich eine angepasste &lt;tt class="docutils literal"&gt;pygments.css&lt;/tt&gt;, &lt;tt class="docutils literal"&gt;cover.png&lt;/tt&gt; (Epub) und &lt;tt class="docutils literal"&gt;logo.png&lt;/tt&gt; (PDF).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="templates"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/das-geheimnis-der-sphinx/#id16"&gt;_templates&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Analog zu _static befinden sich hier individuelle Templates. Diese werden standardmäßig mit der Template-Engine &lt;a class="reference external" href="http://jinja.pocoo.org/"&gt;Jinja2&lt;/a&gt; betrieben. Hier befindet sich &lt;tt class="docutils literal"&gt;info.html&lt;/tt&gt;, die in der Epub-Ausgabe Verwendung findet.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="epub-zusatzliche-dateien-einfugen"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/das-geheimnis-der-sphinx/#id17"&gt;Epub: zusätzliche Dateien einfügen&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Sphinx bietet mit &lt;tt class="docutils literal"&gt;epub_pre_files&lt;/tt&gt; (und analog &lt;tt class="docutils literal"&gt;epub_post_files&lt;/tt&gt;) die Option, zusätzliche und nicht zur eigentlichen Dokumentation gehörenden (X)HTML-Dateien zum Epub hinzuzufügen. Diese müssen allerdings zunächst als zusätzliche HTML-Seiten generiert werden. Dafür wird in der &lt;tt class="docutils literal"&gt;conf.py&lt;/tt&gt; die Variable &lt;tt class="docutils literal"&gt;html_additional_pages&lt;/tt&gt; entsprechend gesetzt &lt;a class="footnote-reference" href="https://encarsia.github.io/en/posts/das-geheimnis-der-sphinx/#id3" id="id2"&gt;[1]&lt;/a&gt;.&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="id3" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label"&gt;&lt;col&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="https://encarsia.github.io/en/posts/das-geheimnis-der-sphinx/#id2"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;Es hat mich einen (EINEN!) Tag gekostet dies herauszufinden...&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="index-rst"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/das-geheimnis-der-sphinx/#id18"&gt;index.rst&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Dies ist das Hauptdokument, das von jedem Sphinx-Builder geparst wird. Die Bezeichnung wird in der &lt;tt class="docutils literal"&gt;conf.py&lt;/tt&gt; in der Variable &lt;tt class="docutils literal"&gt;master_doc&lt;/tt&gt; festgelegt.&lt;/p&gt;
&lt;p&gt;Als reguläre reST-Datei kann sie beliebig viel Inhalt aufnehmen. Es ist allerdings zu empfehlen und im Normalfall vermutlich sowieso bereits der Fall, das Dokument in mehrere Dateien aufzuteilen. Sphinx stellt dafür die eigene &lt;a class="reference external" href="http://www.sphinx-doc.org/en/stable/markup/toctree.html"&gt;toctree&lt;/a&gt;-Directive zur Verfügung.&lt;/p&gt;
&lt;pre class="code rest"&gt;&lt;a name="rest_code_9f2fa73333e94974ba18b72b5b0d17b8-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="ow"&gt;toctree&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;
&lt;a name="rest_code_9f2fa73333e94974ba18b72b5b0d17b8-2"&gt;&lt;/a&gt;    &lt;span class="nc"&gt;:maxdepth:&lt;/span&gt; &lt;span class="nf"&gt;1&lt;/span&gt;
&lt;a name="rest_code_9f2fa73333e94974ba18b72b5b0d17b8-3"&gt;&lt;/a&gt;    &lt;span class="nc"&gt;:numbered:&lt;/span&gt;
&lt;a name="rest_code_9f2fa73333e94974ba18b72b5b0d17b8-4"&gt;&lt;/a&gt;    &lt;span class="nc"&gt;:caption:&lt;/span&gt; &lt;span class="nf"&gt;Inhalt&lt;/span&gt;
&lt;a name="rest_code_9f2fa73333e94974ba18b72b5b0d17b8-5"&gt;&lt;/a&gt;
&lt;a name="rest_code_9f2fa73333e94974ba18b72b5b0d17b8-6"&gt;&lt;/a&gt;    teildokument1
&lt;a name="rest_code_9f2fa73333e94974ba18b72b5b0d17b8-7"&gt;&lt;/a&gt;    teildokument2
&lt;a name="rest_code_9f2fa73333e94974ba18b72b5b0d17b8-8"&gt;&lt;/a&gt;&lt;span class="cp"&gt;    ...&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;Dateien außerhalb von &lt;em&gt;toctree&lt;/em&gt; werden per &lt;em&gt;include&lt;/em&gt;-Directive hinzugefügt.&lt;/p&gt;
&lt;p&gt;Es ist auch möglich, Inhalte nur von bestimmten Buildern berücksichtigen zu lassen:&lt;/p&gt;
&lt;pre class="code rest"&gt;&lt;a name="rest_code_f990c1495752446e82180c35a2f2ff9c-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="ow"&gt;only&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt; latex
&lt;a name="rest_code_f990c1495752446e82180c35a2f2ff9c-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_f990c1495752446e82180c35a2f2ff9c-3"&gt;&lt;/a&gt;&lt;span class="p"&gt;    ..&lt;/span&gt; &lt;span class="ow"&gt;include&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt; info.rst
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="bonus-mobi"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/das-geheimnis-der-sphinx/#id19"&gt;Bonus: Mobi&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;"Ich habe doch einen Kindle und hätte auch gern so ein E-Book!"&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Aber klar doch.&lt;/p&gt;
&lt;div class="section" id="kindlegen"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/das-geheimnis-der-sphinx/#id20"&gt;KindleGen&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Amazon möchte zwar keine Epubs &lt;a class="footnote-reference" href="https://encarsia.github.io/en/posts/das-geheimnis-der-sphinx/#id6" id="id4"&gt;[2]&lt;/a&gt; unterstützen, aber sie bieten mit &lt;a class="reference external" href="https://www.amazon.com/gp/feature.html?docId=1000765211"&gt;KindleGen&lt;/a&gt; ein Tool an, welches diese in die eigenen Formate (KF8, Mobi) überführt.&lt;/p&gt;
&lt;p&gt;Auf diese Weise lässt sich mit&lt;/p&gt;
&lt;pre class="code console"&gt;&lt;a name="rest_code_edd8de8c737443b8a0a1aa60630a9cf0-1"&gt;&lt;/a&gt;&lt;span class="gp"&gt;$&lt;/span&gt; kindlegen input.epub
&lt;/pre&gt;&lt;p&gt;eine Mobi-Datei erzeugen.&lt;/p&gt;
&lt;table class="docutils footnote" frame="void" id="id6" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label"&gt;&lt;col&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="https://encarsia.github.io/en/posts/das-geheimnis-der-sphinx/#id4"&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;oder Google-Apps...&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class="section" id="problem-encoding"&gt;
&lt;h3&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/das-geheimnis-der-sphinx/#id21"&gt;Problem: Encoding&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Das aus dem Epub erstellte E-Book im Mobi-Format hat ein Darstellungsproblem mit einigen (Sonder-)Zeichen.&lt;/p&gt;
&lt;p&gt;Abhilfe schafft hier die Zeile&lt;/p&gt;
&lt;pre class="code xml"&gt;&lt;a name="rest_code_6c4b0db39834445f83e9d206ad827d7d-1"&gt;&lt;/a&gt;&lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;http-equiv=&lt;/span&gt;&lt;span class="s"&gt;"Content-Type"&lt;/span&gt; &lt;span class="na"&gt;content=&lt;/span&gt;&lt;span class="s"&gt;"text/html; charset=UTF-8"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;an Stelle von&lt;/p&gt;
&lt;pre class="code xml"&gt;&lt;a name="rest_code_e44bbb31e6d74ef0b97c592c4bd9283c-1"&gt;&lt;/a&gt;&lt;span class="nt"&gt;&amp;lt;meta&lt;/span&gt; &lt;span class="na"&gt;charset=&lt;/span&gt;&lt;span class="s"&gt;"utf-8"&lt;/span&gt; &lt;span class="nt"&gt;/&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;p&gt;innerhalb des HTML-Heads. Sphinx bietet dafür die &lt;em&gt;meta&lt;/em&gt;-Directive, die allerdings für jede Datei gesetzt werden muss:&lt;/p&gt;
&lt;pre class="code rest"&gt;&lt;a name="rest_code_6477888f771b4a158ca50eca47acbe19-1"&gt;&lt;/a&gt;&lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="ow"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;
&lt;a name="rest_code_6477888f771b4a158ca50eca47acbe19-2"&gt;&lt;/a&gt;    &lt;span class="nc"&gt;:http-equiv=Content-Type:&lt;/span&gt; &lt;span class="nf"&gt;text/html; charset=UTF-8&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="id7"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/das-geheimnis-der-sphinx/#id22"&gt;Nikola&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Das Resultat des ersten Durchlaufs von Sphinx mit der Übersichtsseite und drei Artikeln lässt vorsichtig optimistisch werden. Trotzdem gibt es an diversen Stellen Optimierungsbedarf:&lt;/p&gt;
&lt;ol class="arabic"&gt;
&lt;li&gt;&lt;p class="first"&gt;Die Nikola-eigenen Kurzverweise (slug) funktionieren nicht und erfordern eine Konvertierung in "&lt;tt class="docutils literal"&gt;:ref:&lt;/tt&gt;"erenz.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Die Artikelüberschrift ist kein Gliederungselement und fehlt demzufolge im Inhaltsverzeichnis&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Nikola-eigene Directives verursachen Fehler. Konvertierung von&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;em&gt;thumbnail&lt;/em&gt; -&amp;gt; image&lt;/li&gt;
&lt;li&gt;&lt;em&gt;listings&lt;/em&gt; -&amp;gt; literalinclude&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;relative Pfade in &lt;em&gt;image&lt;/em&gt;-Directives anpassen&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Animierte GIFs ignorieren (erzeugen Fehler im LaTeX-Durchlauf, aber nicht im Epub)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Inhaltsverzeichnisse in den Artikel überflüssig&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;"Kommentieren auf G+"-Button entfernen&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;Für die Generierung der Mobi-Datei muss jede Datei eine Meta-Anweisung erhalten&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Für eine zufriedenstellende Ausgabe ist es also erforderlich, die Ausgangsdateien hinsichtlich dieser Punkte per Skript zu modifizieren.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="automatisierung"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/das-geheimnis-der-sphinx/#id23"&gt;Automatisierung&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Das ist er, der Elefant im Raum.&lt;/p&gt;
&lt;p&gt;Sphinx läuft und die &lt;tt class="docutils literal"&gt;index.rst&lt;/tt&gt; ist eingerichtet. Die Mission  besteht nun aus folgenden Teilaufgaben:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Sphinx soll sich der aktuellen Dateien der GitHub-Page bedienen.&lt;/li&gt;
&lt;li&gt;Diese Dateien sollen gemäß der oben genannten Punkte bearbeitet werden.&lt;/li&gt;
&lt;li&gt;Sphinx soll ein Epub und ein PDF erzeugen.&lt;/li&gt;
&lt;li&gt;KindleGen soll ein Mobi erzeugen.&lt;/li&gt;
&lt;li&gt;Die Dateien sollen im entsprechenden Ordner im GitHub Page-Verzeichnis abgelegt und deployt werden.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Let's do this.&lt;/p&gt;
&lt;p&gt;Die diffizile Arbeit ist bereits erledigt: die Einrichtung von Sphinx und die Problemerfassung. Das Skript selbst arbeitet nun die oben genannten Punkte ab. Weiterhin gibt es der Übersichtlichkeit halber zwei weitere Dateien. Es befinden sich nun im Sphinx-Projektverzeichnis folgende neue Dateien:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;strong&gt;nibook.py&lt;/strong&gt;: sammelt, kopiert, bearbeitet die Quelldateien, erstellt die E-Books und füttert die GitHub-Page (&lt;a class="reference external" href="https://encarsia.github.io/listings/nibook.py.html"&gt;Code&lt;/a&gt;)&lt;/li&gt;
&lt;/ol&gt;
&lt;ol class="arabic simple" start="2"&gt;
&lt;li&gt;&lt;strong&gt;index.lst&lt;/strong&gt;: Liste von Dateinamen (ohne Endung), die im Dokument enthalten sein sollen&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class="code text"&gt;&lt;a name="rest_code_c6634b707d7941c3b7110ebcd3839dae-1"&gt;&lt;/a&gt;übersicht
&lt;a name="rest_code_c6634b707d7941c3b7110ebcd3839dae-2"&gt;&lt;/a&gt;artikel1
&lt;a name="rest_code_c6634b707d7941c3b7110ebcd3839dae-3"&gt;&lt;/a&gt;artikel2
&lt;a name="rest_code_c6634b707d7941c3b7110ebcd3839dae-4"&gt;&lt;/a&gt;artikel5
&lt;/pre&gt;&lt;ol class="arabic simple" start="3"&gt;
&lt;li&gt;&lt;strong&gt;index.tmpl&lt;/strong&gt;: aus dieser und der index.lst wird die &lt;tt class="docutils literal"&gt;index.rst&lt;/tt&gt; generiert&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class="code rst"&gt;&lt;a name="rest_code_e180e2e173704006a8024e79f3be2947-1"&gt;&lt;/a&gt;&lt;span class="cp"&gt;.. generated by nibook, posts will be inserted after ".. include-start"&lt;/span&gt;
&lt;a name="rest_code_e180e2e173704006a8024e79f3be2947-2"&gt;&lt;/a&gt;
&lt;a name="rest_code_e180e2e173704006a8024e79f3be2947-3"&gt;&lt;/a&gt;&lt;span class="cp"&gt;.. some text documentation master file, created by&lt;/span&gt;
&lt;a name="rest_code_e180e2e173704006a8024e79f3be2947-4"&gt;&lt;/a&gt;&lt;span class="cp"&gt;   sphinx-quickstart on Thu Oct 26 20:26:54 2017.&lt;/span&gt;
&lt;a name="rest_code_e180e2e173704006a8024e79f3be2947-5"&gt;&lt;/a&gt;&lt;span class="cp"&gt;   You can adapt this file completely to your liking, but it should at least&lt;/span&gt;
&lt;a name="rest_code_e180e2e173704006a8024e79f3be2947-6"&gt;&lt;/a&gt;&lt;span class="cp"&gt;   contain the root `toctree` directive.&lt;/span&gt;
&lt;a name="rest_code_e180e2e173704006a8024e79f3be2947-7"&gt;&lt;/a&gt;
&lt;a name="rest_code_e180e2e173704006a8024e79f3be2947-8"&gt;&lt;/a&gt;&lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="ow"&gt;meta&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;
&lt;a name="rest_code_e180e2e173704006a8024e79f3be2947-9"&gt;&lt;/a&gt;   &lt;span class="nc"&gt;:http-equiv=Content-Type:&lt;/span&gt; &lt;span class="nf"&gt;text/html; charset=UTF-8&lt;/span&gt;
&lt;a name="rest_code_e180e2e173704006a8024e79f3be2947-10"&gt;&lt;/a&gt;
&lt;a name="rest_code_e180e2e173704006a8024e79f3be2947-11"&gt;&lt;/a&gt;&lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="ow"&gt;only&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt; latex
&lt;a name="rest_code_e180e2e173704006a8024e79f3be2947-12"&gt;&lt;/a&gt;
&lt;a name="rest_code_e180e2e173704006a8024e79f3be2947-13"&gt;&lt;/a&gt;&lt;span class="p"&gt;    ..&lt;/span&gt; &lt;span class="ow"&gt;include&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt; info.rst
&lt;a name="rest_code_e180e2e173704006a8024e79f3be2947-14"&gt;&lt;/a&gt;
&lt;a name="rest_code_e180e2e173704006a8024e79f3be2947-15"&gt;&lt;/a&gt;&lt;span class="gh"&gt;****************************&lt;/span&gt;
&lt;a name="rest_code_e180e2e173704006a8024e79f3be2947-16"&gt;&lt;/a&gt;&lt;span class="gh"&gt;Glade-Tutorial mit PyGObject&lt;/span&gt;
&lt;a name="rest_code_e180e2e173704006a8024e79f3be2947-17"&gt;&lt;/a&gt;&lt;span class="gh"&gt;****************************&lt;/span&gt;
&lt;a name="rest_code_e180e2e173704006a8024e79f3be2947-18"&gt;&lt;/a&gt;
&lt;a name="rest_code_e180e2e173704006a8024e79f3be2947-19"&gt;&lt;/a&gt;&lt;span class="p"&gt;..&lt;/span&gt; &lt;span class="ow"&gt;toctree&lt;/span&gt;&lt;span class="p"&gt;::&lt;/span&gt;
&lt;a name="rest_code_e180e2e173704006a8024e79f3be2947-20"&gt;&lt;/a&gt;    &lt;span class="nc"&gt;:maxdepth:&lt;/span&gt; &lt;span class="nf"&gt;1&lt;/span&gt;
&lt;a name="rest_code_e180e2e173704006a8024e79f3be2947-21"&gt;&lt;/a&gt;    &lt;span class="nc"&gt;:numbered:&lt;/span&gt;
&lt;a name="rest_code_e180e2e173704006a8024e79f3be2947-22"&gt;&lt;/a&gt;    &lt;span class="nc"&gt;:caption:&lt;/span&gt; &lt;span class="nf"&gt;Inhalt&lt;/span&gt;
&lt;a name="rest_code_e180e2e173704006a8024e79f3be2947-23"&gt;&lt;/a&gt;    &lt;span class="nc"&gt;:name:&lt;/span&gt; &lt;span class="nf"&gt;mastertoc&lt;/span&gt;
&lt;a name="rest_code_e180e2e173704006a8024e79f3be2947-24"&gt;&lt;/a&gt;
&lt;a name="rest_code_e180e2e173704006a8024e79f3be2947-25"&gt;&lt;/a&gt;&lt;span class="cp"&gt;    .. include-start&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="section" id="fazit"&gt;
&lt;h2&gt;&lt;a class="toc-backref" href="https://encarsia.github.io/en/posts/das-geheimnis-der-sphinx/#id24"&gt;Fazit&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Wieder was gelernt.&lt;/p&gt;
&lt;div class="figure"&gt;
&lt;img alt="/images/sph_meme.jpg" src="https://encarsia.github.io/images/sph_meme.jpg"&gt;
&lt;p class="caption"&gt;&lt;a class="reference external" href="https://encarsia.github.io/en/pages/downloads/"&gt;Download&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;a class="discuss-on-gplus" href="https://plus.google.com/105146352752269764996/posts/YaZGKrpF6Dj"&gt;Kommentieren auf &lt;i class="fa fa-google-plus"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;</description><guid>https://encarsia.github.io/en/posts/das-geheimnis-der-sphinx/</guid><pubDate>Sun, 29 Oct 2017 10:07:05 GMT</pubDate></item><item><title>NoN: Konsoledierung</title><link>https://encarsia.github.io/en/posts/non-konsole/</link><dc:creator>Anke (encarsia)</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;strong&gt;Knights of Ni - jetzt wird's schick&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Einmal eingerichtet, benötigt man für das Befeuern einer Nikola-angetriebenen Seite nur einen Dateimanager, einen Editor, ein Terminal und normalerweise zwei Kommandos.&lt;/p&gt;
&lt;p&gt;Und weil ich es gern bequem habe, habe ich mir &lt;a class="reference external" href="https://github.com/encarsia/non"&gt;etwas Unterstützung&lt;/a&gt; dafür gebastelt.&lt;/p&gt;
&lt;div class="section" id="was-bisher-geschah"&gt;
&lt;h2&gt;Was bisher geschah&lt;/h2&gt;
&lt;p&gt;Die per Button aufgerufenen Nikola-Kommandos wurden bisher folgendermaßen verarbeitet:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;nikola build&lt;/tt&gt; lief im Hintergrund als subprocess.run(cmd)&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;nikola github_deploy&lt;/tt&gt; wurde im separaten Terminalfenster ausgeführt; dieses wurde nach der erfolgreichen Ausführung wieder geschlossen&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class="section" id="und-das-soll-jetzt-alles-vorbei-sein"&gt;
&lt;h2&gt;Und das soll jetzt alles vorbei sein?&lt;/h2&gt;
&lt;blockquote class="epigraph"&gt;
&lt;p&gt;Neu ist immer besser.&lt;/p&gt;
&lt;p class="attribution"&gt;—Barney Stinson&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Die Oberfläche ist nun per &lt;a class="reference external" href="https://lazka.github.io/pgi-docs/Gtk-3.0/classes/Stack.html"&gt;Gtk.Stack&lt;/a&gt; zweigeteilt. Per Gtk.StackSwitcher in der Headerbar lässt sich zwischen der normalen Oberfläche und einem Terminal hin- und herwechseln.&lt;/p&gt;
&lt;p&gt;Dies hat mehrere Eigenschaften und Vorteile:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Das Teminal öffnet sich im aktuellen Verzeichnis der Nikola-Instanz.&lt;/li&gt;
&lt;li&gt;Das Terminal kann beliebig verwendet werden.&lt;/li&gt;
&lt;li&gt;Beim &lt;tt class="docutils literal"&gt;exit&lt;/tt&gt; wird es nur resettet.&lt;/li&gt;
&lt;li&gt;&lt;tt class="docutils literal"&gt;build&lt;/tt&gt; und &lt;tt class="docutils literal"&gt;github_deploy&lt;/tt&gt; werden in diesem Terminal ausgeführt, wenn sie über die Oberfläche (Buttons) gestartet werden.&lt;/li&gt;
&lt;li&gt;Beim Ausführen über die Buttons wechselt der Focus auf das Terminal und nach Beenden des Tasks wieder zurück zur Oberfläche. Mit super Überblende (aktivierte Animationen erforderlich)!&lt;/li&gt;
&lt;li&gt;Optisch aufgeräumter, da kein separates Fenster mehr benötigt wird.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;img alt="/images/non_term.gif" src="https://encarsia.github.io/images/non_term.gif"&gt;
&lt;/div&gt;
&lt;div class="section" id="chronik"&gt;
&lt;h2&gt;Chronik&lt;/h2&gt;
&lt;blockquote&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://encarsia.github.io/en/posts/non-fortschritte/"&gt;NoN: Fortschritte&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://encarsia.github.io/en/posts/neues-projekt-knights-of-ni/"&gt;Neues Projekt: Knights of Ni&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;a class="discuss-on-gplus" href="https://plus.google.com/105146352752269764996/posts/6ER8kNNkCx9"&gt;Kommentieren auf &lt;i class="fa fa-google-plus"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;</description><guid>https://encarsia.github.io/en/posts/non-konsole/</guid><pubDate>Thu, 05 Oct 2017 20:45:19 GMT</pubDate></item></channel></rss>